-- phpMyAdmin SQL Dump
-- version 4.4.12
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: Nov 09, 2017 at 08:50 AM
-- Server version: 5.5.44-0ubuntu0.14.04.1-log
-- PHP Version: 5.5.9-1ubuntu4.13

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- Database: `hrms`
--

-- --------------------------------------------------------

--
-- Table structure for table `customreport`
--
DROP TABLE IF EXISTS `customreport`;
CREATE TABLE IF NOT EXISTS `customreport` (
  `id` bigint(20) NOT NULL,
  `title` varchar(30) NOT NULL,
  `description` varchar(255) DEFAULT NULL,
  `querystring` mediumtext NOT NULL,
  `category` varchar(200) NOT NULL,
  `datecreated` datetime NOT NULL,
  `createdby` bigint(20) NOT NULL,
  `lastupdatedon` datetime DEFAULT NULL,
  `lastupdatedby` bigint(20) DEFAULT NULL,
  `issendemail` tinyint(1) NOT NULL,
  `isactive` tinyint(1) NOT NULL,
  `expirytype` varchar(255) NOT NULL,
  `expirydate` varchar(255) NOT NULL,
  `postpone` enum('N','Y') NOT NULL,
  `date` date NOT NULL
) ENGINE=InnoDB AUTO_INCREMENT=99909 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `customreport`
--

INSERT INTO `customreport` (`id`, `title`, `description`, `querystring`, `category`, `datecreated`, `createdby`, `lastupdatedon`, `lastupdatedby`, `issendemail`, `isactive`, `expirytype`, `expirydate`, `postpone`, `date`) VALUES
(2, 'Rates', 'Contractor vs Client Rates', 'select ContractorRate, Rate as ClientRate from rate where ContractorRate >= rate', '', '2009-08-04 15:33:33', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(5, 'RECON-Last Month\\''s Billing', 'Run after the 1st - Check Last Month''s Numbers', 'SELECT \n   TD.id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   employeetype,\n   isactive,\n   status,\n   Month,\n   (SELECT  max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber,\n   (SELECT  max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND PR.currentflag = ''Y'') AS Contract,   \n   TD.jobid, \n   TD.jobcode,\n   TD.job,\n   sum(hours) TotalHours, \n    CASE  \n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(contractorrate) FROM rate RT \n                                 WHERE  TD.weekday BETWEEN effectivedate AND expirydate \n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\n      ELSE contractorrate\n    \n   END  AS Contractorrate,   \n   CASE  \n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\n      ELSE  rate\n \n   END  AS Rate \n FROM \n (SELECT \n  E.id, \n  E.salutation, \n  E.username, \n  E.firstname, \n  E.lastname,\n  E.employeetype,\n  E.isactive,\n  E.status,\n  TD.jobid,\n  monthname(TD.weekday) AS Month,\n  TD.job,\n  TD.jobcode,\n  DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, \n    \n  sum(hours) AS hours \nFROM timesheetdata  TD , employee   E    \nWHERE   TD.employeeid = E.id  \n     \n    AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-01'')) \n                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))) \n    AND  TD.paycode in (''RT'',''OT'')\n    AND  TD.hours > 0\nGROUP BY \n  E.id, \n  E.salutation, \n  E.username, \n  E.firstname, \n  E.lastname,\n  E.employeetype,\n  E.isactive,\n  TD.weekday,\n  TD.jobid,\n  TD.job,\n  TD.jobcode,\n  E.status) AS TD \n  LEFT  OUTER JOIN rate AS R\n  ON (TD.id = R.employeeid  \n  AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\nGROUP BY\n   Month,\n   TD.id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   employeetype,\n   isactive,\n   status,\n   Contractorrate,\n     TD.jobid, \n   TD.job,\n   Rate\nORDER BY \n   Month,\n   Contract,\n   jobid,\n   employeetype DESC ', '', '2011-05-10 21:01:59', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(7, 'Receivables - ToDate ', 'Receivables To Date ', 'SELECT \n   TD.id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   employeetype,\n   jobcategory,\n   isactive,\n   status,\n   Month,\n   Year,\n   (SELECT  max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber,\n   (SELECT  max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND PR.currentflag = ''Y'') AS Contract,   \n   TD.jobid, \n   TD.jobcode,\n   TD.job,\n   sum(hours) TotalHours,  \n   CASE  \n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\n      ELSE  rate\n \n   END  AS Rate \n FROM \n (SELECT \n  E.id, \n  E.salutation, \n  E.username, \n  E.firstname, \n  E.lastname,\n  E.employeetype,\n  E.isactive,\n  E.status,\n  E.jobcategory,\n  TD.jobid,\n  monthname(TD.weekday) AS Month,\n  year(TD.weekday) AS Year,\n  TD.job,\n  TD.jobcode,\n  DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, \n  sum(hours) AS hours \nFROM timesheetdata  TD , employee   E    \nWHERE   TD.employeeid = E.id                 \n    AND  TD.paycode in (''RT'',''OT'')\n    AND  TD.hours > 0\n    AND  TD.weekday    BETWEEN  ''2004-01-01'' AND now()\n \nGROUP BY \n  E.id, \n  E.salutation, \n  E.username, \n  E.firstname, \n  E.lastname,\n  E.employeetype,\n  E.isactive,\n  E.jobcategory,\n  TD.weekday,\n  TD.jobid,\n  TD.job,\n  TD.jobcode,\n  E.status) AS TD \n  LEFT  OUTER JOIN rate AS R\n  ON (TD.id = R.employeeid  \n  AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\n\nGROUP BY\n   Month,\n   Year,\n   TD.id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   employeetype,\n   isactive,\n   status,\n   TD.jobid, \n   TD.job,\n   jobcategory,\n   Rate\nunion\nselect  \n   999, \n   ''Mr'', \n   ''manual'', \n   ''Ira'', \n   ''Schonberger'',\n   ''Contractor'',\n   '' '',\n   ''N'',\n   ''inactive'',\n   ''October'',\n   ''2004'',\n   ''CAB'',  \n   ''CAB'', \n   ''CAB'',\n   ''CAB'',\n   ''CAB'',\n   11400.00,  \n    1\nunion\nselect  \n   999, \n   ''Mr'', \n   ''manual'', \n   ''Ira'', \n   ''Schonberger'',\n   ''Contractor'',\n   '' '',\n   ''N'',\n   ''inactive'',\n   ''October'',\n   ''2004'',\n   ''CAB'',  \n   ''CAB'', \n   ''CAB'',\n   ''CAB'',\n  ''CAB'',\n   18240.00,\n   1\nunion\nselect  \n   999, \n   ''Mr'', \n   ''manual'', \n   ''Peter'', \n   ''Alman'',\n   ''Contractor'',\n   '' '',\n   ''N'',\n   ''inactive'',\n   ''September'',\n   ''2004'',\n   ''CAB'',  \n   ''CAB'', \n   ''CAB'',\n   ''CAB'',\n  ''CAB'',\n   16320.00,\n   1\nunion\nselect  \n   999, \n   ''Mr'', \n   ''manual'', \n   ''Peter'', \n   ''Alman'',\n   ''Contractor'',\n   '' '',\n   ''N'',\n   ''inactive'',\n   ''October'',\n   ''2004'',\n   ''CAB'',  \n   ''CAB'', \n   ''CAB'',\n   ''CAB'',\n  ''CAB'',\n   13600.00,\n   1\nunion\nselect  \n   999, \n   ''Mr'', \n   ''manual'', \n   ''Peter'', \n   ''Alman'',\n   ''Contractor'',\n   '' '',\n   ''N'',\n   ''inactive'',\n   ''November'',\n   ''2004'',\n   ''CAB'',  \n   ''CAB'', \n   ''CAB'',\n   ''CAB'',\n  ''CAB'',\n   16320.00,\n   1\nunion\nselect  \n   999, \n   ''Mr'', \n   ''manual'', \n   ''Pritesh'', \n   ''Desai'',\n   ''Contractor'',\n   '' '',\n   ''N'',\n   ''inactive'',\n   ''October'',\n   ''2004'',\n   ''CAB'',  \n   ''CAB'', \n   ''CAB'',\n   ''CAB'',\n  ''CAB'',\n   18000.00,\n   1\nunion\nselect  \n   999, \n   ''Mr'', \n   ''manual'', \n   ''Pritesh'', \n   ''Desai'',\n   ''Contractor'',\n   '' '',\n   ''N'',\n   ''inactive'',\n   ''November'',\n   ''2004'',\n   ''CAB'',  \n   ''CAB'', \n   ''CAB'',\n   ''CAB'',\n  ''CAB'',\n   17280.00,\n   1\nunion\nselect  \n   999, \n   ''Mr'', \n   ''manual'', \n   ''Srihari'', \n   ''Bandigari'',\n   ''Contractor'',\n   '' '',\n   ''N'',\n   ''inactive'',\n   ''October'',\n   ''2004'',\n   ''CAB'',  \n   ''CAB'', \n   ''CAB'',\n   ''CAB'',\n  ''CAB'',\n   12240.00,\n   1\nunion\nselect  \n   999, \n   ''Mr'', \n   ''manual'', \n   ''Srihari'', \n   ''Bandigari'',\n   ''Contractor'',\n   '' '',\n   ''N'',\n   ''inactive'',\n   ''November'',\n   ''2004'',\n   ''CAB'',  \n   ''CAB'', \n   ''CAB'',\n   ''CAB'',\n  ''CAB'',\n   16320.00,\n   1\nunion\nselect  \n   999, \n   ''Mr'', \n   ''manual'', \n   ''Suresh'', \n   ''Parsa'',\n   ''Contractor'',\n   '' '',\n   ''N'',\n   ''inactive'',\n   ''September'',\n   ''2004'',\n   ''CAB'',  \n   ''CAB'', \n   ''CAB'',\n   ''CAB'',\n  ''CAB'',\n   12920.00,\n   1\nunion\nselect  \n   999, \n   ''Mr'', \n   ''manual'', \n   ''William'', \n   ''Sserebe'',\n   ''Contractor'',\n   '' '',\n   ''N'',\n   ''inactive'',\n   ''March'',\n   ''2004'',\n   ''CAB'',  \n   ''CAB'', \n   ''CAB'',\n   ''CAB'',\n  ''CAB'',\n   12800.00,\n   1\nunion\nselect  \n   999, \n   ''Mr'', \n   ''manual'', \n   ''William'', \n   ''Sserebe'',\n   ''Contractor'',\n   '' '',\n   ''N'',\n   ''inactive'',\n   ''April'',\n   ''2004'',\n   ''CAB'',  \n   ''CAB'', \n   ''CAB'',\n   ''CAB'',\n  ''CAB'',\n   12800.00,\n   1\nunion\nselect  \n   999, \n   ''Mr'', \n   ''manual'', \n   ''William'', \n   ''Sserebe'',\n   ''Contractor'',\n   '' '',\n   ''N'',\n   ''inactive'',\n   ''April'',\n   ''2004'',\n   ''CAB'',  \n   ''CAB'', \n   ''CAB'',\n   ''CAB'',\n  ''CAB'',\n   6400.00,\n   1\nORDER BY \n   Year,\n   Month,\n   username,\n   Contract,\n   jobid,\n   employeetype DESC ', '', '2011-04-04 12:22:57', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(8, 'Receivables - 2009', '2009 Receivables', 'SELECT \r\n   TD.id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   isactive,\r\n   status,\r\n   Month,\r\n   (SELECT max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber,\r\n   (SELECT  max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND PR.currentflag = \\''Y\\'') AS Contract,   \r\n   TD.jobid, \r\n   TD.jobcode,\r\n   TD.job,\r\n   sum(hours) TotalHours, \r\n    CASE  \r\n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(contractorrate) FROM rate RT \r\n                                 WHERE  TD.weekday BETWEEN effectivedate AND expirydate \r\n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\r\n      ELSE contractorrate\r\n    \r\n   END  AS Contractorrate,   \r\n   CASE  \r\n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \r\n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \r\n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\r\n      ELSE  rate\r\n \r\n   END  AS Rate \r\n FROM \r\n (SELECT \r\n  E.id, \r\n  E.salutation, \r\n  E.username, \r\n  E.firstname, \r\n  E.lastname,\r\n  E.employeetype,\r\n  E.isactive,\r\n  E.status,\r\n  TD.jobid,\r\n  monthname(TD.weekday) AS Month,\r\n  TD.job,\r\n  TD.jobcode,\r\n  DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, \r\n    \r\n  sum(hours) AS hours \r\nFROM timesheetdata  TD , employee   E    \r\nWHERE   TD.employeeid = E.id  \r\n    AND  TD.weekday    BETWEEN  \\''2009-01-01\\'' \r\n                           AND  \\''2009-12-31\\''\r\n    AND  TD.paycode in (\\''RT\\'',\\''OT\\'')\r\n    AND  TD.hours > 0\r\nGROUP BY \r\n  E.id, \r\n  E.salutation, \r\n  E.username, \r\n  E.firstname, \r\n  E.lastname,\r\n  E.employeetype,\r\n  E.isactive,\r\n  TD.weekday,\r\n  TD.jobid,\r\n  TD.job,\r\n  TD.jobcode,\r\n  E.status) AS TD \r\n  LEFT  OUTER JOIN rate AS R\r\n  ON (TD.id = R.employeeid  \r\n  AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\r\nGROUP BY\r\n   Month,\r\n   TD.id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   isactive,\r\n   status,\r\n   Contractorrate,\r\n     TD.jobid, \r\n   TD.job,\r\n   Rate\r\nORDER BY \r\n   Month,\r\n   Contract,\r\n   jobid,\r\n   employeetype DESC ', '', '2010-02-23 17:28:09', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(9, 'RECON-Last Month\\''s TS Status', 'Run after the 1st - Check Last month Saved/Rejected/Unapproved Time', 'SELECT     E.id,    E.salutation,    E.username,    E.firstname, \r\n   E.lastname,   E.employeetype,   E.isactive,   E.status,   TD.weekendingdate,   TD.status\r\nFROM timesheet  TD , employee   E    \r\nWHERE   TD.employeeid = E.id                 \r\n    AND  TD.status NOT IN (\\"Approved\\",\\"Closed\\")\r\n    AND  TD.weekendingdate       BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,\\''%Y-%m-01\\'')) \r\n                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))) \r\n    \r\nORDER BY TD.weekendingdate\r\n    ', '', '2010-02-23 10:28:18', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(10, 'RECON-Last Month\\''s Missing TS', 'Run after the 1st - Last Month\\''s Missing TimeSheets ', 'SELECT Base.* \r\nFROM  \r\n  (SELECT * from\r\n  (SELECT     \r\n   E.id, E.salutation, E.username, E.firstname, \r\n   E.lastname, E.employeetype, E.isactive         \r\n  FROM  employee as  E \r\n   where E.status = \\''Active\\'' AND username \r\n   NOT IN (\\''fryawe\\'',\\''akirunda\\'',\\''administrator\\'',\\''TSGADMINDL\\'')) AS E,              \r\n   \r\n  (SELECT  DISTINCT weekendingdate \r\n  FROM timesheet AS TD                          \r\n  WHERE  TD.weekendingdate  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,\\''%Y-%m-01\\'')) \r\n                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) AS W  ) AS Base    \r\n\r\n LEFT OUTER JOIN \r\n \r\n (SELECT  employeeid,weekendingdate \r\n FROM timesheet  TD                          \r\n WHERE  TD.weekendingdate  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,\\''%Y-%m-01\\'')) \r\n                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) AS Actual\r\n                                               \r\n ON (Actual.employeeid = Base.id AND Actual.weekendingdate = Base.weekendingdate)  \r\n WHERE   Actual.weekendingdate IS NULL\r\n ORDER BY lastname,Actual.weekendingdate\r\n ', '', '2010-02-23 10:28:54', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(13, 'RECON-ActiveTitlesAndJobNumber', 'Run anytime - ProjectTitle vs JobNumber', 'select username,firstname,lastname, projectcategory, title,\r\n r.* \r\n FROM \r\n  employeerelationship r,\r\n  employee e, \r\n  (SELECT DISTINCT projectcategory, title, jobcode FROM project WHERE  \r\n  currentflag = \\''Y\\'') AS p\r\n \r\n where e.id = r.employeeid \r\n and curdate() BETWEEN relationshipstartdate and relationshipenddate  \r\n AND r.jobnumber = p.jobcode\r\norder by username, relationshipstartdate', '', '2010-03-31 16:18:20', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(15, 'RECON-ActiveRelationshipDetail', 'Run anytime - Only active relationships', 'select username,firstname,lastname, (select max(title) from project where projectid = r.jobnumber) as Project, (select count(title) from project where projectid = r.jobnumber) as ProjectTitleCount,\r\n r.* FROM employeerelationship r, employee e where e.id = r.employeeid and curdate() BETWEEN relationshipstartdate and relationshipenddate order by username, relationshipstartdate', '', '2010-02-22 12:04:30', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(16, 'RECON-AsOfDate JNsVsPrevious', 'Run before the 1st - Compare JNs between 2 previous invoicing periods', 'select \r\ncur.*,\r\n(SELECT  max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = cur.jobcode and cur.id = RL.employeeid AND now() BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber,\r\n(SELECT sum(hours) AS hours FROM timesheetdata  TD   WHERE cur.jobcode = TD.jobcode AND cur.id = TD.employeeid\r\n     AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT(NOW(),\\''%Y-%m-01\\''))\r\n                           AND  (SELECT  LAST_DAY( NOW()))\r\n     AND  TD.paycode in (\\''RT\\'',\\''OT\\'')) AS Hours\r\n \r\nfrom \r\n(SELECT distinct monthname(TD.weekday) as month,E.id, E.salutation, E.username, E.firstname, E.lastname,   TD.job, TD.jobcode\r\nFROM timesheetdata TD, employee E\r\nWHERE TD.employeeid = E.id and TD.hours > 0\r\nAND TD.weekday\r\nBETWEEN (\r\n\r\nSELECT DATE_FORMAT( DATE_ADD( NOW( ) , INTERVAL -0\r\nMONTH ) , \\''%Y-%m-01\\'' ) \r\n)\r\nAND (\r\n\r\nSELECT LAST_DAY( DATE_ADD( NOW( ) , INTERVAL -0\r\nMONTH ) ) \r\n)) as cur left outer join \r\n(SELECT distinct monthname(TD.weekday) as month, E.id, E.salutation, E.username, E.firstname, E.lastname,   TD.job, TD.jobcode\r\nFROM timesheetdata TD, employee E\r\nWHERE TD.employeeid = E.id and TD.hours > 0\r\nAND TD.weekday\r\nBETWEEN (\r\n\r\nSELECT DATE_FORMAT( DATE_ADD( NOW( ) , INTERVAL -1\r\nMONTH ) , \\''%Y-%m-01\\'' ) \r\n)\r\nAND (\r\n\r\nSELECT LAST_DAY( DATE_ADD( NOW( ) , INTERVAL -1\r\nMONTH ) ) \r\n)) as prev\r\non (cur.id = prev.id and cur.jobcode=prev.jobcode)\r\nwhere (cur.jobcode is NULL or prev.jobcode is NULL)', '', '2010-02-25 18:16:08', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(17, 'RECON-AsOfDate Hours', 'Run before the 1st - Hours and Jobnumbers booked as of now.', 'SELECT \r\n   TD.id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   isactive,\r\n   status,\r\n   Month,\r\n   Year,\r\n   (SELECT  max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber,\r\n   (SELECT  max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND PR.currentflag = \\''Y\\'') AS Contract,   \r\n   TD.jobid, \r\n   TD.jobcode,\r\n   TD.job,\r\n   sum(hours) TotalHours,  \r\n   CASE  \r\n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \r\n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \r\n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\r\n      ELSE  rate\r\n \r\n   END  AS Rate \r\n FROM \r\n (SELECT \r\n  E.id, \r\n  E.salutation, \r\n  E.username, \r\n  E.firstname, \r\n  E.lastname,\r\n  E.employeetype,\r\n  E.isactive,\r\n  E.status,\r\n  TD.jobid,\r\n  monthname(TD.weekday) AS Month,\r\n  year(TD.weekday) AS Year,\r\n  TD.job,\r\n  TD.jobcode,\r\n  DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, \r\n  sum(hours) AS hours \r\nFROM timesheetdata  TD , employee   E    \r\nWHERE   TD.employeeid = E.id                 \r\n    AND  TD.paycode in (\\''RT\\'',\\''OT\\'')\r\n    AND  TD.hours > 0\r\n    AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT( NOW()  ,\\''%Y-%m-01\\'')) AND now()\r\n \r\nGROUP BY \r\n  E.id, \r\n  E.salutation, \r\n  E.username, \r\n  E.firstname, \r\n  E.lastname,\r\n  E.employeetype,\r\n  E.isactive,\r\n  TD.weekday,\r\n  TD.jobid,\r\n  TD.job,\r\n  TD.jobcode,\r\n  E.status) AS TD \r\n  LEFT  OUTER JOIN rate AS R\r\n  ON (TD.id = R.employeeid  \r\n  AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\r\nGROUP BY\r\n   Month,\r\n   Year,\r\n   TD.id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   isactive,\r\n   status,\r\n   TD.jobid, \r\n   TD.job,\r\n   Rate\r\nORDER BY \r\n   Year,\r\n   Month,\r\n   Contract,\r\nTD.id,\r\nPONumber,\r\n   jobid,\r\n   employeetype DESC', '', '2010-07-28 19:47:37', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(18, 'PAYROLL-LastMonth''s Recon', 'Last months payroll reconciliation', 'SELECT \n   id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   employeetype,\n   isactive,\n   status,\n   Month,\n   PayrollCategory,\n   HoursWorked,\n   HoursBilled,\n   HoursInPeriod,\n   HolidaysHoursInPeriod,\n   COALESCE(PaidHolidaysToDate,0) AS PaidHolidaysToDate,\n   COALESCE(PaidSickDaysToDate,0) AS PaidSickDaysToDate,\n   COALESCE(PaidVacationDaysToDate,0) AS PaidVacationDaysToDate,\n   COALESCE(PaidPersonalDaysToDate,0) AS PaidPersonalDaysToDate\n FROM \n (SELECT \n  E.id, \n  E.salutation, \n  E.username, \n  E.firstname, \n  E.lastname,\n  E.employeetype,\n  E.isactive,\n  E.status,\n  monthname(TD.weekday) AS Month,\n  DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, \n       (SELECT  max(status) FROM  timesheet T WHERE  \n    E.id = T.employeeid  and  T.weekendingdate between (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-01''))AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) AS TimesheetStatus,\n  sum(hours) HoursWorked,\n\n  CASE WHEN \n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-01'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) = 0 \n                       AND employeetype IN (''Full Time'' ) \n       THEN ''REGULAR''\n       WHEN \n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T  \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-01'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) < 0 \n       THEN ''HOURLY''\n       WHEN \n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-01'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) > 0\n                       AND employeetype IN (''Full Time'' ) \n             \n       THEN ''REGULAR WITH OVERTIME''\n       ELSE ''HOURLY'' \n  END  PayrollCategory,\n  \n   \n   sum(hours) - COALESCE((SELECT sum(hours) FROM timesheetdata T \n                     WHERE T.employeeid = E.id\n                       AND  T.job  IN (''Vacation'',''Sick'',''Personal'',''Paid Holiday'')          \n                       AND  T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-01'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))),0) HoursBilled,\n  (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \n   WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n   AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-01'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) HoursInPeriod,\n  (SELECT count(1)*8 FROM publicholidays  PH\n   WHERE  PH.publicholidaydate BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-01'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) as  HolidaysHoursInPeriod,\n \n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid = E.id \n   and job IN (''Paid Holiday'') \n   AND Year(T.weekday) = year(NOW())) AS PaidHolidaysToDate,\n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid =   E.id \n   and job IN (''Sick'') \n   AND Year(T.weekday) = year(NOW())) AS PaidSickDaysToDate,\n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid = E.id \n   and job IN (''Vacation'') \n   AND Year(T.weekday) = year(NOW())) AS PaidVacationDaysToDate,\n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid = E.id \n   and job IN (''Personal'') \n   AND Year(T.weekday) = year(NOW()))AS PaidPersonalDaysToDate \nFROM timesheetdata  TD , employee   E    \nWHERE   TD.employeeid = E.id  \n    AND   E.isactive = "Y"\n    AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-01'')) \n                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))) \n    AND  TD.hours > 0\nGROUP BY \n  E.id, \n  E.salutation, \n  E.username, \n  E.firstname, \n  E.lastname,\n  E.employeetype,\n  E.isactive,\n  E.status ) AS TD \nGROUP BY\n   id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   employeetype,\n   isactive,\n   status,\n   Month\nORDER BY \n   Month,\n   employeetype,\n   lastname DESC ', '', '2011-01-07 18:32:21', 45, NULL, 45, 0, 0, '', '', 'N', '0000-00-00'),
(19, 'RECON-Last Month\\''s Overtime', 'Run after the 1st - Employees with OT in the invoicing period', 'SELECT \r\n   id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   isactive,\r\n   status,\r\n   Month,\r\n   PayrollCategory,\r\n   HoursWorked,\r\n   HoursBilled,\r\n   HoursInPeriod,\r\n   HolidaysHoursInPeriod,\r\n   COALESCE(PaidHolidaysToDate,0) AS PaidHolidaysToDate,\r\n   COALESCE(PaidSickDaysToDate,0) AS PaidSickDaysToDate,\r\n   COALESCE(PaidVacationDaysToDate,0) AS PaidVacationDaysToDate,\r\n   COALESCE(PaidPersonalDaysToDate,0) AS PaidPersonalDaysToDate\r\n FROM \r\n (SELECT \r\n  E.id, \r\n  E.salutation, \r\n  E.username, \r\n  E.firstname, \r\n  E.lastname,\r\n  E.employeetype,\r\n  E.isactive,\r\n  E.status,\r\n  monthname(TD.weekday) AS Month,\r\n  DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, \r\n       (SELECT  max(status) FROM  timesheet T WHERE  \r\n    E.id = T.employeeid  and  T.weekendingdate between (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,\\''%Y-%m-01\\''))AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) AS TimesheetStatus,\r\n  sum(hours) HoursWorked,\r\n\r\n  CASE WHEN \r\n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \r\n                       WHERE  DAYNAME(weekday) NOT IN (\\''Saturday\\'',\\''Sunday\\'')\r\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,\\''%Y-%m-01\\'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) = 0 \r\n                       AND employeetype IN (\\''Full Time\\'' ) \r\n       THEN \\''REGULAR\\''\r\n       WHEN \r\n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T  \r\n                       WHERE  DAYNAME(weekday) NOT IN (\\''Saturday\\'',\\''Sunday\\'')\r\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,\\''%Y-%m-01\\'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) < 0 \r\n       THEN \\''HOURLY\\''\r\n       WHEN \r\n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \r\n                       WHERE  DAYNAME(weekday) NOT IN (\\''Saturday\\'',\\''Sunday\\'')\r\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,\\''%Y-%m-01\\'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) > 0\r\n                       AND employeetype IN (\\''Full Time\\'' ) \r\n             \r\n       THEN \\''REGULAR WITH OVERTIME\\''\r\n       ELSE \\''HOURLY\\'' \r\n  END  PayrollCategory,\r\n  \r\n   \r\n   sum(hours) - COALESCE((SELECT sum(hours) FROM timesheetdata T \r\n                     WHERE T.employeeid = E.id\r\n                       AND  T.job  IN (\\''Vacation\\'',\\''Sick\\'',\\''Personal\\'',\\''Paid Holiday\\'')          \r\n                       AND  T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,\\''%Y-%m-01\\'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))),0) HoursBilled,\r\n  (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \r\n   WHERE  DAYNAME(weekday) NOT IN (\\''Saturday\\'',\\''Sunday\\'')\r\n   AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,\\''%Y-%m-01\\'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) HoursInPeriod,\r\n  (SELECT count(1)*8 FROM publicholidays  PH\r\n   WHERE  PH.publicholidaydate BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,\\''%Y-%m-01\\'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) as  HolidaysHoursInPeriod,\r\n \r\n  (SELECT sum(hours)/8 FROM timesheetdata T \r\n   WHERE employeeid = E.id \r\n   and job IN (\\''Paid Holiday\\'') \r\n   AND Year(T.weekday) = \\''2010\\'') AS PaidHolidaysToDate,\r\n  (SELECT sum(hours)/8 FROM timesheetdata T \r\n   WHERE employeeid =  E.id \r\n   and job IN (\\''Sick\\'') \r\n   AND Year(T.weekday) = \\''2010\\'') AS PaidSickDaysToDate,\r\n  (SELECT sum(hours)/8 FROM timesheetdata T \r\n   WHERE employeeid = E.id \r\n   and job IN (\\''Vacation\\'') \r\n   AND Year(T.weekday) = \\''2010\\'') AS PaidVacationDaysToDate,\r\n  (SELECT sum(hours)/8 FROM timesheetdata T \r\n   WHERE employeeid = E.id \r\n   and job IN (\\''Personal\\'') \r\n   AND Year(T.weekday) = \\''2010\\'') AS PaidPersonalDaysToDate \r\nFROM timesheetdata  TD , employee   E    \r\nWHERE   TD.employeeid = E.id  \r\n    AND   E.isactive = \\"Y\\"\r\n    AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,\\''%Y-%m-01\\'')) \r\n                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))) \r\n    AND  TD.hours > 0\r\nGROUP BY \r\n  E.id, \r\n  E.salutation, \r\n  E.username, \r\n  E.firstname, \r\n  E.lastname,\r\n  E.employeetype,\r\n  E.isactive,\r\n  E.status ) AS TD \r\nWHERE HoursWorked > HoursInPeriod\r\nGROUP BY\r\n   id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   isactive,\r\n   status,\r\n   Month\r\nORDER BY \r\n   Month,\r\n   employeetype,\r\n   lastname DESC \r\n ', '', '2010-02-23 13:17:38', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(20, 'PAYROLL-Period - 2 PAYCHEX', 'Period 2, last month 16th to the EOM', 'SELECT \n    salutation Salutation, \n   firstname   FirstName, \n   lastname    LastName,\n   employeetype   EmployeeType,\n   ''0735-7956''   OurAccount,\n   concat(CAST( (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16''))  AS CHAR(10)  ), '' - '',CAST((SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))) AS CHAR(10))) AS PayrollPeriod,\n   ''           ''   Checkdate,\n   PayrollCategory,\n   CASE WHEN\n((HoursWorked > HoursInPeriod or HoursWorked > 86.67)  and employeetype = ''Full Time'')        THEN\n         ''REGULAR''\n        WHEN\n         PayrollCategory = ''REGULAR''\n        THEN\n         ''REGULAR''\n        ELSE HoursWorked\n   END  AS HoursWorked,\n   rate,\n   '' '',\n   CASE WHEN\n          HoursWorked-HoursInPeriod > 0  and employeetype = ''Full Time''  \n        THEN\n          HoursWorked-HoursInPeriod\n        ELSE 0\n   END  AS ExtraHours\n \n FROM\n (SELECT \n   id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   employeetype,\n   sum(hours) HoursWorked,\n   CASE WHEN \n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) = 0 \n                       AND employeetype IN (''Full Time'' ) OR (sum(hours) between 86.67 AND (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))))\n                       AND employeetype NOT IN (''Hourly'' )\n       THEN ''REGULAR''\n       WHEN \n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T  \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) < 0 \n       THEN ''HOURLY''\n       WHEN \n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) > 0\n                       AND employeetype IN (''Full Time'' ) \n             \n       THEN ''REGULAR WITH OVERTIME''\n       ELSE ''HOURLY'' \n   END  PayrollCategory,\n  \n   \n   sum(hours) - COALESCE((SELECT sum(hours) FROM timesheetdata T \n                     WHERE T.employeeid = data.id\n                       AND  T.job  IN (''Vacation'',''Sick'',''Personal'',''Paid Holiday'')          \n                       AND  T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))),0) HoursBilled,\n  (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \n   WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n   AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) HoursInPeriod,\n  (SELECT count(1)*8 FROM publicholidays  PH\n   WHERE  PH.publicholidaydate BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) as  HolidaysHoursInPeriod,\n \n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid = data.id \n   and job IN (''Paid Holiday'') \n   AND Year(T.weekday) = YEAR(NOW())) AS PaidHolidaysToDate,\n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid =   data.id \n   and job IN (''Sick'') \n   AND Year(T.weekday) = YEAR(NOW())) AS PaidSickDaysToDate,\n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid = data.id \n   and job IN (''Vacation'') \n   AND Year(T.weekday) = YEAR(NOW())) AS PaidVacationDaysToDate,\n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid = data.id \n   and job IN (''Personal'') \n   AND Year(T.weekday) = YEAR(NOW())) AS PaidPersonalDaysToDate,  \n   CASE  \n      WHEN\n        ID IN (55)  \n      THEN\n        rate\n      ELSE\n        "On File"\n   END AS rate \n from  \n  (SELECT \n   E.id, \n   E.salutation, \n   E.username, \n   E.firstname, \n   E.lastname,\n   E.employeetype,\n   E.isactive,\n   E.status,\n   TD.weekday ,\n   hours,\n   TD.jobid,\n   CASE  \n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \n                                 AND RT.employeeid = TD.employeeid AND (jobid is NULL or jobid = 0))\n      ELSE  rate\n \n   END  AS Rate \n\n  FROM   timesheetdata AS TD INNER JOIN employee as E    \n  on  (TD.employeeid = E.id  ) \n\n\n  LEFT  OUTER JOIN rate AS R\n  ON (TD.employeeid = R.employeeid    AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\n\n  where   E.isactive = "Y"\n    AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16'')) \n                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))) \n    AND  TD.hours > 0\n    AND employeetype <> ''Contractor'' \n\n\n   ) AS data\nGROUP BY\n   id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   employeetype,\n   rate\n) AS payroll\nwhere id not in (60,134,64,92,91,103,104,138,55,97,141)\nUNION ALL\nselect \n\n   ''Mr'', \n   ''Tony'', \n   ''Zanfardino'',\n   ''Hourly'',\n   ''0735-7956'' ,\n   concat(CAST( (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16''))  AS CHAR(10)  ), '' - '',CAST((SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))) AS CHAR(10))) AS PayrollPeriod,\n   ''           ''   Checkdate,\n   ''HOURLY'',\n    7.00,\n    72.00,\n    '''',\n    0 \nORDER by\n   employeetype,\n   PayrollCategory,\n   lastname    ', '', '2011-12-21 11:18:31', 80, NULL, 80, 0, 0, '1|onetime', '2011-12-21 23:59:00', 'N', '0000-00-00'),
(21, 'PAYROLL-Period - 1 PAYCHEX', 'Period 1, current month 1st to the 15th', 'SELECT \n \n   salutation   Salutation, \n   firstname   FirstName, \n   lastname   LastName,\n   employeetype   EmployeeType,\n   ''0735-7956''   OurAccount,\n  concat(CAST( (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01''))  AS CHAR(10)  ), '' - '',CAST((SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15'')) AS CHAR(10))) AS PayrollPeriod,\n   ''           ''   Checkdate,\n   PayrollCategory,\n   CASE WHEN\n((HoursWorked > HoursInPeriod or HoursWorked > 86.67)  and employeetype = ''Full Time'') \n   \n        THEN\n         ''REGULAR''\n        WHEN\n         PayrollCategory = ''REGULAR''\n        THEN\n         ''REGULAR''\n        ELSE HoursWorked\n   END  AS HoursWorked,\n   rate,\n   '' '',\n   CASE WHEN\n                    HoursWorked-HoursInPeriod > 0  and employeetype = ''Full Time''   \n        THEN\n          HoursWorked-HoursInPeriod\n        ELSE 0\n   END  AS ExtraHours\n \n FROM\n (SELECT \n   id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   employeetype,\n   sum(hours) HoursWorked,\n   CASE WHEN \n        sum(hours)  -  (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T  \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))) = 0\n                       AND employeetype IN (''Full Time'' ) OR (sum(hours) between 86.67 AND  (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T  \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))))\n                       AND employeetype NOT IN (''Hourly'' )\n       THEN ''REGULAR''\n       WHEN \n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T  \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))) < 0 \n       THEN ''HOURLY''\n       WHEN \n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))) > 0\n                       AND employeetype IN (''Full Time'' ) \n             \n       THEN ''REGULAR WITH OVERTIME''\n       ELSE ''HOURLY'' \n   END  PayrollCategory,\n  \n   \n   sum(hours) - COALESCE((SELECT sum(hours) FROM timesheetdata T \n                     WHERE T.employeeid = data.id\n                       AND  T.job  IN (''Vacation'',''Sick'',''Personal'',''Paid Holiday'')          \n                       AND  T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))),0) HoursBilled,\n  (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \n   WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n   AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))) HoursInPeriod,\n  (SELECT count(1)*8 FROM publicholidays  PH\n   WHERE  PH.publicholidaydate BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))) as  HolidaysHoursInPeriod,\n \n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid = data.id \n   and job IN (''Paid Holiday'') \n   AND Year(T.weekday) = YEAR(NOW())) AS PaidHolidaysToDate,\n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid =   data.id \n   and job IN (''Sick'') \n   AND Year(T.weekday) = YEAR(NOW())) AS PaidSickDaysToDate,\n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid = data.id \n   and job IN (''Vacation'') \n   AND Year(T.weekday) = YEAR(NOW())) AS PaidVacationDaysToDate,\n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid = data.id \n   and job IN (''Personal'') \n   AND Year(T.weekday) = YEAR(NOW())) AS PaidPersonalDaysToDate, \n   CASE  \n      WHEN\n        ID IN (55)  \n      THEN\n        rate\n      ELSE\n        "On File"\n   END AS rate \n from  \n  (SELECT \n   E.id, \n   E.salutation, \n   E.username, \n   E.firstname, \n   E.lastname,\n   E.employeetype,\n   E.isactive,\n   E.status,\n   TD.weekday ,\n   hours,\n   TD.jobid,\n   CASE  \n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \n                                 AND RT.employeeid = TD.employeeid AND (jobid is NULL or jobid = 0))\n      ELSE  rate\n \n   END  AS Rate \n\n  FROM   timesheetdata AS TD INNER JOIN employee as E    \n  on  (TD.employeeid = E.id  ) \n\n\n  LEFT  OUTER JOIN rate AS R\n  ON (TD.employeeid = R.employeeid    AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\n\n  where   E.isactive = "Y"\n    AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) \n                           AND  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15'')) \n    AND  TD.hours > 0\n    AND employeetype <> ''Contractor'' \n\n\n   ) AS data\nGROUP BY\n   id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   employeetype,\n   rate\n) AS payroll\nWHERE id not in (60,134,64,92,91,103,104,138,55,97,141)\nUNION ALL\nselect \n\n   ''Mr'', \n   ''Tony'', \n   ''Zanfardino'',\n   ''Hourly'',\n   ''0735-7956'' ,\n   concat(CAST( (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16''))  AS CHAR(10)  ), '' - '',CAST((SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))) AS CHAR(10))) AS PayrollPeriod,\n   ''           ''   Checkdate,\n   ''HOURLY'',\n    7.00,\n    72.00,\n    '''',\n    0\n ORDER by\n   employeetype,\n   PayrollCategory,\n   lastname    ', '', '2011-12-21 11:17:16', 80, NULL, 80, 0, 0, '1|onetime', '2011-12-21 23:59:00', 'N', '0000-00-00'),
(22, 'Receivables - 2010', '2010 Receivables', 'SELECT \r\n   TD.id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   isactive,\r\n   status,\r\n   Month,\r\n   (SELECT max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber,\r\n   (SELECT  max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND PR.currentflag = \\''Y\\'') AS Contract,   \r\n   TD.jobid, \r\n   TD.jobcode,\r\n   TD.job,\r\n   sum(hours) TotalHours, \r\n    CASE  \r\n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(contractorrate) FROM rate RT \r\n                                 WHERE  TD.weekday BETWEEN effectivedate AND expirydate \r\n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\r\n      ELSE contractorrate\r\n    \r\n   END  AS Contractorrate,   \r\n   CASE  \r\n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \r\n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \r\n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\r\n      ELSE  rate\r\n \r\n   END  AS Rate \r\n FROM \r\n (SELECT \r\n  E.id, \r\n  E.salutation, \r\n  E.username, \r\n  E.firstname, \r\n  E.lastname,\r\n  E.employeetype,\r\n  E.isactive,\r\n  E.status,\r\n  TD.jobid,\r\n  monthname(TD.weekday) AS Month,\r\n  TD.job,\r\n  TD.jobcode,\r\n  DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, \r\n    \r\n  sum(hours) AS hours \r\nFROM timesheetdata  TD , employee   E    \r\nWHERE   TD.employeeid = E.id  \r\n    AND  TD.weekday    BETWEEN  \\''2010-01-01\\'' \r\n                           AND  \\''2010-12-31\\''\r\n    AND  TD.paycode in (\\''RT\\'',\\''OT\\'')\r\n    AND  TD.hours > 0\r\nGROUP BY \r\n  E.id, \r\n  E.salutation, \r\n  E.username, \r\n  E.firstname, \r\n  E.lastname,\r\n  E.employeetype,\r\n  E.isactive,\r\n  TD.weekday,\r\n  TD.jobid,\r\n  TD.job,\r\n  TD.jobcode,\r\n  E.status) AS TD \r\n  LEFT  OUTER JOIN rate AS R\r\n  ON (TD.id = R.employeeid  \r\n  AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\r\nGROUP BY\r\n   Month,\r\n   TD.id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   isactive,\r\n   status,\r\n   Contractorrate,\r\n     TD.jobid, \r\n   TD.job,\r\n   Rate\r\nORDER BY \r\n   Month,\r\n   Contract,\r\n   jobid,\r\n   employeetype DESC ', '', '2010-02-23 17:40:15', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(23, 'PAYROLL-Period - 2 Missing TS', 'Period 2, Missing Timesheets', 'SELECT Base.* \r\nFROM  \r\n  (SELECT * from\r\n  (SELECT     \r\n   E.id, E.salutation, E.username, E.firstname, \r\n   E.lastname, E.employeetype, E.isactive         \r\n  FROM  employee as  E \r\n   where E.status = \\''Active\\'' AND username \r\n   NOT IN (\\''fryawe\\'',\\''akirunda\\'',\\''administrator\\'',\\''TSGADMINDL\\'')) AS E,              \r\n   (SELECT  DISTINCT weekendingdate \r\n  FROM timesheet AS TD                          \r\n  WHERE  TD.weekendingdate  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,\\''%Y-%m-16\\'')) \r\n                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) AS W  ) AS Base   \r\n  LEFT OUTER JOIN \r\n  (SELECT  employeeid,weekendingdate \r\n FROM timesheet  TD                          \r\n WHERE  TD.weekendingdate  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,\\''%Y-%m-16\\'')) \r\n                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) AS Actual                                             \r\n ON (Actual.employeeid = Base.id AND Actual.weekendingdate = Base.weekendingdate)  \r\n WHERE   Actual.weekendingdate IS NULL\r\n AND Base.employeetype <> \\''Contractor\\''\r\n ORDER BY lastname,Actual.weekendingdate', '', '2010-02-24 12:45:24', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(24, 'PAYROLL-Period - 1 Missing TS', 'Period 1, Missing Timesheets', 'SELECT Base.* \nFROM  \n  (SELECT * from\n  (SELECT     \n   E.id, E.salutation, E.username, E.firstname, \n   E.lastname, E.employeetype, E.isactive         \n  FROM  employee as  E \n   where E.status = ''Active'' AND username \n   NOT IN (''fryawe'',''akirunda'',''administrator'',''TSGADMINDL'')) AS E,              \n   (SELECT  DISTINCT weekendingdate \n  FROM timesheet AS TD                          \n  WHERE  TD.weekendingdate  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) \n                           AND  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 0 month) ,''%Y-%m-15'')) ) AS W  ) AS Base   \n  LEFT OUTER JOIN \n  (SELECT  employeeid,weekendingdate \n FROM timesheet  TD                          \n WHERE  TD.weekendingdate  BETWEEN (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) \n                           AND  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 0 month) ,''%Y-%m-15'')) ) AS Actual                                             \n ON (Actual.employeeid = Base.id AND Actual.weekendingdate = Base.weekendingdate)  \n WHERE   Actual.weekendingdate IS NULL\n AND Base.employeetype <> ''Contractor''\n ORDER BY lastname,Actual.weekendingdate', '', '2012-05-30 09:39:50', 80, NULL, 80, 1, 1, '0|1', '2038-01-01', 'N', '0000-00-00'),
(25, 'RECON-CreateInvoice - Step 1', 'Run after the 1st ', '---call TSGAllInvoices ()', '', '2012-03-02 22:06:50', 80, NULL, 80, 1, 0, '0|4', '2012-4-02 00:00:00', 'N', '0000-00-00');
INSERT INTO `customreport` (`id`, `title`, `description`, `querystring`, `category`, `datecreated`, `createdby`, `lastupdatedon`, `lastupdatedby`, `issendemail`, `isactive`, `expirytype`, `expirydate`, `postpone`, `date`) VALUES
(26, 'PAYROLL-Contractor', 'Monthly, Contractor Payroll', 'SELECT\r\n  companyname, \r\n  Month,\r\n  ContractorRate,\r\n  sum(TotalHours),\r\n  (sum(TotalHours)*ContractorRate) as AmountBilled\r\nfrom\r\n(SELECT \r\n   TD.id, \r\n   salutation,\r\n   companyname, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   isactive,\r\n   status,\r\n   Month,\r\n   (SELECT  max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber,\r\n   (SELECT  max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND PR.currentflag = \\''Y\\'') AS Contract,   \r\n   TD.jobid, \r\n   TD.jobcode,\r\n   TD.job,\r\n   sum(hours) TotalHours, \r\n    CASE  \r\n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(contractorrate) FROM rate RT \r\n                                 WHERE  TD.weekday BETWEEN effectivedate AND expirydate \r\n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\r\n      ELSE contractorrate\r\n    \r\n   END  AS Contractorrate,   \r\n   CASE  \r\n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \r\n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \r\n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\r\n      ELSE  rate\r\n \r\n   END  AS Rate \r\n FROM \r\n (SELECT \r\n  E.id, \r\n  E.salutation, \r\n  E.username, \r\n  E.firstname, \r\n  E.lastname,\r\n  E.employeetype,\r\n  E.isactive,\r\n  E.status,\r\n  E.companyname,\r\n  TD.jobid,\r\n  monthname(TD.weekday) AS Month,\r\n  TD.job,\r\n  TD.jobcode,\r\n  DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, \r\n    \r\n  sum(hours) AS hours \r\nFROM timesheetdata  TD , employee   E    \r\nWHERE   TD.employeeid = E.id  \r\n    AND   E.isactive = \\"Y\\"\r\n    AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,\\''%Y-%m-01\\'')) \r\n                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))) \r\n    AND  TD.paycode in (\\''RT\\'',\\''OT\\'')\r\n    AND  TD.hours > 0\r\nGROUP BY \r\n  E.id, \r\n  E.salutation,\r\n  E.companyname,  \r\n  E.username, \r\n  E.firstname, \r\n  E.lastname,\r\n  E.employeetype,\r\n  E.isactive,\r\n  TD.weekday,\r\n  TD.jobid,\r\n  TD.job,\r\n  TD.jobcode,\r\n  E.status) AS TD \r\n  LEFT  OUTER JOIN rate AS R\r\n  ON (TD.id = R.employeeid  \r\n  AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\r\nwhere employeetype = \\''Contractor\\''\r\nGROUP BY\r\n   Month,\r\n   TD.id, \r\n   salutation,\r\n   companyname, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   isactive,\r\n   status,\r\n   Contractorrate,\r\n     TD.jobid, \r\n   TD.job,\r\n   Rate\r\nORDER BY \r\n   Month,\r\n   Contract,\r\n   jobid,\r\n   employeetype DESC\r\n) as billable \r\ngroup by \r\n companyname, \r\n  Month,\r\n  Rate\r\nunion all\r\n  select \\''Lubo Consulting Group\\'',\\''N/A\\'',\\''N/A\\'',NULL, 3000.00\r\nunion all \r\n  select \\''Infoma Corperation\\'',\\''N/A\\'',\\''N/A\\'',NULL, 540.00', '', '2010-03-08 10:54:26', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(27, 'RECON-CurrentVsPreviousBilling', 'Coming Soon', 'call CurrentVsPreviousBilling ()', '', '2010-03-08 12:38:38', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(28, 'RECON-ODC', 'Coming Soon', 'Select \\''ODC\\''', '', '2010-03-30 13:16:38', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(29, 'RECON-TRAVEL', 'Coming Soon', 'select \\''TRAVEL\\''', '', '2010-03-30 13:16:52', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(30, 'Procs', 'Copy of procedures', 'CREATE PROCEDURE CurrentVsPreviousBilling ()\r\n\r\nSELECT \r\nprevious.firstname,\r\nprevious.lastname,\r\nprevious.month,\r\nprevious.PONumber,\r\nprevious.jobcode,\r\nprevious.Contract,\r\nprevious.TotalHours,\r\nprevious.rate,\r\nprevious.TotalHours*previous.rate AS PreviousBilling,\r\ncurrent.firstname,\r\ncurrent.lastname,\r\ncurrent.month,\r\ncurrent.PONumber,\r\ncurrent.jobcode,\r\ncurrent.Contract,\r\ncurrent.TotalHours,\r\ncurrent.rate,\r\ncurrent.TotalHours*current.rate AS CurrentBilling\r\n \r\nFROM\r\n\r\n(SELECT \r\n   TD.id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   isactive,\r\n   status,\r\n   Month,\r\n   (SELECT  max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber,\r\n   (SELECT  max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND PR.currentflag = \\''Y\\'') AS Contract,   \r\n   TD.jobid, \r\n   TD.jobcode,\r\n   TD.job,\r\n   sum(hours) TotalHours, \r\n    CASE  \r\n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(contractorrate) FROM rate RT \r\n                                 WHERE  TD.weekday BETWEEN effectivedate AND expirydate \r\n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\r\n      ELSE contractorrate\r\n    \r\n   END  AS Contractorrate,   \r\n   CASE  \r\n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \r\n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \r\n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\r\n      ELSE  rate\r\n \r\n   END  AS Rate \r\n FROM \r\n (SELECT \r\n  E.id, \r\n  E.salutation, \r\n  E.username, \r\n  E.firstname, \r\n  E.lastname,\r\n  E.employeetype,\r\n  E.isactive,\r\n  E.status,\r\n  TD.jobid,\r\n  monthname(TD.weekday) AS Month,\r\n  TD.job,\r\n  TD.jobcode,\r\n  DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, \r\n    \r\n  sum(hours) AS hours \r\nFROM timesheetdata  TD , employee   E    \r\nWHERE   TD.employeeid = E.id  \r\n    AND   E.isactive = \\"Y\\"\r\n    AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,\\''%Y-%m-01\\'')) \r\n                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))) \r\n    AND  TD.paycode in (\\''RT\\'',\\''OT\\'')\r\n    AND  TD.hours > 0\r\nGROUP BY \r\n  E.id, \r\n  E.salutation, \r\n  E.username, \r\n  E.firstname, \r\n  E.lastname,\r\n  E.employeetype,\r\n  E.isactive,\r\n  TD.weekday,\r\n  TD.jobid,\r\n  TD.job,\r\n  TD.jobcode,\r\n  E.status) AS TD \r\n  LEFT  OUTER JOIN rate AS R\r\n  ON (TD.id = R.employeeid  \r\n  AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\r\nGROUP BY\r\n   Month,\r\n   TD.id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   isactive,\r\n   status,\r\n   Contractorrate,\r\n     TD.jobid, \r\n   TD.job,\r\n   Rate\r\nORDER BY \r\n   Month,\r\n   Contract,\r\n   jobid,\r\n   employeetype DESC) AS CURRENT\r\nleft OUTER JOIN\r\n(SELECT \r\n   TD.id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   isactive,\r\n   status,\r\n   Month,\r\n   (SELECT  max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber,\r\n   (SELECT  max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND PR.currentflag = \\''Y\\'') AS Contract,   \r\n   TD.jobid, \r\n   TD.jobcode,\r\n   TD.job,\r\n   sum(hours) TotalHours, \r\n    CASE  \r\n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(contractorrate) FROM rate RT \r\n                                 WHERE  TD.weekday BETWEEN effectivedate AND expirydate \r\n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\r\n      ELSE contractorrate\r\n    \r\n   END  AS Contractorrate,   \r\n   CASE  \r\n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \r\n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \r\n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\r\n      ELSE  rate\r\n \r\n   END  AS Rate \r\n FROM \r\n (SELECT \r\n  E.id, \r\n  E.salutation, \r\n  E.username, \r\n  E.firstname, \r\n  E.lastname,\r\n  E.employeetype,\r\n  E.isactive,\r\n  E.status,\r\n  TD.jobid,\r\n  monthname(TD.weekday) AS Month,\r\n  TD.job,\r\n  TD.jobcode,\r\n  DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, \r\n    \r\n  sum(hours) AS hours \r\nFROM timesheetdata  TD , employee   E    \r\nWHERE   TD.employeeid = E.id  \r\n    AND   E.isactive = \\"Y\\"\r\n    AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -2 month) ,\\''%Y-%m-01\\'')) \r\n                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -2 month))) \r\n    AND  TD.paycode in (\\''RT\\'',\\''OT\\'')\r\n    AND  TD.hours > 0\r\nGROUP BY \r\n  E.id, \r\n  E.salutation, \r\n  E.username, \r\n  E.firstname, \r\n  E.lastname,\r\n  E.employeetype,\r\n  E.isactive,\r\n  TD.weekday,\r\n  TD.jobid,\r\n  TD.job,\r\n  TD.jobcode,\r\n  E.status) AS TD \r\n  LEFT  OUTER JOIN rate AS R\r\n  ON (TD.id = R.employeeid  \r\n  AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\r\nGROUP BY\r\n   Month,\r\n   TD.id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   isactive,\r\n   status,\r\n   Contractorrate,\r\n     TD.jobid, \r\n   TD.job,\r\n   Rate\r\nORDER BY \r\n   Month,\r\n   Contract,\r\n   jobid,\r\n   employeetype DESC) AS previous\r\n   ON (previous.ponumber = current.ponumber AND previous.jobcode = current.jobcode AND previous.id = current.id)\r\nWHERE previous.PONumber IS NULL\r\nUNION ALL\r\nSELECT \r\nprevious.firstname,\r\nprevious.lastname,\r\nprevious.month,\r\nprevious.PONumber,\r\nprevious.jobcode,\r\nprevious.Contract,\r\nprevious.TotalHours,\r\nprevious.rate,\r\nprevious.TotalHours*previous.rate AS PreviousBilling,\r\ncurrent.firstname,\r\ncurrent.lastname,\r\ncurrent.month,\r\ncurrent.PONumber,\r\ncurrent.jobcode,\r\ncurrent.Contract,\r\ncurrent.TotalHours,\r\ncurrent.rate,\r\ncurrent.TotalHours*current.rate AS CurrentBilling\r\n \r\nFROM\r\n\r\n(SELECT \r\n   TD.id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   isactive,\r\n   status,\r\n   Month,\r\n   (SELECT  max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber,\r\n   (SELECT  max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND PR.currentflag = \\''Y\\'') AS Contract,   \r\n   TD.jobid, \r\n   TD.jobcode,\r\n   TD.job,\r\n   sum(hours) TotalHours, \r\n    CASE  \r\n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(contractorrate) FROM rate RT \r\n                                 WHERE  TD.weekday BETWEEN effectivedate AND expirydate \r\n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\r\n      ELSE contractorrate\r\n    \r\n   END  AS Contractorrate,   \r\n   CASE  \r\n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \r\n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \r\n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\r\n      ELSE  rate\r\n \r\n   END  AS Rate \r\n FROM \r\n (SELECT \r\n  E.id, \r\n  E.salutation, \r\n  E.username, \r\n  E.firstname, \r\n  E.lastname,\r\n  E.employeetype,\r\n  E.isactive,\r\n  E.status,\r\n  TD.jobid,\r\n  monthname(TD.weekday) AS Month,\r\n  TD.job,\r\n  TD.jobcode,\r\n  DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, \r\n    \r\n  sum(hours) AS hours \r\nFROM timesheetdata  TD , employee   E    \r\nWHERE   TD.employeeid = E.id  \r\n    AND   E.isactive = \\"Y\\"\r\n    AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,\\''%Y-%m-01\\'')) \r\n                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))) \r\n    AND  TD.paycode in (\\''RT\\'',\\''OT\\'')\r\n    AND  TD.hours > 0\r\nGROUP BY \r\n  E.id, \r\n  E.salutation, \r\n  E.username, \r\n  E.firstname, \r\n  E.lastname,\r\n  E.employeetype,\r\n  E.isactive,\r\n  TD.weekday,\r\n  TD.jobid,\r\n  TD.job,\r\n  TD.jobcode,\r\n  E.status) AS TD \r\n  LEFT  OUTER JOIN rate AS R\r\n  ON (TD.id = R.employeeid  \r\n  AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\r\nGROUP BY\r\n   Month,\r\n   TD.id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   isactive,\r\n   status,\r\n   Contractorrate,\r\n     TD.jobid, \r\n   TD.job,\r\n   Rate\r\nORDER BY \r\n   Month,\r\n   Contract,\r\n   jobid,\r\n   employeetype DESC) AS current\r\nright OUTER JOIN\r\n(SELECT \r\n   TD.id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   isactive,\r\n   status,\r\n   Month,\r\n   (SELECT  max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber,\r\n   (SELECT  max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND PR.currentflag = \\''Y\\'') AS Contract,   \r\n   TD.jobid, \r\n   TD.jobcode,\r\n   TD.job,\r\n   sum(hours) TotalHours, \r\n    CASE  \r\n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(contractorrate) FROM rate RT \r\n                                 WHERE  TD.weekday BETWEEN effectivedate AND expirydate \r\n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\r\n      ELSE contractorrate\r\n    \r\n   END  AS Contractorrate,   \r\n   CASE  \r\n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \r\n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \r\n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\r\n      ELSE  rate\r\n \r\n   END  AS Rate \r\n FROM \r\n (SELECT \r\n  E.id, \r\n  E.salutation, \r\n  E.username, \r\n  E.firstname, \r\n  E.lastname,\r\n  E.employeetype,\r\n  E.isactive,\r\n  E.status,\r\n  TD.jobid,\r\n  monthname(TD.weekday) AS Month,\r\n  TD.job,\r\n  TD.jobcode,\r\n  DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, \r\n    \r\n  sum(hours) AS hours \r\nFROM timesheetdata  TD , employee   E    \r\nWHERE   TD.employeeid = E.id  \r\n    AND   E.isactive = \\"Y\\"\r\n    AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -2 month) ,\\''%Y-%m-01\\'')) \r\n                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -2 month))) \r\n    AND  TD.paycode in (\\''RT\\'',\\''OT\\'')\r\n    AND  TD.hours > 0\r\nGROUP BY \r\n  E.id, \r\n  E.salutation, \r\n  E.username, \r\n  E.firstname, \r\n  E.lastname,\r\n  E.employeetype,\r\n  E.isactive,\r\n  TD.weekday,\r\n  TD.jobid,\r\n  TD.job,\r\n  TD.jobcode,\r\n  E.status) AS TD \r\n  LEFT  OUTER JOIN rate AS R\r\n  ON (TD.id = R.employeeid  \r\n  AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\r\nGROUP BY\r\n   Month,\r\n   TD.id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   isactive,\r\n   status,\r\n   Contractorrate,\r\n     TD.jobid, \r\n   TD.job,\r\n   Rate\r\nORDER BY \r\n   Month,\r\n   Contract,\r\n   jobid,\r\n   employeetype DESC) AS previous\r\n   ON (previous.ponumber = current.ponumber AND previous.jobcode = current.jobcode AND previous.id = current.id)\r\nWHERE current.PONumber IS NULL', '', '2010-03-08 12:37:12', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(31, 'PAYROLL-Period - 1 NotApproved', 'Period 1, Saved, Rejected, Submitted Time', 'SELECT     E.id,    E.salutation,    E.username,    E.firstname, \r\n   E.lastname,   E.employeetype,   E.isactive,   E.status,   TD.weekendingdate,   TD.status\r\nFROM timesheet  TD , employee   E    \r\nWHERE   TD.employeeid = E.id                 \r\n    AND  TD.status NOT IN (\\"Approved\\",\\"Closed\\")\r\n    AND  TD.weekendingdate  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,\\''%Y-%m-01\\'')) \r\n                           AND  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,\\''%Y-%m-15\\'')) \r\n    \r\nORDER BY TD.weekendingdate', '', '2010-03-23 19:20:11', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(32, 'PAYROLL-Period - 2 NotApproved', 'Period 2, Saved, Rejected, Submitted Time ', 'SELECT     E.id,    E.salutation,    E.username,    E.firstname, \r\n   E.lastname,   E.employeetype,   E.isactive,   E.status,   TD.weekendingdate,   TD.status\r\nFROM timesheet  TD , employee   E    \r\nWHERE   TD.employeeid = E.id                 \r\n    AND  TD.status NOT IN (\\"Approved\\",\\"Closed\\")\r\n    AND  TD.weekendingdate  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,\\''%Y-%m-16\\'')) \r\n                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))\r\n    \r\nORDER BY TD.weekendingdate', '', '2010-03-23 19:19:25', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(33, 'PAYROLL-Period - 1 TSG', ' Period 1 TSG, current month 1st to the 15th ', 'SELECT \n \n   salutation, \n   firstname, \n   lastname,\n   employeetype,\n   concat(CAST( (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01''))  AS CHAR(10)  ), '' - '',CAST((SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15'')) AS CHAR(10))) AS PayrollPeriod,\n   \n   PayrollCategory,\n   CASE WHEN\n           HoursWorked > HoursInPeriod  and employeetype = ''Full Time''  \n   \n        THEN\n         ''REGULAR''\n        WHEN\n         PayrollCategory = ''REGULAR''\n        THEN\n         ''REGULAR''\n        ELSE HoursWorked\n   END  AS HoursWorked,\n   rate,\n   '' '',\n   CASE WHEN\n                    HoursWorked-HoursInPeriod > 0  and employeetype = ''Full Time''   \n        THEN\n          HoursWorked-HoursInPeriod\n        ELSE 0\n   END  AS ExtraHours\n \n FROM\n (SELECT \n   id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   employeetype,\n   sum(hours) HoursWorked,\n   CASE WHEN \n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))) = 0 \n                       AND employeetype IN (''Full Time'' ) \n       THEN ''REGULAR''\n       WHEN \n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T  \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))) < 0 \n       THEN ''HOURLY''\n       WHEN \n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))) > 0\n                       AND employeetype IN (''Full Time'' ) \n             \n       THEN ''REGULAR WITH OVERTIME''\n       ELSE ''HOURLY'' \n   END  PayrollCategory,\n  \n   \n   sum(hours) - COALESCE((SELECT sum(hours) FROM timesheetdata T \n                     WHERE T.employeeid = data.id\n                       AND  T.job  IN (''Vacation'',''Sick'',''Personal'',''Paid Holiday'')          \n                       AND  T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))),0) HoursBilled,\n  (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \n   WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n   AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))) HoursInPeriod,\n  (SELECT count(1)*8 FROM publicholidays  PH\n   WHERE  PH.publicholidaydate BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))) as  HolidaysHoursInPeriod,\n \n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid = data.id \n   and job IN (''Paid Holiday'') \n   AND Year(T.weekday) = ''2010'') AS PaidHolidaysToDate,\n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid =   data.id \n   and job IN (''Sick'') \n   AND Year(T.weekday) = ''2010'') AS PaidSickDaysToDate,\n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid = data.id \n   and job IN (''Vacation'') \n   AND Year(T.weekday) = ''2010'') AS PaidVacationDaysToDate,\n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid = data.id \n   and job IN (''Personal'') \n   AND Year(T.weekday) = ''2010'') AS PaidPersonalDaysToDate,  \n   CASE  \n      WHEN\n        ID IN (55)  \n      THEN\n        rate\n      ELSE\n        "On File"\n   END AS rate \n from  \n  (SELECT \n   E.id, \n   E.salutation, \n   E.username, \n   E.firstname, \n   E.lastname,\n   E.employeetype,\n   E.isactive,\n   E.status,\n   TD.weekday ,\n   hours,\n   TD.jobid,\n   CASE  \n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \n                                 AND RT.employeeid = TD.employeeid AND (jobid is NULL or jobid = 0))\n      ELSE  rate\n \n   END  AS Rate \n\n  FROM   timesheetdata AS TD INNER JOIN employee as E    \n  on  (TD.employeeid = E.id  ) \n\n\n  LEFT  OUTER JOIN rate AS R\n  ON (TD.employeeid = R.employeeid    AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\n\n  where   E.isactive = "Y"\n    AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) \n                           AND  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15'')) \n    AND  TD.hours > 0\n    AND employeetype <> ''Contractor'' \n\n\n   ) AS data\nGROUP BY\n   id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   employeetype,\n   rate\n) AS payroll\nWHERE id  in (select employeeid from  employeeOverrides where overridetype=''TSGRegurlarPayroll'')\nUNION ALL\nselect  salutation,firstname,lastname,employeetype,\nconcat(CAST( (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01''))  AS CHAR(10)  ), '' - '',CAST((SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15'')) AS CHAR(10))) AS PayrollPeriod,\n''HOURLY'',\n''On File'',\n''On File'',\n'''',\n0 \n from \nemployeeOverrides inner join employee on (id=employeeid) where overridetype=''TSGFixedPayroll'' \nORDER by\n   employeetype,\n   PayrollCategory,\n   lastname   \n', '', '2012-02-23 10:01:14', 80, NULL, 80, 0, 0, '1|onetime', '2012-02-23 23:59:00', 'N', '0000-00-00'),
(34, 'PAYROLL-Period - 2 TSG', 'Period 2 TSG, last month 16th to the EOM', 'SELECT \n\n   salutation, \n   firstname, \n   lastname,\n   employeetype,\n   concat(CAST( (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16''))  AS CHAR(10)  ), '' - '',CAST((SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))) AS CHAR(10))) AS PayrollPeriod,\n   PayrollCategory,\n   CASE WHEN\n          HoursWorked > HoursInPeriod  and employeetype = ''Full Time''  \n        THEN\n         ''REGULAR''\n        WHEN\n         PayrollCategory = ''REGULAR''\n        THEN\n         ''REGULAR''\n        ELSE HoursWorked\n   END  AS HoursWorked,\n   rate,\n   '' '',\n   CASE WHEN\n          HoursWorked-HoursInPeriod > 0  and employeetype = ''Full Time''  \n        THEN\n          HoursWorked-HoursInPeriod\n        ELSE 0\n   END  AS ExtraHours\n \n FROM\n (SELECT \n   id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   employeetype,\n   sum(hours) HoursWorked,\n   CASE WHEN \n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) = 0 \n                       AND employeetype IN (''Full Time'' ) \n       THEN ''REGULAR''\n       WHEN \n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T  \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) < 0 \n       THEN ''HOURLY''\n       WHEN \n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) > 0\n                       AND employeetype IN (''Full Time'' ) \n             \n       THEN ''REGULAR WITH OVERTIME''\n       ELSE ''HOURLY'' \n   END  PayrollCategory,\n  \n   \n   sum(hours) - COALESCE((SELECT sum(hours) FROM timesheetdata T \n                     WHERE T.employeeid = data.id\n                       AND  T.job  IN (''Vacation'',''Sick'',''Personal'',''Paid Holiday'')          \n                       AND  T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))),0) HoursBilled,\n  (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \n   WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n   AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) HoursInPeriod,\n  (SELECT count(1)*8 FROM publicholidays  PH\n   WHERE  PH.publicholidaydate BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) as  HolidaysHoursInPeriod,\n \n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid = data.id \n   and job IN (''Paid Holiday'') \n   AND Year(T.weekday) = ''2010'') AS PaidHolidaysToDate,\n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid =  data.id \n   and job IN (''Sick'') \n   AND Year(T.weekday) = ''2010'') AS PaidSickDaysToDate,\n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid = data.id \n   and job IN (''Vacation'') \n   AND Year(T.weekday) = ''2010'') AS PaidVacationDaysToDate,\n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid = data.id \n   and job IN (''Personal'') \n   AND Year(T.weekday) = ''2010'') AS PaidPersonalDaysToDate,  \n   CASE  \n      WHEN\n        ID IN (55)  \n      THEN\n        rate\n      ELSE\n        "On File"\n   END AS rate \n from  \n  (SELECT \n   E.id, \n   E.salutation, \n   E.username, \n   E.firstname, \n   E.lastname,\n   E.employeetype,\n   E.isactive,\n   E.status,\n   TD.weekday ,\n   hours,\n   TD.jobid,\n   CASE  \n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \n                                 AND RT.employeeid = TD.employeeid AND (jobid is NULL or jobid = 0))\n      ELSE  rate\n \n   END  AS Rate \n\n  FROM   timesheetdata AS TD INNER JOIN employee as E    \n  on  (TD.employeeid = E.id  ) \n\n\n  LEFT  OUTER JOIN rate AS R\n  ON (TD.employeeid = R.employeeid    AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\n\n  where   E.isactive = "Y"\n    AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16'')) \n                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))) \n    AND  TD.hours > 0\n    AND employeetype <> ''Contractor'' \n\n\n   ) AS data\nGROUP BY\n   id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   employeetype,\n   rate\n) AS payroll\nwhere id  in (select employeeid from  employeeOverrides where overridetype=''TSGRegurlarPayroll'')\nUNION ALL\nselect  salutation,firstname,lastname,employeetype,\nconcat(CAST( (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01''))  AS CHAR(10)  ), '' - '',CAST((SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15'')) AS CHAR(10))) AS PayrollPeriod,\n''HOURLY'',\n''On File'',\n''On File'',\n'''',\n0 \n from \nemployeeOverrides inner join employee on (id=employeeid) where overridetype=''TSGFixedPayroll'' \nORDER by\n   employeetype,\n   PayrollCategory,\n   lastname   ', '', '2012-02-23 10:02:27', 80, NULL, 80, 0, 0, '1|onetime', '2012-02-23 23:59:00', 'N', '0000-00-00'),
(36, 'RECON-CreateInvoice - Step 2', 'Run after the 1st, create invoices for all contracts for recon', 'select \\''Create Invoices for CITS,MCTA,AGENCY\\'' ManualInvoices', '', '2010-03-31 13:40:12', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(37, 'RECON-PartialEOMHours', 'Check if all have submitted hours for a partial week', 'call checkTime(\\''20100329\\'',\\''20100331\\'')', '', '2010-03-31 16:20:17', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(38, 'PAYROLL-QLM-PAYCHEX', 'Last month from 1st to the EOM', 'SELECT \n   id, \n   salutation, \n   firstname, \n   lastname,\n   HoursWorked,\n   rate \n\n FROM\n (SELECT \n   id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   employeetype,\n   sum(hours) HoursWorked,\n   CASE WHEN \n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))) = 0 \n                       AND employeetype IN (''Full Time'' ) \n       THEN ''REGULAR''\n       WHEN \n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T  \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))) < 0 \n       THEN ''HOURLY''\n       WHEN \n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))) > 0\n                       AND employeetype IN (''Full Time'' ) \n             \n       THEN ''REGULAR WITH OVERTIME''\n       ELSE ''HOURLY'' \n   END  PayrollCategory,\n  \n   \n   sum(hours) - COALESCE((SELECT sum(hours) FROM timesheetdata T \n                     WHERE T.employeeid = data.id\n                       AND  T.job  IN (''Vacation'',''Sick'',''Personal'',''Paid Holiday'')          \n                       AND  T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))),0) HoursBilled,\n  (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \n   WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n   AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))) HoursInPeriod,\n  (SELECT count(1)*8 FROM publicholidays  PH\n   WHERE  PH.publicholidaydate BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))) as  HolidaysHoursInPeriod,\n \n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid = data.id \n   and job IN (''Paid Holiday'') \n   AND Year(T.weekday) = ''%Y'') AS PaidHolidaysToDate,\n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid =  data.id \n   and job IN (''Sick'') \n   AND Year(T.weekday) = ''%Y'') AS PaidSickDaysToDate,\n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid = data.id \n   and job IN (''Vacation'') \n   AND Year(T.weekday) = ''%Y'') AS PaidVacationDaysToDate,\n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid = data.id \n   and job IN (''Personal'') \n   AND Year(T.weekday) = ''%Y'') AS PaidPersonalDaysToDate,  \n   rate  \n   \n from  \n  (SELECT \n   E.id, \n   E.salutation, \n   E.username, \n   E.firstname, \n   E.lastname,\n   E.employeetype,\n   E.isactive,\n   E.status,\n   TD.weekday ,\n   hours,\n   TD.jobid,\n   CASE  \n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \n                                 AND RT.employeeid = TD.employeeid AND (jobid is NULL or jobid = 0))\n      ELSE  rate\n \n   END  AS Rate \n\n  FROM   timesheetdata AS TD INNER JOIN employee as E    \n  on  (TD.employeeid = E.id  ) \n\n\n  LEFT  OUTER JOIN rate AS R\n  ON (TD.employeeid = R.employeeid    AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\n\n  where   E.isactive = "Y"\n    AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-01'')) \n                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))) \n    AND  TD.hours > 0\n    AND employeetype <> ''Contractor'' \n\n\n   ) AS data\nGROUP BY\n   id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   rate\n) AS payroll\nWHERE id not in (60,134,64,92,91,103,104,138,55,97,141)\nUNION ALL\nselect \n   96, \n   ''Mr'', \n   ''Tony'', \n   ''Zanfardino'',\n    14.00,\n    72.00 \n\nORDER by\n   lastname   ', '', '2012-03-05 19:40:47', 80, NULL, 80, 0, 0, '1|onetime', '2012-03-05 23:59:00', 'N', '0000-00-00'),
(39, 'PAYROLL-QLM-TSG', 'Last month from 1st to the EOM', 'SELECT \n   id, \n   salutation, \n   firstname, \n   lastname,\n   HoursWorked,\n   rate \n \n FROM\n (SELECT \n   id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   employeetype,\n   sum(hours) HoursWorked,\n   CASE WHEN \n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))) = 0 \n                       AND employeetype IN (''Full Time'' ) \n       THEN ''REGULAR''\n       WHEN \n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T  \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))) < 0 \n       THEN ''HOURLY''\n       WHEN \n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))) > 0\n                       AND employeetype IN (''Full Time'' ) \n             \n       THEN ''REGULAR WITH OVERTIME''\n       ELSE ''HOURLY'' \n   END  PayrollCategory,\n  \n   \n   sum(hours) - COALESCE((SELECT sum(hours) FROM timesheetdata T \n                     WHERE T.employeeid = data.id\n                       AND  T.job  IN (''Vacation'',''Sick'',''Personal'',''Paid Holiday'')          \n                       AND  T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))),0) HoursBilled,\n  (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \n   WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n   AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))) HoursInPeriod,\n  (SELECT count(1)*8 FROM publicholidays  PH\n   WHERE  PH.publicholidaydate BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))) as  HolidaysHoursInPeriod,\n \n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid = data.id \n   and job IN (''Paid Holiday'') \n   AND Year(T.weekday) = ''%Y'') AS PaidHolidaysToDate,\n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid =   data.id \n   and job IN (''Sick'') \n   AND Year(T.weekday) = ''%Y'') AS PaidSickDaysToDate,\n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid = data.id \n   and job IN (''Vacation'') \n   AND Year(T.weekday) = ''%Y'') AS PaidVacationDaysToDate,\n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid = data.id \n   and job IN (''Personal'') \n   AND Year(T.weekday) = ''%Y'') AS PaidPersonalDaysToDate,  \n   rate \n from  \n  (SELECT \n   E.id, \n   E.salutation, \n   E.username, \n   E.firstname, \n   E.lastname,\n   E.employeetype,\n   E.isactive,\n   E.status,\n   TD.weekday ,\n   hours,\n   TD.jobid,\n   CASE  \n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \n                                 AND RT.employeeid = TD.employeeid AND (jobid is NULL or jobid = 0))\n      ELSE  rate\n \n   END  AS Rate \n\n  FROM   timesheetdata AS TD INNER JOIN employee as E    \n  on  (TD.employeeid = E.id  ) \n\n\n  LEFT  OUTER JOIN rate AS R\n  ON (TD.employeeid = R.employeeid    AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\n\n  where   E.isactive = "Y"\n    AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-01'')) \n                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))) \n    AND  TD.hours > 0\n    AND employeetype <> ''Contractor'' \n\n\n   ) AS data\nGROUP BY\n   id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   employeetype,\n   rate\n) AS payroll\nWHERE  id  in (select employeeid from  employeeOverrides where overridetype=''TSGRegurlarPayroll'')\n\nUNION ALL\nselect \n   id, \n   ''Mr'', \n   ''Semu'', \n   ''Njuki'',\n    20.00,\n    25.00 \nfrom employeeOverrides inner join employee on (id=employeeid) where overridetype=''TSGFixedPayroll'' \n\nORDER by\n  \n   lastname   ', '', '2012-03-05 19:19:17', 80, NULL, 80, 0, 0, '1|onetime', '2012-03-05 23:59:00', 'N', '0000-00-00'),
(41, 'Receivables - ToDate - By Name', '', 'SELECT TD.id, salutation, username, firstname, lastname, employeetype, isactive, status, Month, Year, (SELECT max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber, (SELECT max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND PR.currentflag = \\''Y\\'') AS Contract, TD.jobid, TD.jobcode, TD.job, sum(hours) TotalHours, CASE WHEN ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT WHERE TD.weekday BETWEEN effectivedate AND expirydate AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0)) ELSE rate END AS Rate FROM (SELECT E.id, E.salutation, E.username, E.firstname, E.lastname, E.employeetype, E.isactive, E.status, TD.jobid, monthname(TD.weekday) AS Month, year(TD.weekday) AS Year, TD.job, TD.jobcode, DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, sum(hours) AS hours FROM timesheetdata TD , employee E WHERE TD.employeeid = E.id AND TD.paycode in (\\''RT\\'',\\''OT\\'') AND TD.hours > 0 AND TD.weekday BETWEEN \\''2004-01-01\\'' AND now() GROUP BY E.id, E.salutation, E.username, E.firstname, E.lastname, E.employeetype, E.isactive, TD.weekday, TD.jobid, TD.job, TD.jobcode, E.status) AS TD LEFT OUTER JOIN rate AS R ON (TD.id = R.employeeid AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid) GROUP BY Month, Year, TD.id, salutation, username, firstname, lastname, employeetype, isactive, status, TD.jobid, TD.job, Rate union select 999, \\''Mr\\'', \\''manual\\'', \\''Ira\\'', \\''Schonberger\\'', \\''Contractor\\'', \\''N\\'', \\''inactive\\'', \\''October\\'', \\''2004\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', 11400.00, 1 union select 999, \\''Mr\\'', \\''manual\\'', \\''Ira\\'', \\''Schonberger\\'', \\''Contractor\\'', \\''N\\'', \\''inactive\\'', \\''October\\'', \\''2004\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', 18240.00, 1 union select 999, \\''Mr\\'', \\''manual\\'', \\''Peter\\'', \\''Alman\\'', \\''Contractor\\'', \\''N\\'', \\''inactive\\'', \\''September\\'', \\''2004\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', 16320.00, 1 union select 999, \\''Mr\\'', \\''manual\\'', \\''Peter\\'', \\''Alman\\'', \\''Contractor\\'', \\''N\\'', \\''inactive\\'', \\''October\\'', \\''2004\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', 13600.00, 1 union select 999, \\''Mr\\'', \\''manual\\'', \\''Peter\\'', \\''Alman\\'', \\''Contractor\\'', \\''N\\'', \\''inactive\\'', \\''November\\'', \\''2004\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', 16320.00, 1 union select 999, \\''Mr\\'', \\''manual\\'', \\''Pritesh\\'', \\''Desai\\'', \\''Contractor\\'', \\''N\\'', \\''inactive\\'', \\''October\\'', \\''2004\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', 18000.00, 1 union select 999, \\''Mr\\'', \\''manual\\'', \\''Pritesh\\'', \\''Desai\\'', \\''Contractor\\'', \\''N\\'', \\''inactive\\'', \\''November\\'', \\''2004\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', 17280.00, 1 union select 999, \\''Mr\\'', \\''manual\\'', \\''Srihari\\'', \\''Bandigari\\'', \\''Contractor\\'', \\''N\\'', \\''inactive\\'', \\''October\\'', \\''2004\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', 12240.00, 1 union select 999, \\''Mr\\'', \\''manual\\'', \\''Srihari\\'', \\''Bandigari\\'', \\''Contractor\\'', \\''N\\'', \\''inactive\\'', \\''November\\'', \\''2004\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', 16320.00, 1 union select 999, \\''Mr\\'', \\''manual\\'', \\''Suresh\\'', \\''Parsa\\'', \\''Contractor\\'', \\''N\\'', \\''inactive\\'', \\''September\\'', \\''2004\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', 12920.00, 1 union select 999, \\''Mr\\'', \\''manual\\'', \\''William\\'', \\''Sserebe\\'', \\''Contractor\\'', \\''N\\'', \\''inactive\\'', \\''March\\'', \\''2004\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', 12800.00, 1 union select 999, \\''Mr\\'', \\''manual\\'', \\''William\\'', \\''Sserebe\\'', \\''Contractor\\'', \\''N\\'', \\''inactive\\'', \\''April\\'', \\''2004\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', 12800.00, 1 union select 999, \\''Mr\\'', \\''manual\\'', \\''William\\'', \\''Sserebe\\'', \\''Contractor\\'', \\''N\\'', \\''inactive\\'', \\''April\\'', \\''2004\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', \\''CAB\\'', 6400.00, 1 ORDER BY username, PONumber, jobid   ', '', '2010-07-29 18:17:41', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00');
INSERT INTO `customreport` (`id`, `title`, `description`, `querystring`, `category`, `datecreated`, `createdby`, `lastupdatedon`, `lastupdatedby`, `issendemail`, `isactive`, `expirytype`, `expirydate`, `postpone`, `date`) VALUES
(42, 'PAYROLL-QMTD-TSG', 'From 1st of this month to Date', 'SELECT \r\n   id, \r\n   salutation, \r\n   firstname, \r\n   lastname,\r\n   HoursWorked,\r\n   rate \r\n \r\n FROM\r\n (SELECT \r\n   id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   sum(hours) HoursWorked,\r\n   CASE WHEN \r\n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \r\n                       WHERE  DAYNAME(weekday) NOT IN (\\''Saturday\\'',\\''Sunday\\'')\r\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,\\''%Y-%m-01\\'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,\\''%Y-%m-15\\''))) = 0 \r\n                       AND employeetype IN (\\''Full Time\\'' ) \r\n       THEN \\''REGULAR\\''\r\n       WHEN \r\n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T  \r\n                       WHERE  DAYNAME(weekday) NOT IN (\\''Saturday\\'',\\''Sunday\\'')\r\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,\\''%Y-%m-01\\'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,\\''%Y-%m-15\\''))) < 0 \r\n       THEN \\''HOURLY\\''\r\n       WHEN \r\n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \r\n                       WHERE  DAYNAME(weekday) NOT IN (\\''Saturday\\'',\\''Sunday\\'')\r\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,\\''%Y-%m-01\\'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,\\''%Y-%m-15\\''))) > 0\r\n                       AND employeetype IN (\\''Full Time\\'' ) \r\n             \r\n       THEN \\''REGULAR WITH OVERTIME\\''\r\n       ELSE \\''HOURLY\\'' \r\n   END  PayrollCategory,\r\n  \r\n   \r\n   sum(hours) - COALESCE((SELECT sum(hours) FROM timesheetdata T \r\n                     WHERE T.employeeid = data.id\r\n                       AND  T.job  IN (\\''Vacation\\'',\\''Sick\\'',\\''Personal\\'',\\''Paid Holiday\\'')          \r\n                       AND  T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,\\''%Y-%m-01\\'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,\\''%Y-%m-15\\''))),0) HoursBilled,\r\n  (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \r\n   WHERE  DAYNAME(weekday) NOT IN (\\''Saturday\\'',\\''Sunday\\'')\r\n   AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,\\''%Y-%m-01\\'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,\\''%Y-%m-15\\''))) HoursInPeriod,\r\n  (SELECT count(1)*8 FROM publicholidays  PH\r\n   WHERE  PH.publicholidaydate BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,\\''%Y-%m-01\\'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,\\''%Y-%m-15\\''))) as  HolidaysHoursInPeriod,\r\n \r\n  (SELECT sum(hours)/8 FROM timesheetdata T \r\n   WHERE employeeid = data.id \r\n   and job IN (\\''Paid Holiday\\'') \r\n   AND Year(T.weekday) = \\''%Y\\'') AS PaidHolidaysToDate,\r\n  (SELECT sum(hours)/8 FROM timesheetdata T \r\n   WHERE employeeid =  data.id \r\n   and job IN (\\''Sick\\'') \r\n   AND Year(T.weekday) = \\''%Y\\'') AS PaidSickDaysToDate,\r\n  (SELECT sum(hours)/8 FROM timesheetdata T \r\n   WHERE employeeid = data.id \r\n   and job IN (\\''Vacation\\'') \r\n   AND Year(T.weekday) = \\''%Y\\'') AS PaidVacationDaysToDate,\r\n  (SELECT sum(hours)/8 FROM timesheetdata T \r\n   WHERE employeeid = data.id \r\n   and job IN (\\''Personal\\'') \r\n   AND Year(T.weekday) = \\''%Y\\'') AS PaidPersonalDaysToDate,  \r\n   rate \r\n from  \r\n  (SELECT \r\n   E.id, \r\n   E.salutation, \r\n   E.username, \r\n   E.firstname, \r\n   E.lastname,\r\n   E.employeetype,\r\n   E.isactive,\r\n   E.status,\r\n   TD.weekday ,\r\n   hours,\r\n   TD.jobid,\r\n   CASE  \r\n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \r\n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \r\n                                 AND RT.employeeid = TD.employeeid AND (jobid is NULL or jobid = 0))\r\n      ELSE  rate\r\n \r\n   END  AS Rate \r\n\r\n  FROM   timesheetdata AS TD INNER JOIN employee as E    \r\n  on  (TD.employeeid = E.id  ) \r\n\r\n\r\n  LEFT  OUTER JOIN rate AS R\r\n  ON (TD.employeeid = R.employeeid    AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\r\n\r\n  where   E.isactive = \\"Y\\"\r\n    AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT( NOW()  ,\\''%Y-%m-01\\'')) AND now()\r\n    AND  TD.hours > 0\r\n    AND employeetype <> \\''Contractor\\'' \r\n\r\n\r\n   ) AS data\r\nGROUP BY\r\n   id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   rate\r\n) AS payroll\r\nWHERE id  in (60,64)\r\nUNION ALL\r\nselect \r\n   96, \r\n   \\''Mr\\'', \r\n   \\''Semu\\'', \r\n   \\''Njuki\\'',\r\n    20.00,\r\n    25.00 \r\n \r\nORDER by\r\n  \r\n   lastname   ', '', '2010-08-29 14:41:19', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(43, 'PAYROLL-QMTD-PAYCHEX', 'From 1st of this month to Date', 'SELECT \r\n   id, \r\n   salutation, \r\n   firstname, \r\n   lastname,\r\n   HoursWorked,\r\n   rate \r\n\r\n FROM\r\n (SELECT \r\n   id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   sum(hours) HoursWorked,\r\n   CASE WHEN \r\n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \r\n                       WHERE  DAYNAME(weekday) NOT IN (\\''Saturday\\'',\\''Sunday\\'')\r\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,\\''%Y-%m-01\\'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,\\''%Y-%m-15\\''))) = 0 \r\n                       AND employeetype IN (\\''Full Time\\'' ) \r\n       THEN \\''REGULAR\\''\r\n       WHEN \r\n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T  \r\n                       WHERE  DAYNAME(weekday) NOT IN (\\''Saturday\\'',\\''Sunday\\'')\r\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,\\''%Y-%m-01\\'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,\\''%Y-%m-15\\''))) < 0 \r\n       THEN \\''HOURLY\\''\r\n       WHEN \r\n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \r\n                       WHERE  DAYNAME(weekday) NOT IN (\\''Saturday\\'',\\''Sunday\\'')\r\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,\\''%Y-%m-01\\'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,\\''%Y-%m-15\\''))) > 0\r\n                       AND employeetype IN (\\''Full Time\\'' ) \r\n             \r\n       THEN \\''REGULAR WITH OVERTIME\\''\r\n       ELSE \\''HOURLY\\'' \r\n   END  PayrollCategory,\r\n  \r\n   \r\n   sum(hours) - COALESCE((SELECT sum(hours) FROM timesheetdata T \r\n                     WHERE T.employeeid = data.id\r\n                       AND  T.job  IN (\\''Vacation\\'',\\''Sick\\'',\\''Personal\\'',\\''Paid Holiday\\'')          \r\n                       AND  T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,\\''%Y-%m-01\\'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,\\''%Y-%m-15\\''))),0) HoursBilled,\r\n  (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \r\n   WHERE  DAYNAME(weekday) NOT IN (\\''Saturday\\'',\\''Sunday\\'')\r\n   AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,\\''%Y-%m-01\\'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,\\''%Y-%m-15\\''))) HoursInPeriod,\r\n  (SELECT count(1)*8 FROM publicholidays  PH\r\n   WHERE  PH.publicholidaydate BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,\\''%Y-%m-01\\'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,\\''%Y-%m-15\\''))) as  HolidaysHoursInPeriod,\r\n \r\n  (SELECT sum(hours)/8 FROM timesheetdata T \r\n   WHERE employeeid = data.id \r\n   and job IN (\\''Paid Holiday\\'') \r\n   AND Year(T.weekday) = \\''%Y\\'') AS PaidHolidaysToDate,\r\n  (SELECT sum(hours)/8 FROM timesheetdata T \r\n   WHERE employeeid =   data.id \r\n   and job IN (\\''Sick\\'') \r\n   AND Year(T.weekday) = \\''%Y\\'') AS PaidSickDaysToDate,\r\n  (SELECT sum(hours)/8 FROM timesheetdata T \r\n   WHERE employeeid = data.id \r\n   and job IN (\\''Vacation\\'') \r\n   AND Year(T.weekday) = \\''%Y\\'') AS PaidVacationDaysToDate,\r\n  (SELECT sum(hours)/8 FROM timesheetdata T \r\n   WHERE employeeid = data.id \r\n   and job IN (\\''Personal\\'') \r\n   AND Year(T.weekday) = \\''%Y\\'') AS PaidPersonalDaysToDate,  \r\n   rate  \r\n   \r\n from  \r\n  (SELECT \r\n   E.id, \r\n   E.salutation, \r\n   E.username, \r\n   E.firstname, \r\n   E.lastname,\r\n   E.employeetype,\r\n   E.isactive,\r\n   E.status,\r\n   TD.weekday ,\r\n   hours,\r\n   TD.jobid,\r\n   CASE  \r\n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \r\n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \r\n                                 AND RT.employeeid = TD.employeeid AND (jobid is NULL or jobid = 0))\r\n      ELSE  rate\r\n \r\n   END  AS Rate \r\n\r\n  FROM   timesheetdata AS TD INNER JOIN employee as E    \r\n  on  (TD.employeeid = E.id  ) \r\n\r\n\r\n  LEFT  OUTER JOIN rate AS R\r\n  ON (TD.employeeid = R.employeeid    AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\r\n\r\n  where   E.isactive = \\"Y\\"\r\n    AND  TD.weekday     BETWEEN  (SELECT DATE_FORMAT( NOW()  ,\\''%Y-%m-01\\'')) AND now()\r\n    \r\n    AND  TD.hours > 0\r\n    AND employeetype <> \\''Contractor\\'' \r\n\r\n\r\n   ) AS data\r\nGROUP BY\r\n   id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   rate\r\n) AS payroll\r\nWHERE id not in (60,64,92,91,103)\r\nUNION ALL\r\nselect \r\n   96, \r\n   \\''Mr\\'', \r\n   \\''Tony\\'', \r\n   \\''Zanfardino\\'',\r\n    14.00,\r\n    72.00 \r\n\r\nORDER by\r\n   lastname   ', '', '2010-08-29 14:40:57', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(44, 'IDASH - RECON - MTD Billing', 'Data for this month\\''s billed labor hours', ' SELECT \r\n   TD.id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   isactive,\r\n   status,\r\n   Month,\r\n   (SELECT  max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber,\r\n   (SELECT  max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND PR.currentflag = \\''Y\\'') AS Contract,   \r\n   TD.jobid, \r\n   TD.jobcode,\r\n   TD.job,\r\n   sum(hours) TotalHours, \r\n    CASE  \r\n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(contractorrate) FROM rate RT \r\n                                 WHERE  TD.weekday BETWEEN effectivedate AND expirydate \r\n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\r\n      ELSE contractorrate\r\n    \r\n   END  AS Contractorrate,   \r\n   CASE  \r\n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \r\n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \r\n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\r\n      ELSE  rate\r\n \r\n   END  AS Rate \r\n FROM \r\n (SELECT \r\n  E.id, \r\n  E.salutation, \r\n  E.username, \r\n  E.firstname, \r\n  E.lastname,\r\n  E.employeetype,\r\n  E.isactive,\r\n  E.status,\r\n  TD.jobid,\r\n  monthname(TD.weekday) AS Month,\r\n  TD.job,\r\n  TD.jobcode,\r\n  DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, \r\n    \r\n  sum(hours) AS hours \r\nFROM timesheetdata  TD , employee   E    \r\nWHERE   TD.employeeid = E.id  \r\n    AND   E.isactive = \\"Y\\"\r\n    AND  TD.weekday    BETWEEN   (SELECT DATE_FORMAT( NOW()  ,\\''%Y-%m-01\\'')) AND NOW()\r\n    AND  TD.paycode in (\\''RT\\'',\\''OT\\'')\r\n    AND  TD.hours > 0\r\nGROUP BY \r\n  E.id, \r\n  E.salutation, \r\n  E.username, \r\n  E.firstname, \r\n  E.lastname,\r\n  E.employeetype,\r\n  E.isactive,\r\n  TD.weekday,\r\n  TD.jobid,\r\n  TD.job,\r\n  TD.jobcode,\r\n  E.status) AS TD \r\n  LEFT  OUTER JOIN rate AS R\r\n  ON (TD.id = R.employeeid  \r\n  AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\r\nGROUP BY\r\n   Month,\r\n   TD.id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   isactive,\r\n   status,\r\n   Contractorrate,\r\n     TD.jobid, \r\n   TD.job,\r\n   Rate\r\nORDER BY \r\n   Month,\r\n   Contract,\r\n   jobid,\r\n   employeetype DESC  \r\n ', '', '2010-08-28 12:03:51', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(45, 'IDASH - RECON - Last Year Bill', 'Last year\\''s billed labor hours', ' SELECT \r\n   TD.id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   isactive,\r\n   status,\r\n   Month,\r\n   (SELECT  max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber,\r\n   (SELECT  max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND PR.currentflag = \\''Y\\'') AS Contract,   \r\n   TD.jobid, \r\n   TD.jobcode,\r\n   TD.job,\r\n   sum(hours) TotalHours, \r\n    CASE  \r\n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(contractorrate) FROM rate RT \r\n                                 WHERE  TD.weekday BETWEEN effectivedate AND expirydate \r\n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\r\n      ELSE contractorrate\r\n    \r\n   END  AS Contractorrate,   \r\n   CASE  \r\n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \r\n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \r\n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\r\n      ELSE  rate\r\n \r\n   END  AS Rate \r\n FROM \r\n (SELECT \r\n  E.id, \r\n  E.salutation, \r\n  E.username, \r\n  E.firstname, \r\n  E.lastname,\r\n  E.employeetype,\r\n  E.isactive,\r\n  E.status,\r\n  TD.jobid,\r\n  monthname(TD.weekday) AS Month,\r\n  TD.job,\r\n  TD.jobcode,\r\n  DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, \r\n    \r\n  sum(hours) AS hours \r\nFROM timesheetdata  TD , employee   E    \r\nWHERE   TD.employeeid = E.id  \r\n    AND   E.isactive = \\"Y\\"\r\n    AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 year) ,\\''%Y-01-01\\'')) \r\n                           AND  (SELECT  DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 year), \\''%Y-12-31\\'')) \r\n\r\nAND  TD.paycode in (\\''RT\\'',\\''OT\\'')\r\n    AND  TD.hours > 0\r\nGROUP BY \r\n  E.id, \r\n  E.salutation, \r\n  E.username, \r\n  E.firstname, \r\n  E.lastname,\r\n  E.employeetype,\r\n  E.isactive,\r\n  TD.weekday,\r\n  TD.jobid,\r\n  TD.job,\r\n  TD.jobcode,\r\n  E.status) AS TD \r\n  LEFT  OUTER JOIN rate AS R\r\n  ON (TD.id = R.employeeid  \r\n  AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\r\nGROUP BY\r\n   Month,\r\n   TD.id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   isactive,\r\n   status,\r\n   Contractorrate,\r\n     TD.jobid, \r\n   TD.job,\r\n   Rate\r\nORDER BY \r\n   Month,\r\n   Contract,\r\n   jobid,\r\n   employeetype DESC  \r\n ', '', '2010-08-28 12:14:24', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(46, 'IDASH - RECON - YTD Billing', 'This year\\''s billed labor hours', ' SELECT \r\n   TD.id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   isactive,\r\n   status,\r\n   Month,\r\n   (SELECT  max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber,\r\n   (SELECT  max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND PR.currentflag = \\''Y\\'') AS Contract,   \r\n   TD.jobid, \r\n   TD.jobcode,\r\n   TD.job,\r\n   sum(hours) TotalHours, \r\n    CASE  \r\n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(contractorrate) FROM rate RT \r\n                                 WHERE  TD.weekday BETWEEN effectivedate AND expirydate \r\n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\r\n      ELSE contractorrate\r\n    \r\n   END  AS Contractorrate,   \r\n   CASE  \r\n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \r\n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \r\n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\r\n      ELSE  rate\r\n \r\n   END  AS Rate \r\n FROM \r\n (SELECT \r\n  E.id, \r\n  E.salutation, \r\n  E.username, \r\n  E.firstname, \r\n  E.lastname,\r\n  E.employeetype,\r\n  E.isactive,\r\n  E.status,\r\n  TD.jobid,\r\n  monthname(TD.weekday) AS Month,\r\n  TD.job,\r\n  TD.jobcode,\r\n  DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, \r\n    \r\n  sum(hours) AS hours \r\nFROM timesheetdata  TD , employee   E    \r\nWHERE   TD.employeeid = E.id  \r\n    AND   E.isactive = \\"Y\\"\r\n    AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT( NOW()  ,\\''%Y-01-01\\'')) AND now()\r\n\r\nAND  TD.paycode in (\\''RT\\'',\\''OT\\'')\r\n    AND  TD.hours > 0\r\nGROUP BY \r\n  E.id, \r\n  E.salutation, \r\n  E.username, \r\n  E.firstname, \r\n  E.lastname,\r\n  E.employeetype,\r\n  E.isactive,\r\n  TD.weekday,\r\n  TD.jobid,\r\n  TD.job,\r\n  TD.jobcode,\r\n  E.status) AS TD \r\n  LEFT  OUTER JOIN rate AS R\r\n  ON (TD.id = R.employeeid  \r\n  AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\r\nGROUP BY\r\n   Month,\r\n   TD.id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   isactive,\r\n   status,\r\n   Contractorrate,\r\n     TD.jobid, \r\n   TD.job,\r\n   Rate\r\nORDER BY \r\n   Month,\r\n   Contract,\r\n   jobid,\r\n   employeetype DESC  \r\n ', '', '2010-08-28 12:23:29', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(47, 'IDASH - RECON - ODC', 'Other Development Costs submitted for approval', 'SELECT datecreated as \\"datecreated\\", id AS \\"theid\\", employee AS \\"Employee\\", jobnumber AS \\"Job Number\\", costcenter AS \\"Cost Center\\", poline as \\"PO Line\\", DATE_FORMAT(transactiondate, \\''%m/%d/%Y\\'') AS \\"Transaction Date\\", amount as \\"Amount\\", description as \\"Description\\", status as \\"Status\\" FROM c_odc WHERE status = \\''Submitted\\'' ORDER BY transactiondate DESC', '', '2010-08-29 14:18:54', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(48, 'IDASH - RECON - Travel Expense', 'Travel Expenses submitted for approval', 'SELECT td.id as theid, td.jobnumber, td.costcentercode, CONCAT(e.firstname, \\" \\", e.lastname) AS \\"Employee\\",td.purpose AS \\"Purpose\\", td.currentamount AS \\"Total Amount\\", td.startdate AS \\"Start Date\\", td.enddate AS \\"End Date\\", td.jobnumber AS \\"Job Number\\", td.costcentercode AS \\"Cost Center\\", td.activity AS Activity, td.city AS \\"City\\", td.state AS \\"State\\", td.status AS \\"Status\\" FROM traveldetails AS td INNER JOIN employee AS e ON e.id = td.employeeid WHERE ( CONCAT(e.firstname, \\" \\", e.lastname) LIKE \\''%%\\'' OR td.currentamount LIKE \\''%%\\'' OR td.startdate LIKE \\''%%\\'' OR td.enddate LIKE \\''%%\\'' OR td.city LIKE \\''%%\\'' OR td.state LIKE \\''%%\\'') AND td.status = \\''Submitted\\'' ORDER BY enddate DESC', '', '2010-08-29 14:34:23', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(49, 'IDASH - RECON - Travel YTD', 'Travel Expenses from start of this year to Date', 'SELECT td.id as theid, td.jobnumber, td.costcentercode, CONCAT(e.firstname, \\" \\", e.lastname) AS \\"Employee\\",td.purpose AS \\"Purpose\\", td.currentamount AS \\"Total Amount\\", td.startdate AS \\"Start Date\\", td.enddate AS \\"End Date\\", td.jobnumber AS \\"Job Number\\", td.costcentercode AS \\"Cost Center\\", td.activity AS Activity, td.city AS \\"City\\", td.state AS \\"State\\", td.status AS \\"Status\\" FROM traveldetails AS td INNER JOIN employee AS e ON e.id = td.employeeid WHERE ( CONCAT(e.firstname, \\" \\", e.lastname) LIKE \\''%%\\'' OR td.currentamount LIKE \\''%%\\'' OR td.startdate LIKE \\''%%\\'' OR td.enddate LIKE \\''%%\\'' OR td.city LIKE \\''%%\\'' OR td.state LIKE \\''%%\\'') AND (td.enddate BETWEEN  (SELECT DATE_FORMAT(NOW()  ,\\''%Y-01-01\\'')) AND now()) ORDER BY enddate DESC', '', '2010-08-29 14:52:16', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(50, 'IDASH - RECON - Travel YTD-Inv', 'Approved Travel Expenses from start of this year to Date', 'SELECT td.id as theid, td.jobnumber, td.costcentercode, CONCAT(e.firstname, \\" \\", e.lastname) AS \\"Employee\\",td.purpose AS \\"Purpose\\", td.currentamount AS \\"Total Amount\\", td.startdate AS \\"Start Date\\", td.enddate AS \\"End Date\\", td.jobnumber AS \\"Job Number\\", td.costcentercode AS \\"Cost Center\\", td.activity AS Activity, td.city AS \\"City\\", td.state AS \\"State\\", td.status AS \\"Status\\" FROM traveldetails AS td INNER JOIN employee AS e ON e.id = td.employeeid WHERE ( CONCAT(e.firstname, \\" \\", e.lastname) LIKE \\''%%\\'' OR td.currentamount LIKE \\''%%\\'' OR td.startdate LIKE \\''%%\\'' OR td.enddate LIKE \\''%%\\'' OR td.city LIKE \\''%%\\'' OR td.state LIKE \\''%%\\'') AND (td.enddate BETWEEN  (SELECT DATE_FORMAT(NOW()  ,\\''%Y-01-01\\'')) AND now()) AND td.status = \\''Approved\\'' ORDER BY enddate DESC', '', '2010-08-29 14:46:35', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(51, 'IDASH - RECON - Travel YTD-Out', 'Travel Expenses not yet approved or rejected from start of this year to Date', 'SELECT td.id as theid, td.jobnumber, td.costcentercode, CONCAT(e.firstname, \\" \\", e.lastname) AS \\"Employee\\",td.purpose AS \\"Purpose\\", td.currentamount AS \\"Total Amount\\", td.startdate AS \\"Start Date\\", td.enddate AS \\"End Date\\", td.jobnumber AS \\"Job Number\\", td.costcentercode AS \\"Cost Center\\", td.activity AS Activity, td.city AS \\"City\\", td.state AS \\"State\\", td.status AS \\"Status\\" FROM traveldetails AS td INNER JOIN employee AS e ON e.id = td.employeeid WHERE ( CONCAT(e.firstname, \\" \\", e.lastname) LIKE \\''%%\\'' OR td.currentamount LIKE \\''%%\\'' OR td.startdate LIKE \\''%%\\'' OR td.enddate LIKE \\''%%\\'' OR td.city LIKE \\''%%\\'' OR td.state LIKE \\''%%\\'') AND (td.enddate BETWEEN  (SELECT DATE_FORMAT(NOW()  ,\\''%Y-01-01\\'')) AND now()) AND (td.status = \\''Saved\\'' OR td.status = \\''Submitted\\'')  ORDER BY enddate DESC', '', '2010-08-29 14:51:06', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(52, 'IDASH - RECON-Travel-ThisMonth', 'Travel Expenses from 1st of this month', 'SELECT td.id as theid, td.jobnumber, td.costcentercode, CONCAT(e.firstname, \\" \\", e.lastname) AS \\"Employee\\",td.purpose AS \\"Purpose\\", td.currentamount AS \\"Total Amount\\", td.startdate AS \\"Start Date\\", td.enddate AS \\"End Date\\", td.jobnumber AS \\"Job Number\\", td.costcentercode AS \\"Cost Center\\", td.activity AS Activity, td.city AS \\"City\\", td.state AS \\"State\\", td.status AS \\"Status\\" FROM traveldetails AS td INNER JOIN employee AS e ON e.id = td.employeeid WHERE ( CONCAT(e.firstname, \\" \\", e.lastname) LIKE \\''%%\\'' OR td.currentamount LIKE \\''%%\\'' OR td.startdate LIKE \\''%%\\'' OR td.enddate LIKE \\''%%\\'' OR td.city LIKE \\''%%\\'' OR td.state LIKE \\''%%\\'') AND (td.enddate BETWEEN  (SELECT DATE_FORMAT(NOW()  ,\\''%Y-%m-01\\'')) AND now()) ORDER BY enddate DESC', '', '2010-08-29 15:22:51', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(53, 'IDASH - RECON-Travel-LastMonth', 'Travel Expenses for last month', 'SELECT td.id as theid, td.jobnumber, td.costcentercode, CONCAT(e.firstname, \\" \\", e.lastname) AS \\"Employee\\",td.purpose AS \\"Purpose\\", td.currentamount AS \\"Total Amount\\", td.startdate AS \\"Start Date\\", td.enddate AS \\"End Date\\", td.jobnumber AS \\"Job Number\\", td.costcentercode AS \\"Cost Center\\", td.activity AS Activity, td.city AS \\"City\\", td.state AS \\"State\\", td.status AS \\"Status\\" FROM traveldetails AS td INNER JOIN employee AS e ON e.id = td.employeeid WHERE ( CONCAT(e.firstname, \\" \\", e.lastname) LIKE \\''%%\\'' OR td.currentamount LIKE \\''%%\\'' OR td.startdate LIKE \\''%%\\'' OR td.enddate LIKE \\''%%\\'' OR td.city LIKE \\''%%\\'' OR td.state LIKE \\''%%\\'') AND (td.enddate BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,\\''%Y-%m-01\\'')) \r\n                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) ORDER BY enddate DESC', '', '2010-08-29 15:22:11', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(54, 'IDASH - RECON-Travel-LastYear', 'Last year\\''s Travel Expenses', 'SELECT td.id as theid, td.jobnumber, td.costcentercode, CONCAT(e.firstname, \\" \\", e.lastname) AS \\"Employee\\",td.purpose AS \\"Purpose\\", td.currentamount AS \\"Total Amount\\", td.startdate AS \\"Start Date\\", td.enddate AS \\"End Date\\", td.jobnumber AS \\"Job Number\\", td.costcentercode AS \\"Cost Center\\", td.activity AS Activity, td.city AS \\"City\\", td.state AS \\"State\\", td.status AS \\"Status\\" FROM traveldetails AS td INNER JOIN employee AS e ON e.id = td.employeeid WHERE ( CONCAT(e.firstname, \\" \\", e.lastname) LIKE \\''%%\\'' OR td.currentamount LIKE \\''%%\\'' OR td.startdate LIKE \\''%%\\'' OR td.enddate LIKE \\''%%\\'' OR td.city LIKE \\''%%\\'' OR td.state LIKE \\''%%\\'') AND (td.enddate BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 year) ,\\''%Y-01-01\\'')) \r\n                           AND  (SELECT  DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 year), \\''%Y-12-31\\''))) ORDER BY enddate DESC', '', '2010-08-29 15:22:32', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(55, 'IDASH - RECON - ODC YTD', 'ODC from start of this year to Date', 'SELECT datecreated as \\"datecreated\\", id AS \\"theid\\", employee AS \\"Employee\\", jobnumber AS \\"Job Number\\", costcenter AS \\"Cost Center\\", poline as \\"PO Line\\", DATE_FORMAT(transactiondate, \\''%m/%d/%Y\\'') AS \\"Transaction Date\\", amount as \\"Amount\\", description as \\"Description\\", status as \\"Status\\" FROM c_odc WHERE (transactiondate BETWEEN  (SELECT DATE_FORMAT( NOW()  ,\\''%Y-01-01\\'')) AND now()) ORDER BY transactiondate DESC', '', '2010-08-29 15:21:49', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(56, 'IDASH - RECON - ODC YTD-Inv', 'Approved ODC from start of this year to Date', 'SELECT datecreated as \\"datecreated\\", id AS \\"theid\\", employee AS \\"Employee\\", jobnumber AS \\"Job Number\\", costcenter AS \\"Cost Center\\", poline as \\"PO Line\\", DATE_FORMAT(transactiondate, \\''%m/%d/%Y\\'') AS \\"Transaction Date\\", amount as \\"Amount\\", description as \\"Description\\", status as \\"Status\\" FROM c_odc WHERE (transactiondate BETWEEN  (SELECT DATE_FORMAT( NOW()  ,\\''%Y-01-01\\'')) AND now()) AND status = \\''Approved\\'' ORDER BY transactiondate DESC', '', '2010-08-29 15:20:44', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(57, 'IDASH - RECON - ODC YTD-Out', 'ODC not yet approved or rejected from start of this year to Date', 'SELECT datecreated as \\"datecreated\\", id AS \\"theid\\", employee AS \\"Employee\\", jobnumber AS \\"Job Number\\", costcenter AS \\"Cost Center\\", poline as \\"PO Line\\", DATE_FORMAT(transactiondate, \\''%m/%d/%Y\\'') AS \\"Transaction Date\\", amount as \\"Amount\\", description as \\"Description\\", status as \\"Status\\" FROM c_odc WHERE (transactiondate BETWEEN  (SELECT DATE_FORMAT( NOW()  ,\\''%Y-01-01\\'')) AND now()) AND  (status = \\''Saved\\'' OR status = \\''Submitted\\'') ORDER BY transactiondate DESC', '', '2010-08-29 15:26:00', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(58, 'IDASH - RECON - ODC-ThisMonth', 'ODC from 1st of this month', 'SELECT datecreated as \\"datecreated\\", id AS \\"theid\\", employee AS \\"Employee\\", jobnumber AS \\"Job Number\\", costcenter AS \\"Cost Center\\", poline as \\"PO Line\\", DATE_FORMAT(transactiondate, \\''%m/%d/%Y\\'') AS \\"Transaction Date\\", amount as \\"Amount\\", description as \\"Description\\", status as \\"Status\\" FROM c_odc WHERE (transactiondate BETWEEN  (SELECT DATE_FORMAT( NOW()  ,\\''%Y-%m-01\\'')) AND now()) ORDER BY transactiondate DESC', '', '2010-08-29 15:30:09', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(59, 'IDASH - RECON - ODC-LastMonth', 'ODC for last month', 'SELECT datecreated as \\"datecreated\\", id AS \\"theid\\", employee AS \\"Employee\\", jobnumber AS \\"Job Number\\", costcenter AS \\"Cost Center\\", poline as \\"PO Line\\", DATE_FORMAT(transactiondate, \\''%m/%d/%Y\\'') AS \\"Transaction Date\\", amount as \\"Amount\\", description as \\"Description\\", status as \\"Status\\" FROM c_odc WHERE (transactiondate BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,\\''%Y-%m-01\\'')) \r\n                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) ORDER BY transactiondate DESC', '', '2010-08-29 15:34:25', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(60, 'IDASH - RECON - ODC-LastYear', 'Last year\\''s ODC', 'SELECT datecreated as \\"datecreated\\", id AS \\"theid\\", employee AS \\"Employee\\", jobnumber AS \\"Job Number\\", costcenter AS \\"Cost Center\\", poline as \\"PO Line\\", DATE_FORMAT(transactiondate, \\''%m/%d/%Y\\'') AS \\"Transaction Date\\", amount as \\"Amount\\", description as \\"Description\\", status as \\"Status\\" FROM c_odc WHERE (transactiondate BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 year) ,\\''%Y-01-01\\'')) \r\n                           AND  (SELECT  DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 year), \\''%Y-12-31\\''))) ORDER BY transactiondate DESC', '', '2010-08-29 15:40:00', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(61, 'IDASH - RECON-AsOfDate JNsVsPr', 'Copy of RECON-AsOfDate JNsVsPrevious query with field name Hours changed', 'select \r\ncur.*,\r\n(SELECT  max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = cur.jobcode and cur.id = RL.employeeid AND now() BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber,\r\n(SELECT sum(hours) AS hours FROM timesheetdata  TD   WHERE cur.jobcode = TD.jobcode AND cur.id = TD.employeeid\r\n     AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT(NOW(),\\''%Y-%m-01\\''))\r\n                           AND  (SELECT  LAST_DAY( NOW()))\r\n     AND  TD.paycode in (\\''RT\\'',\\''OT\\'')) AS HoursWorked\r\n \r\nfrom \r\n(SELECT distinct monthname(TD.weekday) as month,E.id, E.salutation, E.username, E.firstname, E.lastname,   TD.job, TD.jobcode\r\nFROM timesheetdata TD, employee E\r\nWHERE TD.employeeid = E.id and TD.hours > 0\r\nAND TD.weekday\r\nBETWEEN (\r\n\r\nSELECT DATE_FORMAT( DATE_ADD( NOW( ) , INTERVAL -0\r\nMONTH ) , \\''%Y-%m-01\\'' ) \r\n)\r\nAND (\r\n\r\nSELECT LAST_DAY( DATE_ADD( NOW( ) , INTERVAL -0\r\nMONTH ) ) \r\n)) as cur left outer join \r\n(SELECT distinct monthname(TD.weekday) as month, E.id, E.salutation, E.username, E.firstname, E.lastname,   TD.job, TD.jobcode\r\nFROM timesheetdata TD, employee E\r\nWHERE TD.employeeid = E.id and TD.hours > 0\r\nAND TD.weekday\r\nBETWEEN (\r\n\r\nSELECT DATE_FORMAT( DATE_ADD( NOW( ) , INTERVAL -1\r\nMONTH ) , \\''%Y-%m-01\\'' ) \r\n)\r\nAND (\r\n\r\nSELECT LAST_DAY( DATE_ADD( NOW( ) , INTERVAL -1\r\nMONTH ) ) \r\n)) as prev\r\non (cur.id = prev.id and cur.jobcode=prev.jobcode)\r\nwhere (cur.jobcode is NULL or prev.jobcode is NULL)', '', '2010-08-29 18:56:26', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(62, 'IDASH-RECON-Last Month\\''s TS S', 'Run after the 1st - Check Last month Saved/Rejected/Unapproved Time ', 'SELECT   TD.id AS \\"Sheet ID\\",  E.id AS \\"employeeid\\", CONCAT(E.firstname, \\" \\", E.lastname) AS \\"employee\\",   E.salutation,    E.username,  E.employeetype,   E.isactive,   E.status, DATE_FORMAT(TD.weekendingdate, \\''%c-%e-%Y\\'') as periodending,   TD.status\r\nFROM timesheet  TD , employee   E    \r\nWHERE   TD.employeeid = E.id                 \r\n    AND  TD.status NOT IN (\\"Approved\\",\\"Closed\\")\r\n    AND  TD.weekendingdate       BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,\\''%Y-%m-01\\'')) \r\n                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))) \r\n    \r\nORDER BY TD.weekendingdate\r\n    ', '', '2010-09-03 14:03:21', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(64, 'IDASH-PAYROLL-Period - 2 NotAp', 'Period 2, Saved, Rejected, Submitted Time (To Replace \\''PAYROLL-Period - 2 NotApproved\\'' query after approval) ', 'SELECT     E.id,    E.salutation,    E.username,   CONCAT(E.firstname, \\" \\", E.lastname) AS \\"employee\\",   E.employeetype,   E.isactive,   E.status,  DATE_FORMAT(TD.weekendingdate, \\''%c-%e-%Y\\'') as periodending,   TD.status, TD.id AS \\"Sheet ID\\"\r\nFROM timesheet  TD , employee   E    \r\nWHERE   TD.employeeid = E.id                 \r\n    AND  TD.status NOT IN (\\"Approved\\",\\"Closed\\")\r\n    AND  TD.weekendingdate  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,\\''%Y-%m-16\\'')) \r\n                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))\r\n    \r\nORDER BY TD.weekendingdate', '', '2010-09-03 14:29:09', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(65, 'IDASH-PAYROLL-Period - 1 NotAp', 'Period 1, Saved, Rejected, Submitted Time (To Replace \\''PAYROLL-Period - 1 NotApproved\\'' query after approval) ', 'SELECT     E.id,    E.salutation,    E.username,     CONCAT(E.firstname, \\" \\", E.lastname) AS \\"employee\\",   E.employeetype,   E.isactive,   E.status,   DATE_FORMAT(TD.weekendingdate, \\''%c-%e-%Y\\'') as periodending,   TD.status, TD.id AS \\"Sheet ID\\"\r\nFROM timesheet  TD , employee   E    \r\nWHERE   TD.employeeid = E.id                 \r\n    AND  TD.status NOT IN (\\"Approved\\",\\"Closed\\")\r\n    AND  TD.weekendingdate  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,\\''%Y-%m-01\\'')) \r\n                           AND  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,\\''%Y-%m-15\\'')) \r\n    \r\nORDER BY TD.weekendingdate', '', '2010-09-03 14:31:52', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(67, 'AGING REPORT', 'Aging Report (Labor, Travel, ODC) -- ODC/Travel not updated yet', 'select\n ''LABOR'' as InvoiceType,\n   Month,\n   Contract,\n   PONumber,\n  jobcode,\n  sum(TotalHours*rate) as Amount\nfrom\n\n\n(SELECT    \n   (SELECT  max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber,\n   (SELECT  max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND PR.currentflag = ''Y'') AS Contract,   \n   salutation, \n   username, \n   firstname, \n   lastname,\n \n   Month,\n   TD.jobid, \n   TD.jobcode,\n   sum(hours) TotalHours, \n  \n   CASE  \n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\n      ELSE  rate\n \n   END  AS Rate \n FROM \n (SELECT \n  E.id, \n  E.salutation, \n  E.username, \n  E.firstname, \n  E.lastname,\n  E.employeetype,\n  E.isactive,\n  E.status,\n  TD.jobid,\n  monthname(TD.weekday) AS Month,\n  TD.job,\n  TD.jobcode,\n  DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, \n    \n  sum(hours) AS hours \nFROM timesheetdata  TD , employee   E    \nWHERE   TD.employeeid = E.id  \n    AND   E.isactive = "Y"\n    AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-01'')) \n                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))) \n    AND  TD.paycode in (''RT'',''OT'')\n    AND  TD.hours > 0\nGROUP BY \n  E.id, \n  E.salutation, \n  E.username, \n  E.firstname, \n  E.lastname,\n  E.employeetype,\n  E.isactive,\n  TD.weekday,\n  TD.jobid,\n  TD.job,\n  TD.jobcode,\n  E.status) AS TD \n  LEFT  OUTER JOIN rate AS R\n  ON (TD.id = R.employeeid  \n  AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\nGROUP BY\n   Month,\n   \n   salutation, \n   username, \n   firstname, \n   lastname,\n     TD.jobid, \n   \n   Rate\nORDER BY \n   Month,\n   Contract,\n   jobid,\n   employeetype DESC) as B  \n \ngroup by \n     Month,\n   COntract,\n   PONumber,\n   jobcode ', 'MedImmune', '2013-07-25 20:15:12', 80, NULL, 80, 1, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(68, 'AUDIT-Permission Templates', '', ' \n    SELECT \n            e1.id, \n            CONCAT(e1.firstname, '' '', e1.lastname) AS employee,\n            e1.employeetype, \n            e2.username AS permissiontemplate \n    FROM \n            employee e1 \n    JOIN \n            employee e2 \n    ON \n            e2.id = e1.permissiontemplate\n  where e1.status=''Active''\n   order by e1.permissiontemplate;\n', '', '2013-03-12 14:17:33', 80, NULL, 80, 1, 1, '0|0', '2038-01-01', 'N', '0000-00-00'),
(69, 'IDASH-EVM-HrsCheck_TskCode', 'This is to check which hours were logged for the period 2010-10-01 between 2010-12-31 for a given jobcode (4549). This is changeable to determine other values.', 'SELECT *, SUM(hours) AS hoursdone FROM timesheetdata WHERE weekday BETWEEN \\''2010-10-01\\'' AND \\''2010-12-31\\'' AND jobcode = \\''4549\\''', '', '2011-01-25 15:53:11', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(70, 'RECON-HolidayHours', 'Run before the first of the month', 'SELECT \n  E.id, \n  E.salutation, \n  E.username, \n  E.firstname, \n  E.lastname,\n  E.employeetype,\n  E.isactive,\n  E.status,\n  TD.jobid,\n  monthname(TD.weekday) AS Month,\n  year(TD.weekday) AS Year,\n  TD.job,\n  TD.jobcode,\n  DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, \nTD.paycode ,\n  sum(hours) AS hours \nFROM timesheetdata  TD , employee   E   \nWHERE    TD.employeeid = E.id                 \n         AND  TD.hours > 0\n    AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT( NOW()  ,''%Y-%m-01'')) AND now()\n    AND  TD.weekday in (select publicholidaydate from publicholidays)\n \nGROUP BY \n  E.id, \n  E.salutation, \n  E.username, \n  E.firstname, \n  E.lastname,\n  E.employeetype,\n  E.isactive,\n  TD.weekday,\n  TD.jobid,\n  TD.job,\n  TD.jobcode,\n  TD.jobcode,\n  E.status \nUNION ALL\nSELECT \n  E.id, \n  E.salutation, \n  E.username, \n  E.firstname, \n  E.lastname,\n  E.employeetype,\n  E.isactive,\n  E.status,\n  TD.jobid,\n  monthname(TD.weekday) AS Month,\n  year(TD.weekday) AS Year,\n  TD.job,\n  TD.jobcode,\n  DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, \nTD.paycode ,\n  sum(hours) AS hours \nFROM timesheetdata  TD , employee   E   \nWHERE    TD.employeeid = E.id                 \n         AND  TD.hours = 0\n    AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT( NOW()  ,''%Y-%m-01'')) AND now()\n    AND  TD.weekday in (select publicholidaydate from publicholidays) \n    AND  EmployeeType = ''Full Time''\n    AND  TD.paycode = ''HT''\n \nGROUP BY \n  E.id, \n  E.salutation, \n  E.username, \n  E.firstname, \n  E.lastname,\n  E.employeetype,\n  E.isactive,\n  TD.weekday,\n  TD.jobid,\n  TD.job,\n  TD.jobcode,\n  TD.jobcode,\n  E.status \norder by employeetype', '', '2011-01-27 13:29:15', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(71, 'Receivables - 2011', 'Receivables - 2011', 'SELECT \n   TD.id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   employeetype,\n   isactive,\n   status,\n   Month,\n   (SELECT max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber,\n   (SELECT  max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND PR.currentflag = ''Y'') AS Contract,   \n   TD.jobid, \n   TD.jobcode,\n   TD.job,\n   sum(hours) TotalHours, \n    CASE  \n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(contractorrate) FROM rate RT \n                                 WHERE  TD.weekday BETWEEN effectivedate AND expirydate \n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\n      ELSE contractorrate\n    \n   END  AS Contractorrate,   \n   CASE  \n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\n      ELSE  rate\n \n   END  AS Rate \n FROM \n (SELECT \n  E.id, \n  E.salutation, \n  E.username, \n  E.firstname, \n  E.lastname,\n  E.employeetype,\n  E.isactive,\n  E.status,\n  TD.jobid,\n  monthname(TD.weekday) AS Month,\n  TD.job,\n  TD.jobcode,\n  DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, \n    \n  sum(hours) AS hours \nFROM timesheetdata  TD , employee   E    \nWHERE   TD.employeeid = E.id  \n    AND  TD.weekday    BETWEEN  ''2011-01-01'' \n                           AND  ''2011-12-31''\n    AND  TD.paycode in (''RT'',''OT'')\n    AND  TD.hours > 0\nGROUP BY \n  E.id, \n  E.salutation, \n  E.username, \n  E.firstname, \n  E.lastname,\n  E.employeetype,\n  E.isactive,\n  TD.weekday,\n  TD.jobid,\n  TD.job,\n  TD.jobcode,\n  E.status) AS TD \n  LEFT  OUTER JOIN rate AS R\n  ON (TD.id = R.employeeid  \n  AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\nGROUP BY\n   Month,\n   TD.id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   employeetype,\n   isactive,\n   status,\n   Contractorrate,\n     TD.jobid, \n   TD.job,\n   Rate\nORDER BY \n   Month,\n   Contract,\n   jobid,\n   employeetype DESC ', '', '2011-05-21 11:29:37', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(72, 'MonthlyQuickBooksFeed', 'MonthlyQuickBooksFeed', 'SELECT \n   TD.id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   employeetype,\n   isactive,\n   status,\n   WeekDay,\n   Month,\n   (SELECT max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber,\n   (SELECT  max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND PR.currentflag = ''Y'') AS Contract,   \n   TD.jobid, \n   TD.jobcode,\n   TD.job,\n   sum(hours) TotalHours, \n    CASE  \n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(contractorrate) FROM rate RT \n                                 WHERE  TD.weekday BETWEEN effectivedate AND expirydate \n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\n      ELSE contractorrate\n    \n   END  AS Contractorrate,   \n   CASE  \n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\n      ELSE  rate\n \n   END  AS Rate \n FROM \n (SELECT \n  E.id, \n  E.salutation, \n  E.username, \n  E.firstname, \n  E.lastname,\n  E.employeetype,\n  E.isactive,\n  E.status,\n  TD.jobid,\n  TD.weekday as WeekDay,\n  monthname(TD.weekday) AS Month,\n  TD.job,\n  TD.jobcode,\n  DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, \n    \n   hours  \nFROM timesheetdata  TD , employee   E    \nWHERE   TD.employeeid = E.id  \n    AND  TD.weekday    BETWEEN  ''2011-01-01'' \n                           AND  ''2011-01-31''\n    AND  TD.paycode in (''RT'',''OT'')\n    AND  TD.hours > 0\nGROUP BY \n  E.id, \n  E.salutation, \n  E.username, \n  E.firstname, \n  E.lastname,\n  E.employeetype,\n  E.isactive,\n \n  TD.jobid,\n  TD.job,\n  TD.jobcode,\n  E.status) AS TD \n  LEFT  OUTER JOIN rate AS R\n  ON (TD.id = R.employeeid  \n  AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\nGROUP BY\n   Month,\n   weekday,\n   TD.id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   employeetype,\n   isactive,\n   status,\n   Contractorrate,\n   TD.jobid, \n   TD.job,\n   Rate\nORDER BY \n   Month,\n   Contract,\n   jobid,\n   employeetype DESC \n ', '', '2011-05-25 20:24:04', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(73, 'MonthlyQuickBooksFeedByWeekday', 'MonthlyQuickBooksFeedByWeekday', '  SELECT \n   TD.id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   employeetype,\n   isactive,\n   status,\n   WeekDay,\n   Month,\n   \n   (SELECT max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber,\n   (SELECT  max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND PR.currentflag = ''Y'') AS Contract, \n    TD.jobid,  \n   TD.jobcode as jobname,\n   TD.job ,\n   hours, \n   CASE  \n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(contractorrate) FROM rate RT \n                                 WHERE  TD.weekday BETWEEN effectivedate AND expirydate \n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\n      ELSE contractorrate\n    \n   END  AS Contractorrate,   \n   CASE  \n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\n      ELSE  rate\n \n   END  AS Rate \n FROM \n (SELECT \n  E.id, \n  E.salutation, \n  E.username, \n  E.firstname, \n  E.lastname,\n  E.employeetype,\n  E.isactive,\n  E.status,\n  TD.jobid,\n \n  monthname(TD.weekday) AS Month,\n  TD.job,\n  TD.jobcode,\n  DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as WeekDay, \n    \n   hours  \nFROM timesheetdata  TD , employee   E    \nWHERE   TD.employeeid = E.id  \n    AND  TD.weekday    BETWEEN  ''2011-05-01''  AND  ''2011-05-31''\n    AND  TD.hours > 0) AS TD \n  LEFT  OUTER JOIN rate AS R\n  ON (TD.id = R.employeeid  \n  AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\n\nORDER BY \n   lastname,\n   Month,\n   weekday,\n   Contract,\n   jobid,\n   employeetype DESC \n ', '', '2011-06-01 21:01:40', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(74, 'RECON-ContactList', '', 'select firstname, lastname,companyname, emailaddress,employeetype, mobilenumber, officeline1 from employee where isactive=''Y''', '', '2011-06-01 20:58:16', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00');
INSERT INTO `customreport` (`id`, `title`, `description`, `querystring`, `category`, `datecreated`, `createdby`, `lastupdatedon`, `lastupdatedby`, `issendemail`, `isactive`, `expirytype`, `expirydate`, `postpone`, `date`) VALUES
(75, 'IDASH - LastMonthsBillingGrp', 'For invoicing RECON - Group by Contract.', 'select RPT.Month AS billedmonth, RPT.Contract AS billedcontract, sum(RPT.TotalHours) AS billedhours, sum(RPT.TotalHours*RPT.Rate) AS billedamount from \n(SELECT \n   TD.id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   employeetype,\n   isactive,\n   status,\n   Month,\n   (SELECT  max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber,\n   (SELECT  max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND PR.currentflag = ''Y'') AS Contract,   \n   TD.jobid, \n   TD.jobcode,\n   TD.job,\n   sum(hours) TotalHours, \n    CASE  \n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(contractorrate) FROM rate RT \n                                 WHERE  TD.weekday BETWEEN effectivedate AND expirydate \n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\n      ELSE contractorrate\n    \n   END  AS Contractorrate,   \n   CASE  \n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\n      ELSE  rate\n \n   END  AS Rate \n FROM \n (SELECT \n  E.id, \n  E.salutation, \n  E.username, \n  E.firstname, \n  E.lastname,\n  E.employeetype,\n  E.isactive,\n  E.status,\n  TD.jobid,\n  monthname(TD.weekday) AS Month,\n  TD.job,\n  TD.jobcode,\n  DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, \n    \n  sum(hours) AS hours \nFROM timesheetdata  TD , employee   E    \nWHERE   TD.employeeid = E.id  \n     \n    AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-01'')) \n                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))) \n    AND  TD.paycode in (''RT'',''OT'')\n    AND  TD.hours > 0\nGROUP BY \n  E.id, \n  E.salutation, \n  E.username, \n  E.firstname, \n  E.lastname,\n  E.employeetype,\n  E.isactive,\n  TD.weekday,\n  TD.jobid,\n  TD.job,\n  TD.jobcode,\n  E.status) AS TD \n  LEFT  OUTER JOIN rate AS R\n  ON (TD.id = R.employeeid  \n  AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\nGROUP BY\n   Month,\n   TD.id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   employeetype,\n   isactive,\n   status,\n   Contractorrate,\n     TD.jobid, \n   TD.job,\n   Rate\nORDER BY \n   Month,\n   Contract,\n   jobid,\n   employeetype DESC ) as RPT\ngroup by \nRPT.Month, RPT.Contract', '', '2011-06-14 09:19:47', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(76, 'IDASH - LastMonthsTotalHoliday', 'Total Hours (HOLIDAY - HT) in Timesheet data.', 'SELECT SUM(hours) AS totalhthrs FROM timesheetdata WHERE paycode = ''HT'' AND weekday BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-01'')) AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))', '', '2011-07-01 08:31:36', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(77, 'IDASH - LastMonthsTotalRealHrs', 'Total Hours (REAL - RT) in Timesheet data.', 'SELECT sum(hours) AS totalrthrs FROM timesheetdata WHERE paycode = ''RT'' AND hours > 0 AND weekday BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-01'')) AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))\n', '', '2011-07-01 08:24:05', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(78, 'IDASH - LastMonthsTotalSickHrs', 'Total Hours (SICK - ST) in Timesheet data.', 'SELECT SUM(hours) AS totalsthrs FROM timesheetdata WHERE paycode = ''ST'' AND weekday BETWEEN ''2011-05-01'' AND ''2011-05-30''', '', '2011-06-13 18:04:07', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(79, 'IDASH - LastMonthBillingByCont', 'To search the invoicing data and return details for review', 'select RPT.*, RPT.TotalHours*RPT.Rate as BillingAmt from (SELECT TD.id, salutation, username, firstname, lastname, employeetype, isactive, status, Month, (SELECT max(taskcode) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS TaskCode, (SELECT max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber, (SELECT max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND PR.currentflag = ''Y'') AS Contract, TD.jobid, TD.jobcode, TD.job, sum(hours) TotalHours, CASE WHEN ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(contractorrate) FROM rate RT WHERE TD.weekday BETWEEN effectivedate AND expirydate AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0)) ELSE contractorrate END AS Contractorrate, CASE WHEN ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT WHERE TD.weekday BETWEEN effectivedate AND expirydate AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0)) ELSE rate END AS Rate FROM (SELECT E.id, E.salutation, E.username, E.firstname, E.lastname, E.employeetype, E.isactive, E.status, TD.jobid, monthname(TD.weekday) AS Month, TD.job, TD.jobcode, DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, sum(hours) AS hours FROM timesheetdata TD , employee E WHERE TD.employeeid = E.id AND TD.weekday BETWEEN (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-01'')) AND (SELECT LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))) AND TD.paycode in (''RT'',''OT'') AND TD.hours > 0 GROUP BY E.id, E.salutation, E.username, E.firstname, E.lastname, E.employeetype, E.isactive, TD.weekday, TD.jobid, TD.job, TD.jobcode, E.status) AS TD LEFT OUTER JOIN rate AS R ON (TD.id = R.employeeid AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid) GROUP BY Month, TD.id, salutation, username, firstname, lastname, employeetype, isactive, status, Contractorrate, TD.jobid, TD.job, Rate ORDER BY Month, Contract, jobid, employeetype DESC ) as RPT _CONTRACTCOND_', '', '2011-06-14 12:10:45', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(80, 'IDASH - LastMonthsHoliday ', 'Holiday hours in timesheet data', 'SELECT * FROM timesheetdata WHERE paycode = ''HT'' AND hours > 0 AND weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-01'')) AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))', '', '2011-07-01 08:33:21', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(81, 'IDASH - LastMonthsSick', 'Sick hours in timesheet data', 'SELECT * FROM timesheetdata WHERE paycode = ''ST'' AND hours > 0 AND weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-01'')) AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))', '', '2011-07-01 08:32:05', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(82, 'IDASH - LastMonthsReal', 'Real hours in timesheet data', 'SELECT * FROM timesheetdata WHERE paycode = ''RT'' AND hours > 0 AND weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-01'')) AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))', '', '2011-07-01 08:33:01', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(83, 'IDASH - Labor Import Query', 'Labor import query for the summary of the results', 'SELECT RPT.*, RPT.currenthours*RPT.rate as billingamt, RPT.Contract AS contract from (\n\nSELECT \nTD.id, \nsalutation, \nusername, \nfirstname, \nlastname, \ntsgbadgenumber,\nemployeetype, \nisactive, \nstatus, \nMonth, \nperiodending, \nthekey, \n(SELECT max(taskcode) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS taskcode, \n\n(SELECT max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS ponumber, \n\n(SELECT max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND PR.currentflag = ''Y'') AS Contract, \n\nTD.jobid, TD.jobcode, TD.job, sum(hours) AS currenthours, \n\nCASE WHEN ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(contractorrate) FROM rate RT WHERE TD.weekday BETWEEN effectivedate AND expirydate AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0)) ELSE contractorrate END AS Contractorrate, \n\nCASE WHEN ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT WHERE TD.weekday BETWEEN effectivedate AND expirydate AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0)) ELSE rate END AS rate \n\nFROM (\n SELECT E.id, E.salutation, E.username, E.firstname, E.lastname, E.employeetype, E.isactive, E.status, E.tsgbadgenumber, TD.jobid, monthname(TD.weekday) AS Month, TD.job, TD.jobcode, DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, sum(hours) AS hours, T.weekendingdate AS periodending, CONCAT(E.firstname, '' '', E.lastname, ''-'', TD.jobcode) AS thekey \n  FROM employee E , timesheetdata TD LEFT OUTER JOIN timesheet T ON (T.id=TD.timesheetid)\n WHERE TD.employeeid = E.id AND TD.weekday BETWEEN (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-01'')) AND (SELECT LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))) AND TD.paycode in (''RT'',''OT'') AND TD.hours > 0 \n  GROUP BY E.id, E.salutation, E.username, E.firstname, E.lastname, E.employeetype, E.isactive, TD.weekday, TD.jobid, TD.job, TD.jobcode, E.status) AS TD \n\nLEFT OUTER JOIN rate AS R ON (TD.id = R.employeeid AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid) \n\nGROUP BY Month, TD.id, salutation, username, firstname, lastname, employeetype, isactive, status, Contractorrate, TD.jobid, TD.job, Rate \n\nORDER BY Month, Contract, jobid, employeetype DESC\n\n) as RPT WHERE RPT.ponumber IS NOT NULL AND RPT.ponumber != ''''', '', '2011-07-11 18:08:31', 105, NULL, 105, 0, 0, '1|onetime', '2011-07-11 23:59:00', 'N', '0000-00-00'),
(84, 'IDASH - LastMonthBillingAll', 'Gets last months invoicing data', 'SELECT RPT.*, RPT.currenthours*RPT.rate as billingamt, RPT.Contract AS contract from \n\n(SELECT TD.id, salutation, username, firstname, lastname, employeetype, isactive, status, Month, (SELECT max(taskcode) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS taskcode, (SELECT max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS ponumber, (SELECT max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND PR.currentflag = ''Y'') AS Contract, TD.jobid, TD.jobcode, TD.job, sum(hours) AS currenthours, CASE WHEN ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(contractorrate) FROM rate RT WHERE TD.weekday BETWEEN effectivedate AND expirydate AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0)) ELSE contractorrate END AS Contractorrate, CASE WHEN ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT WHERE TD.weekday BETWEEN effectivedate AND expirydate AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0)) ELSE rate END AS rate FROM (SELECT E.id, E.salutation, E.username, E.firstname, E.lastname, E.employeetype, E.isactive, E.status, TD.jobid, monthname(TD.weekday) AS Month, TD.job, TD.jobcode, DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, sum(hours) AS hours FROM timesheetdata TD , employee E WHERE TD.employeeid = E.id AND TD.weekday BETWEEN (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-01'')) AND (SELECT LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))) AND TD.paycode in (''RT'',''OT'') AND TD.hours > 0 GROUP BY E.id, E.salutation, E.username, E.firstname, E.lastname, E.employeetype, E.isactive, TD.weekday, TD.jobid, TD.job, TD.jobcode, E.status) AS TD LEFT OUTER JOIN rate AS R ON (TD.id = R.employeeid AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid) GROUP BY Month, TD.id, salutation, username, firstname, lastname, employeetype, isactive, status, Contractorrate, TD.jobid, TD.job, Rate ORDER BY Month, Contract, jobid, employeetype DESC) \n\nas RPT', '', '2011-06-28 14:54:49', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(85, 'IDASH-AgingReportByJN', 'Showing a break down of the amounts billed from Labor, Travel and ODC by Job Number and PO Number', '\n(SELECT C.id, C.invoicenumber AS "Invoice Number", B.id AS employeeid, B.PONumber AS "PO Number", B.jobcode AS "Job Number", B.Month AS "Invoice Month", DATE_FORMAT(C.invoicedate, ''%m/%d/%Y'') AS "Invoice Date", TotalHours AS "Total Hours", sum(TotalHours*rate) AS "Total Amount", A.amountpaid, A.status AS "Payment Status", A.comments AS "Update Message", ''LABOR'' AS InvoiceType, B.Contract, C.invoiceyear FROM (SELECT (SELECT max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber, (SELECT max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND PR.currentflag = ''Y'') AS Contract, TD.id, salutation, username, firstname, lastname, Month, Year, TD.jobid, TD.jobcode, SUM(hours) AS TotalHours, CASE WHEN ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT WHERE TD.weekday BETWEEN effectivedate AND expirydate AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0)) ELSE rate END AS Rate FROM (SELECT E.id, E.salutation, E.username, E.firstname, E.lastname, E.employeetype, E.isactive, E.status, TD.jobid, monthname(TD.weekday) AS Month, year(TD.weekday) AS Year, TD.job, TD.jobcode, DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, SUM(hours) AS hours FROM timesheetdata TD , employee E WHERE TD.employeeid = E.id AND E.isactive = "Y" AND TD.weekday BETWEEN (SELECT DATE_FORMAT(NOW(), ''20110801'')) AND (SELECT LAST_DAY(DATE_FORMAT(NOW(), ''20110801''))) AND TD.paycode in (''RT'',''OT'') AND TD.hours > 0 GROUP BY E.id, E.salutation, E.username, E.firstname, E.lastname, E.employeetype, E.isactive, TD.weekday, TD.jobid, TD.job, TD.jobcode, E.status) AS TD LEFT OUTER JOIN rate AS R ON (TD.id = R.employeeid AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid) GROUP BY Month, salutation, username, firstname, lastname, TD.jobid, Rate ORDER BY Month, Year, Contract, jobid, employeetype DESC) AS B LEFT JOIN c_invoice C ON (monthname(C.startdate) = B.Month AND year(C.startdate) = B.Year AND C.ponumber = B.PONumber) LEFT JOIN agingstatus A ON (B.Month = A.month AND B.Year = A.invyear AND B.jobcode = A.jobcode AND B.id = A.employeeid AND A.invoicetype = ''labor'') WHERE ( C.invoicenumber LIKE ''%%'' OR C.invoicedate LIKE ''%%'' OR B.month LIKE ''%%'' OR A.status LIKE ''%%'' OR A.comments LIKE ''%%'') GROUP BY B.Month, B.Year, B.Contract, B.PONumber, B.jobcode, B.id)UNION\n\n\n(SELECT '''' AS id, '''' AS "Invoice Number", T.id AS employeeid, P.ponumber AS ''PO Number'', T.jobnumber AS ''Job Number'', monthname(T.startdate) AS ''Invoice Month'', '''' AS "Invoice Date", '''' AS "Total Hours", T.currentamount AS ''Total Amount'', A.amountpaid, A.status AS ''Payment Status'', A.comments AS ''Update Message'', ''TRAVEL EXPENSES'' AS InvoiceType, P.projectcategory AS Contract, year(T.startdate) AS invoiceyear\nfrom (SELECT e.id, e.firstname, e.lastname,td.purpose, td.jobnumber, td.startdate, td.currentamount, td.status \n   FROM traveldetails AS td INNER JOIN employee AS e ON e.id = td.employeeid \n   WHERE (td.startdate BETWEEN (SELECT DATE_FORMAT(NOW(), ''20110801'')) AND (SELECT LAST_DAY(DATE_FORMAT(NOW(), ''20110830'')))) \n    ) AS T LEFT JOIN project P ON (T.jobnumber = P.jobcode AND P.projectcategory != '''')    LEFT JOIN \n    agingstatus A ON (T.jobnumber = A.jobcode AND monthname(T.startdate) = A.month AND year(T.startdate) = A.invyear AND T.id = A.employeeid AND A.invoicetype = ''travel'') ORDER BY startdate DESC)\n\n\n', '', '2011-12-21 21:40:13', 80, NULL, 80, 0, 0, '1|onetime', '2011-12-21 23:59:00', 'N', '0000-00-00'),
(86, 'IDASH-RECON-LM Overtime', 'Run after the 1st - Employees with OT in the invoicing period', 'SELECT \r\n   id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   isactive,\r\n   status,\r\n   Month,\r\n   PayrollCategory,\r\n   HoursWorked,\r\n   HoursBilled,\r\n   HoursInPeriod,\r\n   HolidaysHoursInPeriod,\r\n   COALESCE(PaidHolidaysToDate,0) AS PaidHolidaysToDate,\r\n   COALESCE(PaidSickDaysToDate,0) AS PaidSickDaysToDate,\r\n   COALESCE(PaidVacationDaysToDate,0) AS PaidVacationDaysToDate,\r\n   COALESCE(PaidPersonalDaysToDate,0) AS PaidPersonalDaysToDate\r\n FROM \r\n (SELECT \r\n  E.id, \r\n  E.salutation, \r\n  E.username, \r\n  E.firstname, \r\n  E.lastname,\r\n  E.employeetype,\r\n  E.isactive,\r\n  E.status,\r\n  monthname(TD.weekday) AS Month,\r\n  DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, \r\n       (SELECT  max(status) FROM  timesheet T WHERE  \r\n    E.id = T.employeeid  and  T.weekendingdate between (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,\\''%Y-%m-01\\''))AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) AS TimesheetStatus,\r\n  sum(hours) HoursWorked,\r\n\r\n  CASE WHEN \r\n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \r\n                       WHERE  DAYNAME(weekday) NOT IN (\\''Saturday\\'',\\''Sunday\\'')\r\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,\\''%Y-%m-01\\'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) = 0 \r\n                       AND employeetype IN (\\''Full Time\\'' ) \r\n       THEN \\''REGULAR\\''\r\n       WHEN \r\n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T  \r\n                       WHERE  DAYNAME(weekday) NOT IN (\\''Saturday\\'',\\''Sunday\\'')\r\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,\\''%Y-%m-01\\'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) < 0 \r\n       THEN \\''HOURLY\\''\r\n       WHEN \r\n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \r\n                       WHERE  DAYNAME(weekday) NOT IN (\\''Saturday\\'',\\''Sunday\\'')\r\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,\\''%Y-%m-01\\'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) > 0\r\n                       AND employeetype IN (\\''Full Time\\'' ) \r\n             \r\n       THEN \\''REGULAR WITH OVERTIME\\''\r\n       ELSE \\''HOURLY\\'' \r\n  END  PayrollCategory,\r\n  \r\n   \r\n   sum(hours) - COALESCE((SELECT sum(hours) FROM timesheetdata T \r\n                     WHERE T.employeeid = E.id\r\n                       AND  T.job  IN (\\''Vacation\\'',\\''Sick\\'',\\''Personal\\'',\\''Paid Holiday\\'')          \r\n                       AND  T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,\\''%Y-%m-01\\'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))),0) HoursBilled,\r\n  (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \r\n   WHERE  DAYNAME(weekday) NOT IN (\\''Saturday\\'',\\''Sunday\\'')\r\n   AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,\\''%Y-%m-01\\'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) HoursInPeriod,\r\n  (SELECT count(1)*8 FROM publicholidays  PH\r\n   WHERE  PH.publicholidaydate BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,\\''%Y-%m-01\\'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) as  HolidaysHoursInPeriod,\r\n \r\n  (SELECT sum(hours)/8 FROM timesheetdata T \r\n   WHERE employeeid = E.id \r\n   and job IN (\\''Paid Holiday\\'') \r\n   AND Year(T.weekday) = \\''2010\\'') AS PaidHolidaysToDate,\r\n  (SELECT sum(hours)/8 FROM timesheetdata T \r\n   WHERE employeeid =   E.id \r\n   and job IN (\\''Sick\\'') \r\n   AND Year(T.weekday) = \\''2010\\'') AS PaidSickDaysToDate,\r\n  (SELECT sum(hours)/8 FROM timesheetdata T \r\n   WHERE employeeid = E.id \r\n   and job IN (\\''Vacation\\'') \r\n   AND Year(T.weekday) = \\''2010\\'') AS PaidVacationDaysToDate,\r\n  (SELECT sum(hours)/8 FROM timesheetdata T \r\n   WHERE employeeid = E.id \r\n   and job IN (\\''Personal\\'') \r\n   AND Year(T.weekday) = \\''2010\\'') AS PaidPersonalDaysToDate \r\nFROM timesheetdata  TD , employee   E    \r\nWHERE   TD.employeeid = E.id  \r\n    AND   E.isactive = \\"Y\\"\r\n    AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,\\''%Y-%m-01\\'')) \r\n                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))) \r\n    AND  TD.hours > 0\r\nGROUP BY \r\n  E.id, \r\n  E.salutation, \r\n  E.username, \r\n  E.firstname, \r\n  E.lastname,\r\n  E.employeetype,\r\n  E.isactive,\r\n  E.status ) AS TD \r\nWHERE HoursWorked > HoursInPeriod\r\nGROUP BY\r\n   id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   isactive,\r\n   status,\r\n   Month\r\nORDER BY \r\n   Month,\r\n   employeetype,\r\n   lastname DESC \r\n ', '', '2010-02-23 13:17:38', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(87, 'IDASH-RECON-LM Missing TS', 'Run after the 1st - Last Month''s Missing TimeSheets ', 'SELECT Base.* FROM (SELECT * from (SELECT E.id, E.salutation, E.username, E.firstname, E.lastname,CONCAT(E.firstname, '' '',E. lastname) AS names,E.emailaddress,E.personalemailaddress, E.employeetype, E.isactive FROM  employee as  E  where E.status = ''Active'' AND username NOT IN (''fryawe'',''akirunda'',''administrator'',''TSGADMINDL'')) AS E,(SELECT  DISTINCT weekendingdate  FROM timesheet AS TD  WHERE  TD.weekendingdate  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-01''))  AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) AS W  ) AS Base LEFT OUTER JOIN (SELECT  employeeid,weekendingdate FROM timesheet  TD  WHERE  TD.weekendingdate  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-01'')) AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) AS Actual ON (Actual.employeeid = Base.id AND Actual.weekendingdate = Base.weekendingdate) WHERE Actual.weekendingdate IS NULL ORDER BY lastname,Actual.weekendingdate ', '', '2012-02-20 11:14:04', 80, NULL, 80, 0, 0, '1|onetime', '2012-02-20 23:59:00', 'N', '0000-00-00'),
(88, 'IDASH-RECON-PartialEOMHours', 'Check if all have submitted hours for a partial week', 'call checkTime(\\''20100329\\'',\\''20100331\\'')', '', '2010-03-31 16:20:17', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(89, 'IDASH-LM NotApproved', 'Lists the employees who have timesheets not approved for last month.', 'SELECT e.id,CONCAT(e.firstname, " ",e. lastname) AS names,e.tsgbadgenumber,tb.task,tb.taskcode, SUM(hours) AS currenthours,jobcode, e.employeetype, e.emailaddress, e.personalemailaddress, officeline1,t.`status`, DATE_FORMAT(t.weekendingdate, ''%d-%b-%y'') AS periodending, DATE_FORMAT(''_ENDDATE_'',''%d-%b-%y'') AS monthenddate, DATE_FORMAT(''_STARTDATE_'',''%d-%b-%y'') AS monthstartdate, t.id as tsid FROM employee AS e LEFT JOIN timesheet AS t ON t.employeeid = e.id LEFT JOIN v_timesheetdata_without_benefits_new tb ON t.id=tb.timesheetid WHERE laborcategory != '''' AND e.isadmin= ''N'' AND t.payrollprocessed = ''N'' AND (t.`status` = ''Saved'' OR t.`status` = ''Submitted'' OR t.`status` = ''Rejected'') AND (to_days(t.weekendingdate) BETWEEN to_days(''_STARTDATE_'') AND to_days(''_ENDDATE_'')) GROUP BY e.id, jobcode ORDER BY t.status,e.id ASC ', '', '2011-07-05 15:29:38', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(90, 'MAINT-Switch Timesheet Approve', 'Switch Approvers', 'update `approver` set ApproverICode =148 ,ApproverMails =''semu@techsoftgroup.com'' where ApproverICode in (18,97,99);\nselect * from approver', '', '2011-10-28 15:35:14', 80, NULL, 80, 0, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(91, 'Update 999999 Project', 'Update temp PO and JN. Get the id from project first by select * from project where id like "99999%'' and pin it down', 'update project set projectid=\n''B1M206237'', ponumber=''7500093743'',jobcode=''B1M206237'',title=''Program Support'',taskcode=''014'', notes="Please replace the 99999999 PO we gave her earlier this week with the new PO:\nContract: CIMS\nPO 7500093743\nJN: B1M206237\nProject Name: Program Support\nTask 14\nPOP: 7/1/2011" \nwhere id=495;\nselect * from project where  id=495;\nupdate timesheetdata set job=''Program Support'',jobcode=''B1M206237'',taskcode=''014'' where jobid=495 and employeeid=''xxxxx'';\nselect * from timesheetdata where jobid=495;\nupdate employeerelationship set  jobnumber=''B1M206237'',  ponumber=''7500093743'',taskcode=''014'', comment='''' where jobid=495 and employeeid=''xxxxx'';;\nselect * from employeerelationship where jobid=495;', '', '2011-07-15 20:40:53', 80, NULL, 80, 0, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(92, 'MAINT-Compare Relationships an', '', 'select * from employeerelationship r, project p where r.jobid = p.id\nand p.id = 495', '', '2011-07-28 15:33:27', 80, NULL, 80, 0, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(101, 'IDASH-Labor Import Report INTL', 'Used to generate the labor import data for the system', 'SELECT \nT.tsgbadgenumber, T.laborcategory, T.periodending, T.thekey, T.firstname, T.lastname, T.blccode, T.currenthours, T.jobcode, T.rate, T.monthenddate, T.monthstartdate, T.contract, T.ponumber, T.ponumber AS task, T.taskcode, T.poline \n\nFROM\n(\n\nSELECT ET.*,\n(SELECT MAX(rate) FROM rate WHERE employeeid=ET.employeeid AND DATE(ET.weekday) BETWEEN effectivedate AND expirydate) AS \n\nrate,\nSUM(ET.hours) AS currenthours,\n(SELECT MAX(laborpoline) FROM project WHERE jobcode=ET.jobcode AND (DATE(expirydate) >= DATE(ET.relationshipenddate) || \n\nexpirydate IS NULL)) AS poline \nFROM\n(\n SELECT \n ER.contract, \n ER.contract AS laborcategory, \n  ER.ponumber, \n ER.jobid, \n  ER.employeeid,\n  E.firstname,\n  E.lastname,\n E.tsgbadgenumber,\n E.blccode,\n  CONCAT(E.firstname,'' '',E.lastname,''-'',td.jobcode) AS thekey,\n  DATE_FORMAT(''_MONTHSTARTDATE_'',''%d-%b-%y'') AS monthstartdate,\n DATE_FORMAT(''_MONTHENDDATE_'',''%d-%b-%y'') AS monthenddate,\n ER.taskcode, \n ER.relationshipstartdate,\n ER.relationshipenddate,\n td.jobcode, \n  td.weekday, \n  td.account, \n  td.hours, \n  ts.weekendingdate,\n  DATE_FORMAT(ts.weekendingdate,''%d-%b-%y'') AS periodending,\n  DATE_FORMAT(ts.weekendingdate,''%M'') AS month,\n DATE_FORMAT(ts.weekendingdate,''%Y'') AS year\n \n  FROM  timesheet ts, timesheetdata td\n  LEFT JOIN employeerelationship ER ON (td.jobcode = ER.jobnumber AND td.employeeid=ER.employeeid AND td.taskcode=ER.taskcode)\n  LEFT JOIN employee E ON (E.id=ER.employeeid)  \n  \n  WHERE \n  ts.id=td.timesheetid\n  AND ts.status = ''Approved''\n  AND td.weekday BETWEEN  DATE(''_MONTHSTARTDATE_'') and DATE(''_MONTHENDDATE_'')\n AND td.weekday BETWEEN  ER.relationshipstartdate AND ER.relationshipenddate \n  AND ER.jobid IN (select distinct jobid from timesheetdata where employeeid=ER.employeeid and weekday between DATE\n\n(''_MONTHSTARTDATE_'') and DATE(''_MONTHENDDATE_''))\n AND td.hours > 0\n) ET \n\nGROUP BY ET.jobcode, ET.account, ET.employeeid\n\n) T \n\nWHERE _PROJECTCATEGORYCONDITION__PERIODCONDITIONS_ T.rate > 0\n\nORDER BY T.employeeid ASC', '', '2011-12-21 13:37:23', 80, NULL, 80, 0, 0, '1|onetime', '2011-12-21 23:59:00', 'N', '0000-00-00'),
(102, 'MAINT-Update POs', 'MAINT-Update POs', 'select * from project where id=451;\nselect * from employeerelationship where\nponumber='''';\n\nupdate  employeerelationship\nset r.ponumber=p.ponumber\nfrom employeerelationship r, project p\n where p.jobid=r.id and r.ponumber=''''', '', '2011-07-28 15:28:58', 80, NULL, 80, 0, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(103, 'IDASH-Labor Import Frozen Data', 'Gets the labor import frozen data', 'SELECT * FROM invoicing_historical_data WHERE _PROJECTCATEGORYCONDITION_ monthstartdate=''_MONTHSTARTDATE_'' AND monthenddate=''_MONTHENDDATE_'' ', '', '2011-08-09 09:24:44', 105, NULL, 105, 0, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(104, 'AUDIT-Contractors', '', 'select distinct * from\n(select username, firstname,lastname, companyid from employee where companyid > 0) as b,\n\n(select username, firstname,lastname, companyid from employee where companyid > 0 and companyid not in (1,13) and status = ''Active'') as c\nwhere c.companyid=b.companyid\norder by c.companyid\n\n', '', '2013-03-12 14:13:26', 80, NULL, 80, 1, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(105, 'IDASH-LM Saved', 'Lists the employees who have saved the timesheets for last month.', 'SELECT    e.id,CONCAT(e.firstname, " ",e. lastname) AS names,e.tsgbadgenumber,tb.task,tb.taskcode,\n          SUM(hours) AS currenthours,jobcode, e.employeetype, e.emailaddress, e.personalemailaddress, \n     officeline1,t.`status`, \n      DATE_FORMAT(t.weekendingdate, ''%d-%b-%y'') AS periodending, \n     DATE_FORMAT(''_ENDDATE_'',''%d-%b-%y'') AS monthenddate,\n      DATE_FORMAT(''_STARTDATE_'',''%d-%b-%y'') AS monthstartdate, \n     t.id as tsid FROM employee AS e \n      \n      LEFT JOIN \n      \n      timesheet AS t ON t.employeeid = e.id \n      \n      LEFT JOIN v_timesheetdata_without_benefits_new tb \n      \n      ON t.id=tb.timesheetid \n     \n      WHERE laborcategory != '''' AND e.isadmin= ''N'' AND t.payrollprocessed = ''N'' AND (t.`status` = ''Saved'') AND ((t.weekendingdate) BETWEEN (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-01'')) AND (SELECT LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) GROUP BY e.id, jobcode ORDER BY t.status,e.id ASC ', '', '2012-05-17 15:09:33', 1, NULL, 1, 0, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(106, 'PAYROLL - Benefits Report YTD', 'PAYROLL-Benefits Report YTD', 'select \n*,\n(maximumvacationdays-PaidVacationDaysToDate) as BalanceVaction,\n(maximumsickdays-PaidSickDaysToDate)  as BalanceSickDays,\n(maximumpersonaldays-PaidPersonalDaysToDate)  as BalancePersonalDays\nfrom\n(SELECT \n  E.id, \n  E.salutation, \n  E.username, \n  E.firstname, \n  E.lastname,\n  E.employeetype,\n  E.isactive,\n  E.status,\n  E.hiredate,\n  E.employeestartdate,\nE.maximumvacationdays,\nE.maximumsickdays,\nE.maximumpersonaldays, \n\n\n  (SELECT count(1)*8 FROM publicholidays  PH\n   WHERE  PH.publicholidaydate BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 0 month) ,''%Y-01-01'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL 0 month)))) as  HolidaysHoursInPeriod,\n \n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid = E.id \n   and Paycode IN (''HT'') \n   AND  T.weekday    BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 0 month) ,''%Y-01-01'')) AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL 0 month)))) AS PaidHolidaysToDate,\n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid =   E.id \n   and Paycode IN (''ST'') \n   AND  T.weekday    BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 0 month) ,''%Y-01-01'')) AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL 0 month)))) AS PaidSickDaysToDate,\n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid = E.id \n   and Paycode IN (''VT'') \n   AND  T.weekday    BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 0 month) ,''%Y-01-01'')) AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL 0 month)))) AS PaidVacationDaysToDate,\n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid = E.id \n   and Paycode IN (''PT'') \n   AND  T.weekday    BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 0 month) ,''%Y-01-01'')) AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL 0 month)))) AS PaidPersonalDaysToDate \nFROM timesheetdata  TD , employee   E    \nWHERE   TD.employeeid = E.id  \n    AND   E.isactive = "Y"\n    AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 0 month) ,''%Y-01-01''))      AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL 0 month))) \n    AND  TD.hours > 0\nAND  TD.Paycode in (''PT'',''VT'',''ST'',''HT'')\nGROUP BY \n  E.id, \n  E.salutation, \n  E.username, \n  E.firstname, \n  E.lastname,\n  E.employeetype,\n  E.isactive,\n  E.status\norder by\n  employeetype) as benefits', '', '2011-11-10 16:30:15', 80, NULL, 80, 1, 0, '1|onetime', '2011-11-10 23:59:00', 'N', '0000-00-00'),
(107, 'Projects and Tasks', 'Projects and Tasks', 'select p.jobcode, p.title, p.taskcode,(select description from taskcodes t where t.taskcode = p.taskcode) taskname \nfrom project p\nwhere \n     p.projectid=''SASCONF001''\nand  now() between p.effectivedate and p.expirydate\n ', '', '2011-12-15 16:57:33', 80, NULL, 80, 0, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(108, 'TEMPLATE-Invoices Aging Labor', 'Invoices Aging Query in the application model PHP', 'SELECT C.id, C.invoicenumber AS ''Invoice Number'', B.employeeid AS employeeid, B.ponumber AS ''PO Number'', B.jobcode AS ''Job Number'', B.month AS ''Invoice Month'',  DATE_FORMAT(C.invoicedate, ''%m/%d/%Y'') AS ''Invoice Date'', currenthours AS ''Total Hours'', (currenthours*rate) AS ''Total Amount'',  A.amountpaid, A.status AS ''Payment Status'',  A.uploaded AS ''uploaded'', A.comments AS ''Update Message'', ''LABOR'' AS InvoiceType, B.Contract, C.invoiceyear\nfrom\n(SELECT \n   employeeid AS employeeid, ponumber ,\n   jobcode  ,month  ,\n   year,\n   ''''  AS "Invoice Date",\n      Contract, (SELECT MAX(rate) FROM rate WHERE employeeid=ET.employeeid AND DATE(ET.weekday) BETWEEN effectivedate AND expirydate) AS \n\nrate,\nSUM(ET.hours) AS currenthours \nFROM\n(\n SELECT \n ER.contract, \n ER.contract AS laborcategory, \n  ER.ponumber, \n ER.jobid, \n  ER.employeeid,\n  E.firstname,\n  E.lastname,\n E.tsgbadgenumber,\n E.blccode,\n  ER.taskcode, \n ER.relationshipstartdate,\n ER.relationshipenddate,\n td.jobcode, \n  td.weekday, \n  td.account, \n  td.hours, \n  ts.weekendingdate,\n  DATE_FORMAT(ts.weekendingdate,''%d-%b-%y'') AS periodending,\n  DATE_FORMAT(ts.weekendingdate,''%M'') AS month,\n DATE_FORMAT(ts.weekendingdate,''%Y'') AS year\n FROM  timesheet ts, timesheetdata td\n  LEFT JOIN employeerelationship ER ON (td.jobcode = ER.jobnumber AND td.employeeid=ER.employeeid AND td.taskcode=ER.taskcode)\n  LEFT JOIN employee E ON (E.id=ER.employeeid)  \n  \n  WHERE \n  ts.id=td.timesheetid\n  AND ts.status = ''Approved''\n  AND td.weekday BETWEEN   (SELECT DATE_FORMAT(NOW(), ''20110801'')) and  (SELECT LAST_DAY(DATE_FORMAT(NOW(), ''20110801'')))\n AND td.weekday BETWEEN  ER.relationshipstartdate AND ER.relationshipenddate \n  AND ER.jobid IN (select distinct jobid from timesheetdata where employeeid=ER.employeeid and weekday between (SELECT DATE_FORMAT(NOW(), ''20110801'')) and  (SELECT LAST_DAY(DATE_FORMAT(NOW(), ''20110801''))))\n  AND td.hours > 0\n) ET \nGROUP BY ET.jobcode, ET.account, ET.employeeid) as B\nLEFT OUTER JOIN c_invoice C ON (monthname(C.startdate) = B.month AND year(C.startdate) = B.year AND C.ponumber = B.ponumber)\nLEFT OUTER JOIN agingstatus A ON (B.month = A.month AND B.Year = A.invyear AND B.jobcode = A.jobcode AND B.employeeid  = A.employeeid AND A.invoicetype = ''labor'') where\nC.invoicenumber LIKE ''%%'' OR C.invoicedate LIKE ''%%'' OR B.Month LIKE ''%%'' OR A.status LIKE ''%%'' OR A.comments LIKE ''%%'' OR B.PONumber LIKE ''%%'' OR B.jobcode LIKE ''%%''', '', '2011-12-22 17:29:41', 80, NULL, 80, 0, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(109, 'MAINT-Tables', 'MAINT - Tables', 'SHOW TABLES', '', '2012-01-04 19:31:36', 80, NULL, 80, 0, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(110, 'MAINT-HolidayAndPayroll', '', '--INSERT INTO `publicholidays` (`publicholidaydate`, `description`, `comments`, `createdby`, `datecreated`) VALUES (''2012-01-02'', "New Year''s Day", NULL, 1, ''2012-01-05 10:22:15''), (''2012-01-16'', ''Birthday of Martin Luther King, Jr.'', NULL, 1, ''2012-01-04 10:22:15''), (''2012-02-20'', "Washington''s Birthday", NULL, 1, ''2012-01-04 10:22:15''), (''2012-05-28'', ''Memorial Day'', NULL, 1, ''2012-01-04 10:22:15''), (''2012-07-04'', ''Independence Day'', NULL, 1, ''2012-01-04 10:22:15''), (''2012-09-03'', ''Labor Day'', NULL, 1, ''2012-01-04 10:22:15''), (''2012-10-08'', ''Columbus Day'', NULL, 1, ''2012-01-04 10:22:15''), (''2012-11-12'', ''Veterans Day'', NULL, 1, ''2012-01-04 10:22:15''), (''2012-11-22'', ''Thanksgiving Day'', NULL, 1, ''2012-01-04 10:22:15''), (''2012-12-25'', ''Christmas Day'', NULL, 1, ''2012-01-04 10:22:15'');\n\n\nINSERT INTO `payrolldate` (`month`, `payperiod`, `checkdate`, `createdby`, `datecreated`, `lastupdatedby`, `lastupdatedon`, `year`, `payrolldate`) VALUES\n\n(''January'', ''1'', ''2012-01-11'', 105, ''2012-01-04 00:00:00'', 105, ''2012-01-04 00:00:00'', 2012, ''2012-01-06''), (''January'', ''2'', ''2012-01-25'', 105, ''2012-01-04 00:00:00'', 105, ''2012-01-04 00:00:00'', 2012, ''2012-01-21''), (''February'', ''1'', ''2012-02-09'', 105, ''2012-01-04 00:00:00'', 105, ''2012-01-04 00:00:00'', 2012, ''2012-02-04''), (''February'', ''2'', ''2012-02-27'', 105, ''2012-01-04 00:00:00'', 105, ''2012-01-04 00:00:00'', 2012, ''2012-02-22''), (''March'', ''1'', ''2012-03-09'', 105, ''2012-01-04 00:00:00'', 105, ''2012-01-04 00:00:00'', 2012, ''2012-03-04''), (''March'', ''2'', ''2012-03-26'', 105, ''2012-01-04 00:00:00'', 105, ''2012-01-04 00:00:00'', 2012, ''2012-03-21''), (''April'', ''1'', ''2012-04-10'', 105, ''2012-01-04 00:00:00'', 105, ''2012-01-04 00:00:00'', 2012, ''2012-04-06''), (''April'', ''2'', ''2012-04-24'', 105, ''2012-01-04 00:00:00'', 105, ''2012-01-04 00:00:00'', 2012, ''2012-04-20''), (''May'', ''1'', ''2012-05-09'', 105, ''2012-01-04 00:00:00'', 105, ''2012-01-04 00:00:00'', 2012, ''2012-05-05''), (''May'', ''2'', ''2012-05-24'', 105, ''2012-01-04 00:00:00'', 105, ''2012-01-04 00:00:00'', 2012, ''2012-05-19''), (''June'', ''1'', ''2012-06-11'', 105, ''2012-01-04 00:00:00'', 105, ''2012-01-04 00:00:00'', 2012, ''2012-06-06''), (''June'', ''2'', ''2012-06-26'', 105, ''2012-01-04 00:00:00'', 105, ''2012-01-04 00:00:00'', 2012, ''2012-06-21''), (''July'', ''1'', ''2012-07-11'', 105, ''2012-01-04 00:00:00'', 105, ''2012-01-04 00:00:00'', 2012, ''2012-07-07''), (''July'', ''2'', ''2012-07-24'', 105, ''2012-01-04 00:00:00'', 105, ''2012-01-04 00:00:00'', 2012, ''2012-07-21''), (''August'', ''1'', ''2012-08-09'', 105, ''2012-01-04 00:00:00'', 105, ''2012-01-04 00:00:00'', 2012, ''2012-08-04''), (''August'', ''2'', ''2012-08-24'', 105, ''2012-01-04 00:00:00'', 105, ''2012-01-04 00:00:00'', 2012, ''2012-08-19''), (''September'', ''1'', ''2012-09-12'', 105, ''2012-01-04 00:00:00'', 105, ''2012-01-04 00:00:00'', 2012, ''2012-09-07''), (''September'', ''2'', ''2012-09-25'', 105, ''2012-01-04 00:00:00'', 105, ''2012-01-04 00:00:00'', 2012, ''2012-09-21''), (''October'', ''1'', ''2012-10-10'', 105, ''2012-01-04 00:00:00'', 105, ''2012-01-04 00:00:00'', 2012, ''2012-10-07''), (''October'', ''2'', ''2012-10-24'', 105, ''2012-01-04 00:00:00'', 105, ''2012-01-04 00:00:00'', 2012, ''2012-10-20''), (''November'', ''1'', ''2012-11-09'', 105, ''2012-01-04 00:00:00'', 105, ''2012-01-04 00:00:00'', 2012, ''2012-11-04''), (''November'', ''2'', ''2012-11-27'', 105, ''2012-01-04 00:00:00'', 105, ''2012-01-04 00:00:00'', 2012, ''2012-11-21''), (''December'', ''1'', ''2012-12-11'', 105, ''2012-01-04 00:00:00'', 105, ''2012-01-04 00:00:00'', 2012, ''2012-12-06''), (''December'', ''2'', ''2012-12-26'', 105, ''2012-01-04 00:00:00'', 105, ''2012-01-04 00:00:00'', 2012, ''2012-12-21'');\n', '', '2012-01-05 09:21:14', 80, NULL, 80, 0, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(111, 'MGMT-Last Month''s Billing Only', 'MGMT-Last Month''s Recon to be used for monthly billing recon', 'SELECT salutation, username, firstname, lastname, name, employeetype, status, Month, contract,sum(currenthours) currenthours,rate, sum(RPT.currenthours*RPT.rate) as AmountBilled,'' '', 0.0 PayChexPeriod1, 0.0 PayChexPeriod2, 0.0 Difference, 0 Percentage, 1 EmployeeCount, ''                          '' Notes  from \n\n(SELECT TD.id,TD.companyid, salutation, username, firstname, lastname, employeetype, isactive, status, Month, (SELECT max(taskcode) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS taskcode, (SELECT max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS ponumber, (SELECT max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND PR.currentflag = ''Y'') AS Contract, TD.jobid, TD.jobcode, TD.job, sum(hours) AS currenthours, CASE WHEN ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(contractorrate) FROM rate RT WHERE TD.weekday BETWEEN effectivedate AND expirydate AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0)) ELSE contractorrate END AS Contractorrate, CASE WHEN ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT WHERE TD.weekday BETWEEN effectivedate AND expirydate AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0)) ELSE rate END AS rate FROM (SELECT E.id,E.companyid, E.salutation, E.username, E.firstname, E.lastname, E.employeetype, E.isactive, E.status, TD.jobid, monthname(TD.weekday) AS Month, TD.job, TD.jobcode, DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, sum(hours) AS hours FROM timesheetdata TD , employee E WHERE TD.employeeid = E.id AND TD.weekday BETWEEN (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-01'')) AND (SELECT LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))) AND TD.paycode in (''RT'',''OT'') AND TD.hours > 0 GROUP BY E.id,E.companyid, E.salutation, E.username, E.firstname, E.lastname, E.employeetype, E.isactive, TD.weekday, TD.jobid, TD.job, TD.jobcode, E.status) AS TD LEFT OUTER JOIN rate AS R ON (TD.id = R.employeeid AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid) GROUP BY Month, TD.id, salutation, username, firstname, lastname, employeetype, isactive, status, Contractorrate, TD.jobid, TD.job, Rate ORDER BY Month, Contract, jobid, employeetype DESC) \n\nas RPT  left outer join company c on (RPT.companyid = c.id)\ngroup by salutation, username, firstname, lastname, name, employeetype, status, Month, contract \nunion all\nSELECT salutation, username, firstname, lastname, '''', employeetype, ''Override'', ''N/A'' Month, ''Techsoft'' contract,0,0, 0 as AmountBilled,'' '', 0.0 PayChexPeriod1, 0.0 PayChexPeriod2, 0.0 Difference, 0 Percentage, 1 EmployeeCount, ''                          '' Notes\nfrom employee where id in  (select employeeid from employeeOverrides where overridetype=''Payroll'') \norder by employeetype desc, contract', '', '2012-03-05 19:05:41', 80, NULL, 80, 0, 0, '1|onetime', '2012-03-05 23:59:00', 'N', '0000-00-00'),
(112, 'MGMT-Expiring Relationships ', ' Expiring Relationships this month, please check rates too.', 'select\n  e.firstname,\n  e.lastname,\n  r.contract, \n  r.ponumber, \n  r.taskcode, \n  r.blccode,   \n  r.jobnumber, \n  r.relationshipstartdate, \n  r.relationshipenddate  \nfrom employeerelationship r left outer join employee e on (r.employeeid=e.id)   \nwhere relationshipenddate between (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 0 month) ,''%Y-%m-01'')) and   (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL 0 month)))', '', '2012-03-01 18:04:01', 80, NULL, 80, 1, 1, '0|1', '2038-01-01', 'N', '0000-00-00'),
(113, 'MGMT-EVM', 'EVM Base Query', 'select \n  C.contractname                                                      ContractName,\n  C.budgetamount                                                      ContractBudgetAmount,\n  C.budgethours                                                       ContractBudgetHours,\n  ''0000''                                                              ContractBudgetYearUsed,\n  R.TotalHours*R.Rate                                                 BurnAmount,\n  R.TotalHours                                                        BurnHours,\n  R.Rate,\n  R.salutation, \n  R.username, \n  R.firstname, \n  R.lastname,\n  R.PONumber,\n  R.Contract,\n  R.jobid, \n  R.jobcode,\n  R.job  ProjectName,\n  R.taskcode,\n  (select description from taskcodes T where T.taskcode = R.taskcode) Task,\n  P.budgetamount                                                      ProjectBudgetAmount,\n  P.budgethours                                                       ProjectBudgetHours,\n  P.year                                                              ProjectBudgetYearUsed \n   \n   \n from\n(SELECT \n   TD.id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   employeetype,\n   isactive,\n   status,\n   Month,\n   (SELECT  max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = \n\nRL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber,\n   (SELECT  max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND PR.currentflag = \n\n''Y'') AS Contract,   \n   TD.jobid, \n   TD.jobcode,\n   TD.job,\n   TD.taskcode,\n   sum(hours) TotalHours, \n    CASE  \n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(contractorrate) FROM rate RT \n                                 WHERE  TD.weekday BETWEEN effectivedate AND expirydate \n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\n      ELSE contractorrate\n    \n   END  AS Contractorrate,   \n   CASE  \n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\n      ELSE  rate\n \n   END  AS Rate \n FROM \n (SELECT \n  E.id, \n  E.salutation, \n  E.username, \n  E.firstname, \n  E.lastname,\n  E.employeetype,\n  E.isactive,\n  E.status,\n  TD.jobid,\n  monthname(TD.weekday) AS Month,\n  TD.job,\n  TD.jobcode,\n  TD.taskcode,\n  DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, \n    \n  sum(hours) AS hours \nFROM timesheetdata  TD , employee   E    \nWHERE   TD.employeeid = E.id  \n     \n    AND  TD.weekday    BETWEEN  ''2011-01-01'' \n                           AND  ''2012-02-29''\n    AND  TD.paycode in (''RT'',''OT'')\n    AND  TD.hours > 0\nGROUP BY \n  E.id, \n  E.salutation, \n  E.username, \n  E.firstname, \n  E.lastname,\n  E.employeetype,\n  E.isactive,\n  TD.weekday,\n  TD.jobid,\n  TD.job,\n  TD.jobcode,\n  TD.taskcode,\n  E.status) AS TD \n  LEFT  OUTER JOIN rate AS R\n  ON (TD.id = R.employeeid  \n  AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\nGROUP BY\n   Month,\n   TD.id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   employeetype,\n   isactive,\n   status,\n   Contractorrate,\n     TD.jobid, \n   TD.job,\n    TD.taskcode,\n   Rate\nORDER BY \n   Month,\n   Contract,\n   jobid,\n   employeetype DESC ) as R \nleft join costcalc_contracts C on (R.Contract=C.contractname)  \nleft join costcalc_projects  P on (R.jobid=P.tableid and P.year=''0000'')  \nwhere Contract = ''MedImmune''\n', '', '2012-03-01 18:10:02', 80, NULL, 80, 0, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(114, 'MGMT-EVMGetDataProc', 'MGMT-EVMGetDataProc', 'call EVMGetData(''MedImmune'',''2009'',''2012-01-01'',''2012-03-18'');', '', '2012-03-13 18:26:00', 80, NULL, 80, 0, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00');
INSERT INTO `customreport` (`id`, `title`, `description`, `querystring`, `category`, `datecreated`, `createdby`, `lastupdatedon`, `lastupdatedby`, `issendemail`, `isactive`, `expirytype`, `expirydate`, `postpone`, `date`) VALUES
(115, 'MGMT-Invoice(BOMS&HRMS)', '', 'CALL CLIENTInvoicesGenerate();\ndelete from invoice where startdate between (select str_to_date((SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  -1 month) ,''%Y-%m-01'')),''%Y-%m-%d''))  and (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)));\ninsert into invoice \nselect\n distinct\n 0,\n ponumber PONumber,\n concat(PONumber,UPPER(CAST(DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  -1 month),''%b%y'') AS CHAR(5)))) AS \n\nInvoiceNumber,\n(select str_to_date((SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  -1 month) ,''%Y-%m-01'')),''%Y-%m-%d''))  \n\nStartDate,\n (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))) EndDate,\n\n concat(ponumber,   UPPER(CAST(DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  -1 month)  ,''%b%y'') AS CHAR(5)))) \n\nAS Description,\n '''' Comment,\n 0 Salestax,\n 0 Freight,\n 0 Fee,\n 0 LiquidationAmount,\n \n coalesce(coalesce((SELECT id FROM employeegroup WHERE task=r.ponumber AND currentflag = ''Y''),(SELECT \n\nid FROM employeegroup WHERE invoicecategory=r.contract AND currentflag = ''Y'')),0) as employeegroupid ,\n '''' Billingtype,\n ''Group'' Invoicedby,\n contract Contract,\n PONumber Task,\n '''' Jobnumber,\n ''Report'' CreatedBy,\n  now() DateCreated,\n ''Report'' LastUpdatedBy,\n  now() LastUpdateDate,\n  now()EffectiveDate,\n  '''' ExpiryDate,\n  ''Y'' Currentflag,\n  ''Active'' EmployeeStatus,\n  now() LastUpdateDate,\n  now() InvoiceDate,\n  ''Pending'' PaymentStatus,\n  '''' UpdateMessage,  \n (SELECT id FROM invoicecategory WHERE category IN (SELECT invoicecategory FROM \n\nemployeegroup WHERE  currentflag = ''Y'' and laborcategory=r.contract ))  AS invoicecategoryid,\n\n  ''PO'' InvoiceMode\n\nfrom timesheetdata t left outer join employeerelationship r on (t.employeeid=r.employeeid  and r.jobnumber=t.jobcode  )\nwhere \n    t.weekday between  (select str_to_date((SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  -1 month) ,''%Y-%m-01'')),''%Y-%m-%d''))  and (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))\nand t.weekday between relationshipstartdate and relationshipenddate;\nINSERT INTO invoiceemployees\n SELECT DISTINCT\n   0,\n   R.employeeid , \n   I.id,\n   now() datecreated,\n   0 createdby,\n   now() effectivedate,\n   NULL,\n   ''Y''\n FROM invoice I , employeerelationship R\n  WHERE  I.startdate = (select str_to_date((SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  -1 month) ,''%Y-%m-01'')),''%Y-%m-%d''))\n         \n  and I.ponumber = R.ponumber\n  AND (I.startdate  BETWEEN relationshipstartdate AND relationshipenddate\n      OR  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))) BETWEEN relationshipstartdate AND relationshipenddate)\n  AND NOT EXISTS (SELECT 1 FROM invoiceemployees \n                  WHERE I.id = invoiceemployees.invoiceid\n                  AND R.employeeid = invoiceemployees.employeeid \n                  AND currentflag = ''Y'');\n SELECT DISTINCT\n   0,\n   R.employeeid , \n   R.contract,\n   I.ponumber,\n   I.id,\n   now() datecreated,\n   0 createdby,\n   now() effectivedate,\n   NULL,\n   ''Y''\n FROM invoice I , employeerelationship R\n  WHERE  I.startdate = (select str_to_date((SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  -1 month) ,''%Y-%m-01'')),''%Y-%m-%d''))\n         \n  and I.ponumber = R.ponumber\n  AND (I.startdate  BETWEEN relationshipstartdate AND relationshipenddate\n      OR  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))) BETWEEN relationshipstartdate AND relationshipenddate)', 'TECHSOFT', '2013-08-01 20:03:23', 80, NULL, 80, 1, 1, '0|4', '2013-9-02 00:00:00', 'Y', '2013-09-02'),
(116, 'MGMT-Expiring Projects', '', 'select\n  e.firstname,\n  e.lastname,\n  r.contract, \n  r.ponumber, \n  r.taskcode, \n  r.blccode,   \n  r.jobnumber, \n  r.relationshipstartdate, \n  r.relationshipenddate  \nfrom employeerelationship r left outer join employee e on (r.employeeid=e.id)   \nwhere relationshipenddate between (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 0 month) ,''%Y-%m-01'')) and   (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL 0 month)))', '', '2012-03-15 15:42:23', 80, NULL, 80, 1, 1, '0|1', '2038-01-01', 'N', '0000-00-00'),
(117, 'MGMT-Expiring Projects This Mo', 'MGMT-Expiring Projects', 'select\n  *\nfrom project\nwhere estimatedenddate   between (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 0 month) ,''%Y-%m-01'')) and   (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL 0 month)))\nunion\nselect\n  *\nfrom project\nwhere actualenddate   between (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 0 month) ,''%Y-%m-01'')) and   (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL 0 month)))\n', '', '2012-03-15 15:54:08', 80, NULL, 80, 1, 1, '0|1', '2038-01-01', 'N', '0000-00-00'),
(118, 'MGMT-BlankEmployeeAndCompany', '', 'drop table  employee_new ;\ncreate table employee_new as select *     from employee;\nupdate employee_new \nset\nlastname=''Lastname'',\npassword=''12345678'',\nemailaddress='''',\n\npersonalemailaddress='''',\nmobilenumber='''',\n\ntsgbadgenumber='''',\n\nofficeline1='''',\n\nofficeline2='''',\n\nfaxnumber='''',\n\naddress1='''',\n\naddress2='''',\n\nstateorprovince='''',\n\npostalcode='''',\n\ncountry='''',\n\ncity='''',\n\ncompanyname='''',\n\ncompanyaddress='''',\n\nssn='''',\n\nein='''',\n\nbirthdate='''',\nsupervisorname='''',\n\nsupervisoremail='''',\n\nsupervisorofficeline='''',\nsecurityquestion='''',\n\nanswer='''',\n \nec1_firstname='''',\n\nec1_lastname='''',\n\nec1_streetaddress='''',\n\nec1_city='''',\n\nec1_state='''',\n\nec1_zipcode='''',\n\nec1_homephone='''',\n\nec1_workphone='''',\n\nec1_cellphone='''',\n\nec2_lastname=''LastName'',\n\nec2_streetaddress='''',\n\nec2_city='''',\n\nec2_state='''',\n\nec2_zipcode='''',\n\nec2_homephone='''',\n\nec2_workphone='''',\n\nec2_cellphone='''',\n\nec2_relationship='''',\n\nec3_firstname='''',\n\nec3_lastname='''',\n\nec3_streetaddress='''',\n\nec3_city='''',\n\nec3_state='''',\n\nec3_zipcode='''',\n\nec3_homephone='''',\n\nec3_workphone='''',\n\nec3_cellphone='''' \n \n;\n\nselect * from  employee_new where id=57;\ndrop table company_new;\ncreate table company_new as\nselect * from company;\nupdate company_new set name=''Test Company'',\nnotes = ''Test Address'';\nselect * from company_new;\n\n ', '', '2012-03-19 12:30:18', 80, NULL, 80, 0, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(119, 'MGMT-SavedTimeSheets', 'Show saved timesheets', 'select * from timesheet where  status=''Saved''', '', '2012-04-01 11:59:13', 80, NULL, 80, 0, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(120, 'Andrew_Monthly Hours', 'Total monthly hours for each employee ', 'SELECT ET.*,\n(SELECT MAX(rate) FROM rate WHERE employeeid=ET.employeeid AND DATE(ET.weekday) BETWEEN effectivedate AND expirydate) AS \n\nrate,\nSUM(ET.hours) AS currenthours,\n(SELECT MAX(laborpoline) FROM project WHERE jobcode=ET.jobcode AND (DATE(expirydate) >= DATE(ET.relationshipenddate) || \n\nexpirydate IS NULL)) AS poline \nFROM\n(\n             SELECT \n             ER.contract, \n             ER.contract AS laborcategory, \n             ER.ponumber, \n             ER.jobid, \n             ER.employeeid,\n             E.firstname,\n             E.lastname,\n             E.tsgbadgenumber,\n             E.blccode,\n             CONCAT(E.firstname,'' '',E.lastname,''-'',td.jobcode) AS thekey,\n             DATE_FORMAT(''2012-03-01'',''%d-%b-%y'') AS monthstartdate,\n             DATE_FORMAT(''2012-03-31'',''%d-%b-%y'') AS monthenddate,\n             ER.taskcode, \n             ER.relationshipstartdate,\n             ER.relationshipenddate,\n             td.jobcode, \n             td.weekday, \n             td.account, \n             td.hours, \n             ts.weekendingdate,\n             DATE_FORMAT(ts.weekendingdate,''%d-%b-%y'') AS periodending,\n             DATE_FORMAT(ts.weekendingdate,''%M'') AS month,\n             DATE_FORMAT(ts.weekendingdate,''%Y'') AS year\n             \n             FROM  timesheet ts, timesheetdata td\n             LEFT JOIN employeerelationship ER ON (td.jobcode = ER.jobnumber AND td.employeeid=ER.employeeid AND td.taskcode=ER.taskcode)\n             LEFT JOIN employee E ON (E.id=ER.employeeid)           \n             \n             WHERE \n             ts.id=td.timesheetid\n             AND ts.status = ''Approved''\n             AND td.weekday BETWEEN  DATE(''2012-03-01'') and DATE(''2012-03-31'')\n             AND td.weekday BETWEEN  ER.relationshipstartdate AND ER.relationshipenddate \n             AND ER.jobid IN (select distinct jobid from timesheetdata where employeeid=ER.employeeid and weekday between DATE\n\n(''2012-03-01'') and DATE(''2012-03-31''))\n             AND td.hours > 0\n) ET \n\nGROUP BY ET.jobcode, ET.account, ET.employeeid', '', '2012-05-03 16:30:22', 18, NULL, 18, 0, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(121, 'MGMT-CHARATERSET-Procs', '', 'ALTER TABLE `costcalc_projects` CHANGE `projectname` `projectname` VARCHAR( 255 ) CHARACTER SET latin1 COLLATE latin1_swedish_ci NOT NULL;  ', '', '2012-05-03 18:26:20', 80, NULL, 80, 0, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(122, 'MAINT-Switch Invoice Approvers', '', '   UPDATE `invoice_approver` SET `Invoice_ApproverICode` = 148,\n  `Invoice_ApproverMails` = ''semu@techsoftgroup.com''  ', '', '2011-10-28 15:34:46', 80, NULL, 80, 0, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(123, 'IDASH- Quickbooks Upload', 'SP for IDASH- Quickbooks Upload', 'call Quickbooksupload(''ponumber'',''invoicenumber'',''contract'',''month'',''year'')', '', '2012-05-22 15:13:23', 0, '2012-05-22 15:13:40', NULL, 0, 0, '', '', '', '0000-00-00'),
(124, 'MGMT-InvoiceCategory', '', 'update invoicecategory set state=''MD''\nwhere category=''Medimmune'';\nselect * from invoicecategory', '', '2012-06-01 11:16:06', 80, NULL, 80, 0, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(125, 'MGMT-Qbooks', '', '---\n--- Employee\n---\n \n INSERT INTO qbooks.employee (ListID, TimeCreated, TimeModified, EditSequence, Name, IsActive, Salutation, FirstName, MiddleName, LastName, Suffix, EmployeeAddress_Addr1, EmployeeAddress_Addr2, EmployeeAddress_Addr3, EmployeeAddress_Addr4, EmployeeAddress_City, EmployeeAddress_State, EmployeeAddress_PostalCode, EmployeeAddress_Country, PrintAs, Phone, Mobile, Pager, PagerPIN, AltPhone, Fax, SSN, Email, EmployeeType, Gender, HiredDate, ReleasedDate, BirthDate, AccountNumber, Notes, BillingRateRef_ListID, BillingRateRef_FullName, CustomField1, CustomField2, CustomField3, CustomField4, CustomField5, CustomField6, CustomField7, CustomField8, CustomField9, CustomField10, Status)\n  \n \n SELECT \n  username,\n  now(), \n  now(), \n  username,\n  concat(firstname,'' '',lastname)  AS Name, \n  CASE IsActive WHEN ''Y'' THEN ''true'' ELSE ''false'' end IsActive, \n  salutation, \n  firstname, \n  substring(middlename,1,5) middlename, \n  lastname,\n  initials, \n  address1, \n  address2, \n  NULL address3, \n  NULL address4, \n  city,\n  NULL stateorprovince, \n  -- Needs 2 Character state, Decode\n  postalcode,\n  country, \n  concat(firstname,'' '',lastname) printas,\n  substring(officeline1,1,20) phone, \n  mobilenumber mobile, \n  NULL pager, \n  NULL pagerpin, \n  substring(officeline2,1,20) altphone, \n  faxnumber, \n  NULL ssn, \n  -- Must be in correct format, Do not populate for now.\n  emailaddress, \n  employeetype, \n  gender, \n  hiredate, \n  releasedate, \n  birthdate, \n  NULL accountnumber, \n  NULL notes, \n  invoicecategory billingrateref_listid, \n  NULL billingrateref_fullname, \n  (SELECT name FROM hrms.company c WHERE c.id = e.companyid)  customfield1, \n  jobtitle customfield2, \n  blccode  customfield3, \n  supervisorname customfield4, \n  employeestartdate customfield5, \n  employeeenddate customfield6, \n  id customfield7, \n  maximumvacationdays customfield8, \n  maximumpersonaldays customfield9, \n  maximumsickdays     customfield10, \n  ''ADD'' status\n  \n FROM hrms.employee e\n-- WHERE username LIKE ''TSG005'' \n-- AND NOT EXISTS (SELECT 1 FROM employee eqb where eqb.ListID=e.username)\n  \n ORDER BY username;\n   \n----------------------------------------------------------------------------------------------------------------------------------''''\n--- Jobs\n---\n\nINSERT INTO qbooks.customer (ListID, TimeCreated, TimeModified, EditSequence, Name, FullName, IsActive, ParentRef_ListID, ParentRef_FullName, Sublevel, CompanyName, Salutation, FirstName, MiddleName, LastName, Suffix, BillAddress_Addr1, BillAddress_Addr2, BillAddress_Addr3, BillAddress_Addr4, BillAddress_Addr5, BillAddress_City, BillAddress_State, BillAddress_PostalCode, BillAddress_Country, BillAddress_Note, ShipAddress_Addr1, ShipAddress_Addr2, ShipAddress_Addr3, ShipAddress_Addr4, ShipAddress_Addr5, ShipAddress_City, ShipAddress_State, ShipAddress_PostalCode, ShipAddress_Country, ShipAddress_Note, PrintAs, Phone, Mobile, Pager, AltPhone, Fax, Email, Contact, AltContact, CustomerTypeRef_ListID, CustomerTypeRef_FullName, TermsRef_ListID, TermsRef_FullName, SalesRepRef_ListID, SalesRepRef_FullName, Balance, TotalBalance, SalesTaxCodeRef_ListID, SalesTaxCodeRef_FullName, ItemSalesTaxRef_ListID, ItemSalesTaxRef_FullName, SalesTaxCountry, ResaleNumber, AccountNumber, CreditLimit, PreferredPaymentMethodRef_ListID, PreferredPaymentMethodRef_FullName, CreditCardNumber, ExpirationMonth, ExpirationYear, NameOnCard, CreditCardAddress, CreditCardPostalCode, JobStatus, JobStartDate, JobProjectedEndDate, JobEndDate, JobDesc, JobTypeRef_ListID, JobTypeRef_FullName, Notes, PriceLevelRef_ListID, PriceLevelRef_FullName, TaxRegistrationNumber, CurrencyRef_ListID, CurrencyRef_FullName, IsStatementWithParent, DeliveryMethod, CustomField1, CustomField2, CustomField3, CustomField4, CustomField5, CustomField6, CustomField7, CustomField8, CustomField9, CustomField10, Status)\nSELECT    id,now(), now(), 1000000+id,CONTRACT,CONTRACT,''true'', NULL, NULL, 0, CONTRACT,\n NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \n         NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \n         NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \n         NULL, NULL, NULL, NULL, NULL, NULL, NULL, ''None'', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \n         NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, ''ADD'' \n\n FROM hrms.employeerelationship \n WHERE contract <> ''''\nGROUP BY contract;\n\n \n-- Adjust name not to exceed 41\n-- customer  name  291 Customer/Company name cannot exceed 41 characters 6/7/2012 6:29:08 PM\n-- customer  quickbooks response:  311 There was an error when storing "B109C9612-Science Clips work: B109C9612" in the "customer name" field.  QuickBooks error message: Names in this list cannot contain a colon. The colon is a special cha  6/7/2012 6:29:27 PM\n-- customer  name  388 Customer/Company name cannot exceed 41 characters 6/7/2012 6:29:27 PM\n-- Last Name cannot be the same as First Name\n\nINSERT INTO qbooks.customer (ListID, TimeCreated, TimeModified, EditSequence, Name, FullName, IsActive, ParentRef_ListID, ParentRef_FullName, Sublevel, CompanyName, Salutation, FirstName, MiddleName, LastName, Suffix, BillAddress_Addr1, BillAddress_Addr2, BillAddress_Addr3, BillAddress_Addr4, BillAddress_Addr5, BillAddress_City, BillAddress_State, BillAddress_PostalCode, BillAddress_Country, BillAddress_Note, ShipAddress_Addr1, ShipAddress_Addr2, ShipAddress_Addr3, ShipAddress_Addr4, ShipAddress_Addr5, ShipAddress_City, ShipAddress_State, ShipAddress_PostalCode, ShipAddress_Country, ShipAddress_Note, PrintAs, Phone, Mobile, Pager, AltPhone, Fax, Email, Contact, AltContact, CustomerTypeRef_ListID, CustomerTypeRef_FullName, TermsRef_ListID, TermsRef_FullName, SalesRepRef_ListID, SalesRepRef_FullName, Balance, TotalBalance, SalesTaxCodeRef_ListID, SalesTaxCodeRef_FullName, ItemSalesTaxRef_ListID, ItemSalesTaxRef_FullName, SalesTaxCountry, ResaleNumber, AccountNumber, CreditLimit, PreferredPaymentMethodRef_ListID, PreferredPaymentMethodRef_FullName, CreditCardNumber, ExpirationMonth, ExpirationYear, NameOnCard, CreditCardAddress, CreditCardPostalCode, JobStatus, JobStartDate, JobProjectedEndDate, JobEndDate, JobDesc, JobTypeRef_ListID, JobTypeRef_FullName, Notes, PriceLevelRef_ListID, PriceLevelRef_FullName, TaxRegistrationNumber, CurrencyRef_ListID, CurrencyRef_FullName, IsStatementWithParent, DeliveryMethod, CustomField1, CustomField2, CustomField3, CustomField4, CustomField5, CustomField6, CustomField7, CustomField8, CustomField9, CustomField10, Status)\nSELECT     id,now(), now(), 1000000+id,concat(jobcode,''-'',substring( Title,1,35)),\n          concat(projectcategory,'':'',jobcode,''-'',Title),''true'', NULL, projectcategory, NULL, NULL,\n NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \n         NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \n         NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \n         NULL, NULL, NULL, NULL, NULL, NULL, NULL, ''None'', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, \n         NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, ''ADD''\nFROM hrms.project \n WHERE projectcategory <> ''''\nGROUP BY projectcategory,jobcode\n-- AND NOT EXISTS (SELECT 1 FROM qbooks.customer qc WHERE  qc.Name = concat(jobcode,''-'',Title ))\n\n\nSELECT DISTINCT projectcategory,concat(projectcategory,'':'',jobcode,''-'',Title) FROM hrms.project \n\n-------------------------------------------------------------------------------------------------------------------------------\n--- Time Sheets\n---\n--- SELECT * FROM qbooks.error_table\n--- SELECT * FROM  qbooks.error_table\n--- SELECT * FROM  qbooks.items\n--- Select * from qbooks.timetracking, delete from  qbooks.timetracking where Status=''ADD''\n \nINSERT INTO qbooks.timetracking \nSELECT  timesheetdataid,\n        now(),\n        now(),\n        timesheetdataid+100000,\n        timesheetdataid+id,\n        weekday,\n        NULL,\n        concat(firstname,'' '',lastname)  AS Name,\n        NULL,\n        concat(Contract,'':'',concat(jobcode,''-'',substring(job,1,31))),\n        NULL, \n        ''Direct Labor'',\n         NULL, \n       -- compute portion for minutes\n       concat(''PT'',substring_index(CAST(hours  AS CHAR),''.'',1),''H'',substring_index(CAST(hours  AS CHAR),''.'',-1),''M''), \n          NULL, \n          NULL, \n          NULL, \n          ''Direct Labor'', \n          NULL, \n          NULL, \n          NULL, \n          ''Billable'', \n          ''ADD''     \nfrom \n(SELECT \n (SELECT  max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber,\n   (SELECT  max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND PR.currentflag = ''Y'') AS Contract,    \n    \n   TD.*\n     \n FROM \n (SELECT  TD.*, E.lastname,firstname, E.username, E.employeetype, E.isactive, E.salutation, E.id\nFROM timesheetdata  TD , employee   E    \nWHERE   TD.employeeid = E.id  \n     \n    AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -19 month) ,''%Y-%m-01'')) \n                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -19 month))) \n    AND  TD.paycode in (''RT'',''OT'')\n    AND  TD.hours > 0\n) AS TD \n-- WHERE id=97 \nORDER BY weekday) AS T\n\n----------------------------------------------------------------------------------------------------------------------------\n-- SELECT * FROM invoice WHERE invoicenumber = ''ZZZZZZZNOV11''\n-- SELECT * FROM invoiceemployees WHERE invoiceid=910\n----------------------------------------------------------------------------------------------------------------------------\n\ndescribe qbooks.invoice   -- select * from qbooks.customer \n                          -- NOR, customer name is the same for a number of contracts, need to resolve this\n                          -- Get all addresses\n                          -- Bring in Billing address \n                          -- iNVOICE tERMS\n\nSELECT * FROM qbooks.invoice;\nSELECT * FROM qbooks.error_table;\nSELECT * FROM qbooks.InvoiceLineDetail   \n\n\nINSERT INTO qbooks.InvoiceLineDetail (TxnLineID, ItemRef_ListID, ItemRef_FullName, Description, Quantity, UnitOfMeasure, OverrideUOMSetRef_ListID, OverrideUOMSetRef_FullName, Rate, RatePercent, ClassRef_ListID, ClassRef_FullName, Amount, InventorySiteRef_ListID, InventorySiteRef_FullName, ServiceDate, SalesTaxCodeRef_ListID, SalesTaxCodeRef_FullName, Other1, Other2, LinkedTxnID, LinkedTxnLineID, CustomField1, CustomField2, CustomField3, CustomField4, CustomField5, CustomField6, CustomField7, CustomField8, CustomField9, CustomField10, IDKEY, GroupIDKEY)\nVALUES (\n''540-1339191207'', \n''60000-856115089'', \n''Direct Labor'', \nNULL, \n''10'', \nNULL, \nNULL, \nNULL, \n''75.00'', \nNULL, \nNULL, \nNULL, \n750, \nNULL, \nNULL, \n''2011-11-01'', \n''20000-1011045429'', \n''Non'', \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \n''53E-1339191207'', \nNULL);\n\nSELECT * FROM qbooks.items;\nSELECT * FROM qbooks.invoice;\nSELECT * FROM qbooks.error_table;\nSELECT * FROM qbooks.InvoiceLineDetail \nDELETE FROM qbooks.invoice WHERE status=''ADD''\n53E-1339191207 -- TXNID is the IDKEY IN invoicedetail\n''MedImmune:SASCONF001-SAS Configuration''\n-------------------------------------------------------------------------------------------------------------------------------\n-- Step 1\n-------------------------------------------------------------------------------------------------------------------------------\nINSERT INTO qbooks.invoice (TxnID, TimeCreated, TimeModified, EditSequence, TxnNumber, CustomerRef_ListID, CustomerRef_FullName, ClassRef_ListID, ClassRef_FullName, ARAccountRef_ListID, ARAccountRef_FullName, TemplateRef_ListID, TemplateRef_FullName, TxnDate, RefNumber, BillAddress_Addr1, BillAddress_Addr2, BillAddress_Addr3, BillAddress_Addr4, BillAddress_Addr5, BillAddress_City, BillAddress_State, BillAddress_PostalCode, BillAddress_Country, BillAddress_Note, ShipAddress_Addr1, ShipAddress_Addr2, ShipAddress_Addr3, ShipAddress_Addr4, ShipAddress_Addr5, ShipAddress_City, ShipAddress_State, ShipAddress_PostalCode, ShipAddress_Country, ShipAddress_Note, IsPending, IsFinanceCharge, PONumber, TermsRef_ListID, TermsRef_FullName, DueDate, SalesRepRef_ListID, SalesRepRef_FullName, FOB, ShipDate, ShipMethodRef_ListID, ShipMethodRef_FullName, Subtotal, ItemSalesTaxRef_ListID, ItemSalesTaxRef_FullName, SalesTaxPercentage, SalesTaxTotal, AppliedAmount, BalanceRemaining, CurrencyRef_ListID, CurrencyRef_FullName, ExchangeRate, BalanceRemainingInHomeCurrency, Memo, IsPaid, CustomerMsgRef_ListID, CustomerMsgRef_FullName, IsToBePrinted, IsToBeEmailed, IsTaxIncluded, CustomerSalesTaxCodeRef_ListID, CustomerSalesTaxCodeRef_FullName, SuggestedDiscountAmount, SuggestedDiscountDate, Other, CustomField1, CustomField2, CustomField3, CustomField4, CustomField5, CustomField6, CustomField7, CustomField8, CustomField9, CustomField10, Status)\n  \nSELECT   \n      \n distinct  \n concat(''1234567'',''-'', PONumber) AS InvoiceIdKey,\n now(), \n now(), \n concat(''1234567890'',''-'', PONumber)  AS EditSquence,\n 1234567    AS TranNumber,\n NULL, \n Contract AS Contract,\n NULL, \n NULL, \n NULL, \n ''Medimmnue Account'', -- concat(Contract,'' '',''Account'') AS Description, \nNULL,\n''Intuit Service Invoice'', \nnow(), \n -- UPPER(concat(PONumber,substring(monthname(max(weekday)),1,3),YEAR(now())))  AS InvoiceNumber, -- too long\n UPPER(concat( substring(monthname(max(weekday)),1,3),YEAR(now())))  AS InvoiceNumber,  \n\nNULL AS BillingAddress,\nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL,\nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \n''false'', \n''false'', \nPONumber, \nNULL, \nNULL, \nnow(), \nNULL, \nNULL, \nNULL, \nnow(), \nNULL, \nNULL, \nNULL AS SubTotal,\nNULL, \nNULL, \n''0.00'', \n0, \n0, \nNULL, -- Balance Remaining\nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \n''false'', \nNULL, \nNULL, \n''true'', \n''false'',-- email\nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \n''ADD'' \n\nfrom \n(SELECT \n (SELECT  max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber,\n   (SELECT  max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND PR.currentflag = ''Y'') AS Contract,    \n    \n   TD.*\n     \n FROM \n (SELECT  TD.*, E.lastname,firstname, E.username, E.employeetype, E.isactive, E.salutation, E.id\nFROM timesheetdata  TD , employee   E    \nWHERE   TD.employeeid = E.id  \n     \n    AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -19 month) ,''%Y-%m-01'')) \n                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -19 month))) \n    AND  TD.paycode in (''RT'',''OT'')\n    AND  TD.hours > 0\n) AS TD ) AS T\nWHERE T.PONumber IS NOT NULL\nGROUP BY COntract, PONumber\nORDER BY Contract;\n-- select * from qbooks.InvoiceLineDetail \n\nINSERT INTO qbooks.InvoiceLineDetail (TxnLineID, ItemRef_ListID, ItemRef_FullName, Description, Quantity, UnitOfMeasure, OverrideUOMSetRef_ListID, OverrideUOMSetRef_FullName, Rate, RatePercent, ClassRef_ListID, ClassRef_FullName, Amount, InventorySiteRef_ListID, InventorySiteRef_FullName, ServiceDate, SalesTaxCodeRef_ListID, SalesTaxCodeRef_FullName, Other1, Other2, LinkedTxnID, LinkedTxnLineID, CustomField1, CustomField2, CustomField3, CustomField4, CustomField5, CustomField6, CustomField7, CustomField8, CustomField9, CustomField10, IDKEY, GroupIDKEY)\n  \nSELECT   \n      \ntimesheetdataid,   \nNULL, \n''Direct Labor'', -- Needs dynamic itemlist\nconcat(jobcode,'' - '',firstname,'' '',lastname, '' - '', CAST(weekday AS CHAR))  AS Name,\nhours,\nNULL, \nNULL, \nNULL, \nNULL,  -- Rate\nNULL, \nNULL, \nNULL, \nNULL,    -- Amount rate * hours, will be computed automatically\nNULL, \nNULL, \nWeekday,\nNULL, \n''Non'', \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \nNULL, \n concat(''1234567'',''-'', PONumber) AS InvoiceIdKey, \nNULL  \n\nfrom \n(SELECT \n (SELECT  max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber,\n   (SELECT  max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND PR.currentflag = ''Y'') AS Contract,    \n    \n   TD.*\n     \n FROM \n (SELECT  TD.*, E.lastname,firstname, E.username, E.employeetype, E.isactive, E.salutation, E.id\nFROM timesheetdata  TD , employee   E    \nWHERE   TD.employeeid = E.id  \n     \n    AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -19 month) ,''%Y-%m-01'')) \n                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -19 month))) \n    AND  TD.paycode in (''RT'',''OT'')\n    AND  TD.hours > 0\n) AS TD ) AS T\n \n \n \nORDER BY Contract', '', '2012-06-12 19:19:03', 80, NULL, 80, 0, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(126, 'MGMT-FixEVMCharacterSet', '', 'ALTER TABLE  `costcalc_projects` CHANGE  `projectname`  `projectname` VARCHAR( 255 ) CHARACTER SET latin1 COLLATE latin1_german2_ci NOT NULL;', '', '2012-06-06 18:00:20', 80, NULL, 80, 0, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(127, 'MGMT-ContractorMonthlyReport', '', 'SELECT salutation, username, firstname, lastname, name, employeetype, status, Month, contract,sum(currenthours) currenthours,contractorrate, sum(RPT.currenthours*RPT.contractorrate) as ContractBill,'' '', 0.0 PayChexPeriod1, 0.0 PayChexPeriod2, 0.0 Difference, 0 Percentage, 1 EmployeeCount, ''                          '' Notes  from \n\n(SELECT TD.id,TD.companyid, salutation, username, firstname, lastname, employeetype, isactive, status, Month, (SELECT max(taskcode) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS taskcode, (SELECT max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS ponumber, (SELECT max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND PR.currentflag = ''Y'') AS Contract, TD.jobid, TD.jobcode, TD.job, sum(hours) AS currenthours, CASE WHEN ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(contractorrate) FROM rate RT WHERE TD.weekday BETWEEN effectivedate AND expirydate AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0)) ELSE contractorrate END AS Contractorrate, CASE WHEN ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT WHERE TD.weekday BETWEEN effectivedate AND expirydate AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0)) ELSE rate END AS rate FROM (SELECT E.id,E.companyid, E.salutation, E.username, E.firstname, E.lastname, E.employeetype, E.isactive, E.status, TD.jobid, monthname(TD.weekday) AS Month, TD.job, TD.jobcode, DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, sum(hours) AS hours FROM timesheetdata TD , employee E WHERE TD.employeeid = E.id AND TD.weekday BETWEEN (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-01'')) AND (SELECT LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))) AND TD.paycode in (''RT'',''OT'') AND TD.hours > 0 GROUP BY E.id,E.companyid, E.salutation, E.username, E.firstname, E.lastname, E.employeetype, E.isactive, TD.weekday, TD.jobid, TD.job, TD.jobcode, E.status) AS TD LEFT OUTER JOIN rate AS R ON (TD.id = R.employeeid AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid) GROUP BY Month, TD.id, salutation, username, firstname, lastname, employeetype, isactive, status, Contractorrate, TD.jobid, TD.job, Rate ORDER BY Month, Contract, jobid, employeetype DESC) \n\nas RPT  left outer join company c on (RPT.companyid = c.id)\nwhere employeetype=''Contractor''\ngroup by salutation, username, firstname, lastname, name, employeetype, status, Month, contract ', '', '2012-07-06 10:04:19', 80, NULL, 80, 0, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(128, 'MGMT-AddJobCategory', 'MGMT-AddJobCategory', 'INSERT INTO employeejobcategory (category, description, comments, createdby, datecreated, lastupdatedby, lastupdatedon)\nVALUES (''Med-Surg Nursing'', ''Medical Surgery Nursing.'', '''', 0, now(), 0, now());', '', '2012-07-19 13:09:55', 80, NULL, 80, 0, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(129, 'PAYROLL-P1- PAYCHEX By Job', 'PAYROLL-Period - 1 PAYCHEX By Job', 'SELECT \n   username LoginId,\n   salutation   Salutation, \n   firstname   FirstName, \n   lastname   LastName,\n   employeetype   EmployeeType,\n   ''0735-7956''   OurAccount,\n  concat(CAST( (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01''))  AS CHAR(10)  ), '' - '',CAST((SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15'')) AS CHAR(10))) AS PayrollPeriod,\n   ''           ''   Checkdate,\n   PayrollCategory,\n   CASE WHEN length(jobcode) = 0 THEN job ELSE jobcode END jobcode,\n   CASE WHEN\n(((HoursWorked+SickHoursInPeriod+PersonalHoursInPeriod+VacationHoursInPeriod) >= (HoursInPeriod-HolidaysHoursInPeriod) or HoursWorked > 86.67)  and employeetype = ''Full Time'' AND job NOT IN (''Sick'',''Personal'',''Vacation'') )\n   \n        THEN\n         ''REGULAR''\n        WHEN\n         PayrollCategory = ''REGULAR''\n        THEN\n         ''REGULAR''\n        ELSE HoursWorked\n   END  AS HoursWorked,\n   rate,\n   '' '',\n   CASE WHEN\n                    HoursWorked-(HoursInPeriod-HolidaysHoursInPeriod) > 0  and employeetype = ''Full Time''   \n        THEN\n          HoursWorked-(HoursInPeriod-HolidaysHoursInPeriod)\n        ELSE 0\n   END  AS ExtraHours\n \n FROM\n (SELECT \n   id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   employeetype,\n   jobcode,\n   job,\n   sum(hours) HoursWorked,\n   CASE WHEN \n        sum(hours)  -  (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T  \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))) = 0\n                       AND employeetype IN (''Full Time'' ) OR (sum(hours) between 86.67 AND  (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T  \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))))\n                       AND employeetype NOT IN (''Hourly'' )\n       THEN ''REGULAR''\n       WHEN \n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T  \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))) < 0 \n       THEN ''HOURLY''\n       WHEN \n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))) > 0\n                       AND employeetype IN (''Full Time'' ) \n             \n       THEN ''REGULAR WITH OVERTIME''\n       ELSE ''HOURLY'' \n   END  PayrollCategory,\n  \n   \n   sum(hours) - COALESCE((SELECT sum(hours) FROM timesheetdata T \n                     WHERE T.employeeid = data.id\n                       AND  T.job  IN (''Vacation'',''Sick'',''Personal'',''Paid Holiday'')          \n                       AND  T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))),0) HoursBilled,\n  (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \n   WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n   AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))) HoursInPeriod,\n  (SELECT count(1)*8 FROM publicholidays  PH\n   WHERE  PH.publicholidaydate BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15''))) as  HolidaysHoursInPeriod,\n  \n  (SELECT sum(hours)  FROM timesheetdata T \n   WHERE employeeid =   data.id \n   and job IN (''Sick'') \n   AND  T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15'')))  AS  SickHoursInPeriod,\n    (SELECT sum(hours)  FROM timesheetdata T \n   WHERE employeeid =   data.id \n   and job IN (''Vacation'') \n   AND  T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15'')))  AS  VacationHoursInPeriod,\n    (SELECT sum(hours)  FROM timesheetdata T \n   WHERE employeeid =   data.id \n   and job IN (''Personal'') \n   AND  T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) AND (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15'')))  AS  PersonalHoursInPeriod,\n  \n \n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid = data.id \n   and job IN (''Paid Holiday'') \n   AND Year(T.weekday) = YEAR(NOW())) AS PaidHolidaysToDate,\n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid =  data.id \n   and job IN (''Sick'') \n   AND Year(T.weekday) = YEAR(NOW())) AS PaidSickDaysToDate,\n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid = data.id \n   and job IN (''Vacation'') \n   AND Year(T.weekday) = YEAR(NOW())) AS PaidVacationDaysToDate,\n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid = data.id \n   and job IN (''Personal'') \n   AND Year(T.weekday) = YEAR(NOW())) AS PaidPersonalDaysToDate, \n   CASE  \n      WHEN\n        ID IN (55)  \n      THEN\n        rate\n      ELSE\n        "On File"\n   END AS rate \n from  \n  (SELECT \n   E.id, \n   E.salutation, \n   E.username, \n   E.firstname, \n   E.lastname,\n   E.employeetype,\n   E.isactive,\n   E.status,\n   TD.weekday ,\n   hours,\n   TD.jobid,\n   CASE  \n      WHEN  TD.jobid < 0   then TD.job else TD.jobcode \n   END as jobcode, \n   TD.job,\n   CASE  \n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \n                                 AND RT.employeeid = TD.employeeid AND (jobid is NULL or jobid = 0))\n      ELSE  rate\n \n   END  AS Rate \n\n  FROM   timesheetdata AS TD INNER JOIN employee as E    \n  on  (TD.employeeid = E.id  ) \n\n\n  LEFT  OUTER JOIN rate AS R\n  ON (TD.employeeid = R.employeeid    AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\n\n  where   E.isactive = "Y"\n    AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01'')) \n                           AND  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15'')) \n    AND  TD.hours > 0\n    AND employeetype <> ''Contractor'' \n\n\n   ) AS data\nGROUP BY\n   id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   employeetype,\n   jobcode,\n   rate\n) AS payroll\nWHERE id not in (60,134,64,92,91,103,104,138,55,97,141)\nUNION ALL\nselect \n   ''TSG525'',\n   ''Mr'', \n   ''Tony'', \n   ''Zanfardino'',\n   ''Hourly'',\n   ''0735-7956'' ,\n    concat(CAST( (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-01''))  AS CHAR(10)  ), '' - '',CAST((SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL  0 month) ,''%Y-%m-15'')) AS CHAR(10))) AS PayrollPeriod,\n   ''           ''   Checkdate,\n \n   ''HOURLY'',\n   ''G&A'',\n    7.00,\n    72.00,\n    '''',\n    0\n ORDER by\n   employeetype,\n   PayrollCategory,\n   lastname,\n   HoursWorked  \n   \n ', '', '2012-09-21 16:45:49', 80, NULL, 80, 1, 1, '0|1', '2038-01-01', 'N', '0000-00-00'),
(130, 'PAYROLL-P2- PAYCHEX By Job', 'PAYROLL-Period - 2 PAYCHEX By Job', '  SELECT \n   username LoginId,\n   salutation Salutation, \n   firstname   FirstName, \n   lastname    LastName,\n   employeetype   EmployeeType,\n   ''0735-7956''   OurAccount,\n   concat(CAST( (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16''))  AS CHAR(10)  ), '' - '',CAST((SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))) AS CHAR(10))) AS PayrollPeriod,\n   ''           ''   Checkdate,\n   PayrollCategory,\n   CASE WHEN length(jobcode) = 0 THEN job ELSE jobcode END jobcode,\n   CASE WHEN\n(((HoursWorked+SickHoursInPeriod+PersonalHoursInPeriod+VacationHoursInPeriod) > (HoursInPeriod-HolidaysHoursInPeriod) or HoursWorked > 86.67)  and employeetype = ''Full Time'' AND job NOT IN (''Sick'',''Personal'',''Vacation''))        THEN\n         ''REGULAR''\n        WHEN\n         PayrollCategory = ''REGULAR''\n        THEN\n         ''REGULAR''\n        ELSE HoursWorked\n   END  AS HoursWorked,\n   rate,\n   '' '',\n   CASE WHEN\n          HoursWorked-(HoursInPeriod-HolidaysHoursInPeriod) > 0  and employeetype = ''Full Time''  \n        THEN\n          HoursWorked-(HoursInPeriod-HolidaysHoursInPeriod)\n        ELSE 0\n   END  AS ExtraHours\n \n FROM\n (SELECT \n   id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   employeetype,\n   sum(hours) HoursWorked,\n   jobcode,\n   job,\n   CASE WHEN \n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) = 0 \n                       AND employeetype IN (''Full Time'' ) OR (sum(hours) between 86.67 AND (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))))\n                       AND employeetype NOT IN (''Hourly'' )\n       THEN ''REGULAR''\n       WHEN \n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T  \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) < 0 \n       THEN ''HOURLY''\n       WHEN \n        sum(hours)  - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \n                       WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n                       AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) > 0\n                       AND employeetype IN (''Full Time'' ) \n             \n       THEN ''REGULAR WITH OVERTIME''\n       ELSE ''HOURLY'' \n   END  PayrollCategory,\n  \n   \n   sum(hours) - COALESCE((SELECT sum(hours) FROM timesheetdata T \n                     WHERE T.employeeid = data.id\n                       AND  T.job  IN (''Vacation'',''Sick'',''Personal'',''Paid Holiday'')          \n                       AND  T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))),0) HoursBilled,\n  (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T \n   WHERE  DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'')\n   AND   T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) HoursInPeriod,\n  (SELECT count(1)*8 FROM publicholidays  PH\n   WHERE  PH.publicholidaydate BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))) as  HolidaysHoursInPeriod,\n\n\n  (SELECT sum(hours)  FROM timesheetdata T \n   WHERE employeeid =   data.id \n   and job IN (''Sick'') \n   AND  T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))))  AS  SickHoursInPeriod,\n    (SELECT sum(hours)  FROM timesheetdata T \n   WHERE employeeid =   data.id \n   and job IN (''Vacation'') \n   AND  T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))))  AS  VacationHoursInPeriod,\n    (SELECT sum(hours)  FROM timesheetdata T \n   WHERE employeeid =   data.id \n   and job IN (''Personal'') \n   AND  T.weekday  BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16'')) AND (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))))  AS  PersonalHoursInPeriod,\n \n \n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid = data.id \n   and job IN (''Paid Holiday'') \n   AND Year(T.weekday) = YEAR(NOW())) AS PaidHolidaysToDate,\n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid =   data.id \n   and job IN (''Sick'') \n   AND Year(T.weekday) = YEAR(NOW())) AS PaidSickDaysToDate,\n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid = data.id \n   and job IN (''Vacation'') \n   AND Year(T.weekday) = YEAR(NOW())) AS PaidVacationDaysToDate,\n  (SELECT sum(hours)/8 FROM timesheetdata T \n   WHERE employeeid = data.id \n   and job IN (''Personal'') \n   AND Year(T.weekday) = YEAR(NOW())) AS PaidPersonalDaysToDate,  \n   CASE  \n      WHEN\n        ID IN (55)  \n      THEN\n        rate\n      ELSE\n        "On File"\n   END AS rate \n from  \n  (SELECT \n   E.id, \n   E.salutation, \n   E.username, \n   E.firstname, \n   E.lastname,\n   E.employeetype,\n   E.isactive,\n   E.status,\n   TD.weekday ,\n   hours,\n   TD.jobid,\n   CASE  \n      WHEN  TD.jobid < 0    then TD.job else TD.jobcode \n   END as jobcode, \n   TD.job,\n   CASE  \n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \n                                 AND RT.employeeid = TD.employeeid AND (jobid is NULL or jobid = 0))\n      ELSE  rate\n \n   END  AS Rate \n\n  FROM   timesheetdata AS TD INNER JOIN employee as E    \n  on  (TD.employeeid = E.id  ) \n\n\n  LEFT  OUTER JOIN rate AS R\n  ON (TD.employeeid = R.employeeid    AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\n\n  where   E.isactive = "Y"\n    AND  TD.weekday    BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16'')) \n                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))) \n    AND  TD.hours > 0\n    AND employeetype <> ''Contractor'' \n\n\n   ) AS data\nGROUP BY\n   id, \n   salutation, \n   username, \n   firstname, \n   lastname,\n   employeetype,\n   jobcode,\n   rate\n) AS payroll\nwhere id not in (60,134,64,92,91,103,104,138,55,97,141)\nUNION ALL\nselect \n   ''TSG525'',\n   ''Mr'', \n   ''Tony'', \n   ''Zanfardino'',\n   ''Hourly'',\n   ''0735-7956'' ,\n   concat(CAST( (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-16''))  AS CHAR(10)  ), '' - '',CAST((SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month))) AS CHAR(10))) AS PayrollPeriod,\n   ''           ''   Checkdate,\n\n   ''HOURLY'',\n   ''G&A'',\n    7.00,\n    72.00,\n    '''',\n    0 \nORDER by\n   employeetype,\n   PayrollCategory,\n   lastname,\n   HoursWorked     \n\n', '', '2012-09-21 17:00:30', 80, NULL, 80, 1, 1, '0|1', '2038-01-01', 'N', '0000-00-00'),
(131, 'MGMT-TUNING-INDEX', 'MGMT-TUNING-INDEX', 'CREATE INDEX EmpId ON employee(id);\nCREATE INDEX EmpId ON timesheet(employeeid);\nCREATE INDEX EmpId ON timesheetdata(employeeid);\nCREATE INDEX EmpId ON rate(employeeid);\nCREATE INDEX EmpId ON employeerelationship(employeeid);\nCREATE INDEX EmpIdJobContract ON employeerelationship(employeeid,jobnumber,ponumber,contract);\nCREATE INDEX EmpIdWeekDay ON timesheetdata(employeeid,weekday);\nCREATE INDEX EmpIdJobNumber ON timesheetdata(employeeid,jobid);\nCREATE INDEX EmpGroup ON employeegroup(invoicecategory);\nCREATE INDEX TimesheetId ON timesheet(id);\nCREATE INDEX TimesheetDataId ON timesheetdata(timesheetid);\nCREATE INDEX ProjectIds ON project(id);', '', '2012-08-17 18:09:45', 80, NULL, 80, 0, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(132, 'MGMT-DeleteDemoData', 'MGMT-DeleteDemoData', 'select * from employee where id in (165,162);\ndelete from timesheet where employeeid in (165,162);\ndelete from timesheetdata where employeeid in (165,162);\n', '', '2012-08-20 10:13:23', 80, NULL, 80, 0, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(133, 'MGMT-QB-P&LByJob', '', 'SELECT LABEL, `999999999BAHTEMPPROJECTBAH`, TOTALBAH, B1M20600402NCEZID0CIMS, B1M206044DOCUMENTATIONCIMS, B1M20606604PUBLICACCESSDEVELOPMENT0CIMS, B1M20608506DFWEDDBMDNARMS0CIMS, B1M206086006DFWEDDBMDNORS0CIMS, B1M206237PROGRAMSUPPORTCIMS, B1M206275EHARS40DEVCIMS, B1M206276SITETECHNICALSPTCIMS, B1M206279EHARS40TESTINGCIMS, B1M206280PROJGOVERNANCECIMS, B1M206281REQUIREMENTSCIMS, B1M206284DATAFLUXCIMS, B1M206284TESTINGCIMS, B1M206286GATOMJCONVERSIONCIMS, B1M20628940PROJGOVERNANCECIMS, B1M20659002NCEZIDDIVSCIENTIFICRES1CIMS, B1M20659702NCEZIDSCIENTIFICPGM1CIMS, B1M206656006DFWEDDBMDNORS1CIMS, B1M206681DOCUMENTATIONCIMS, B1M20676414DTBECRBGENERALDATAMGMT1CIMS, TOTALCIMS, B109X8197DISS064BIOSENSESUPPORT5CITS, B109X8205DISS064H1N15CITS, B109X8220DISS064PHINDIR5CITS, B109X8221PHINMSCITS, B109X8296PHINDIRCITS, B109X8297PHINMS6CITS, TOTALCITS, `10130501LIBRARYKNOWLEDGEMANAGEMENTDBMOBIS`, `10130501LIBRARYKNOWLEDGEMANAGEMENTDBMOBIS0`, `10130502LIBRARYKNOWLEDGEMANAGEMENTDBMOBIS`, TOTALDBMOBIS, B1P084008DTRATESTSUPPORTDTRA, B1P084010DTRACONSULTANTSUPPORTDTRA, TOTALDTRA, SASCONF001SASCONFIGURATIONMEDIMMUNE, SASCONF002SASCONFIGURATIONMEDIMMUNE, SASMIGR001SASMIGRATIONMEDIMMUNE, TOTALMEDIMMUNE, GATECHSOFT, TOTALTECHSOFT, TOTAL, RowType, RowDataType, RowDataValue\nFROM TSGBOMSPRODQB.PROFITANDLOSSBYJOB\n ', '', '2012-08-25 10:51:27', 80, NULL, 80, 0, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(134, 'Test First Working Day of Mont', 'Test First Working Day of Month', 'select * from taskcodes', '', '2012-09-28 11:36:40', 80, NULL, 80, 1, 1, '0|4', '2038-01-01', 'Y', '2013-09-02');
INSERT INTO `customreport` (`id`, `title`, `description`, `querystring`, `category`, `datecreated`, `createdby`, `lastupdatedon`, `lastupdatedby`, `issendemail`, `isactive`, `expirytype`, `expirydate`, `postpone`, `date`) VALUES
(135, 'MGMT - AgencyDailyReplication', 'Replicate Agency Data but do not invoice with it', ' \n\n-- 61,63 Renu and Kesari\n-- Jobid must be updated across due to compatability to views like:\n-- SELECT * FROM v_timesheetdata_all_rates \n-- WHERE     monthname = "September" AND `year` = ''2012''\n-- SELECT * FROM v_timesheetdata_without_benefits\n-- WHERE     monthname = "September" AND `year` = ''2012''\n-- \nDROP TABLE if EXISTS E;\nDROP TABLE if EXISTS T;\nDROP TABLE if EXISTS TD;\nDROP TABLE if EXISTS R;\nDROP TABLE if EXISTS RT;\n\n \n\n\nDROP TABLE if EXISTS P;\nDELETE FROM employee      WHERE invoicecategory="AGENCY";\nDELETE FROM timesheet     WHERE comments="AGENCY";\nDELETE FROM timesheetdata WHERE jobcode="AGENCY";\nDELETE FROM employeerelationship WHERE contract=''AGENCY'';\nDELETE FROM project WHERE projectcategory="AGENCY";\nCREATE TABLE E AS SELECT   * FROM employee WHERE  id IN (63);\nUPDATE E SET id=id*-1, invoicecategory="AGENCY",username=concat(''AGENCY'',id),emailaddress=concat(''AGENCY'',id),\n           companyid=16,lastname=""; -- KWC\n \nCREATE TABLE TD SELECT * FROM timesheetdata WHERE employeeid IN (63) \n                           AND  weekday BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-01'')) \n                                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)));\n \nCREATE TABLE T  SELECT T.* FROM timesheet T WHERE   id IN (SELECT timesheetid FROM TD);\n\nCREATE TABLE R AS SELECT * FROM employeerelationship WHERE employeeid IN (63);\nUPDATE T  SET id=id*-1, employeeid=employeeid*-1 ;\nUPDATE TD SET timesheetdataid=timesheetdataid*-1, employeeid=employeeid*-1,timesheetid=timesheetid*-1;\nUPDATE R  SET id=id*-1, employeeid=employeeid*-1, contract=''AGENCY'',jobid=jobid*-1;\nCREATE TABLE RT AS SELECT * FROM rate WHERE employeeid IN (63);\nUPDATE RT  SET id=id*-1, employeeid=employeeid*-1; \nCREATE TABLE P AS SELECT * FROM project WHERE jobcode IN (SELECT DISTINCT jobcode FROM TD);\n\nUPDATE P SET projectcategory="AGENCY",id=id*-1;\nUPDATE TD SET jobid=jobid*-1;\nUPDATE T SET comments="AGENCY";\nUPDATE TD SET comment="AGENCY";\nUPDATE P SET jobcode="AGENCY",title=''AGENCY'';\nUPDATE TD SET jobcode="AGENCY",job=''AGENCY'';\nUPDATE R SET jobnumber="AGENCY";\n\nINSERT INTO employee SELECT * FROM E;\nINSERT INTO timesheet SELECT * FROM T;\nINSERT INTO timesheetdata SELECT * FROM TD;\nINSERT INTO employeerelationship SELECT * FROM R;\nINSERT INTO project SELECT * FROM P;\n \nUPDATE employee SET companyid=16  WHERE invoicecategory=''AGENCY'';\nUPDATE employee SET companyid=16  WHERE username="TSG888";\n  SELECT employeeid,weekday, sum(hours) FROM timesheetdata WHERE employeeid < 1\n                           AND  weekday BETWEEN  (SELECT DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -1 month) ,''%Y-%m-01'')) \n                                           AND  (SELECT  LAST_DAY(DATE_ADD(NOW(), INTERVAL -1 month)))\n group by employeeid,weekday;', 'TECHSOFT', '2013-08-01 20:30:47', 80, NULL, 80, 1, 1, '0|0', '2013-08-02 00:00:00', 'N', '0000-00-00'),
(137, 'IDASH-Labor Import ', 'Used to generate the labor import data for the system', '\r\nSELECT \r\nT.tsgbadgenumber, T.laborcategory, T.periodending, T.thekey, T.firstname, T.lastname, T.blccode, T.currenthours, T.jobcode, T.rate, T.monthenddate, T.monthstartdate, T.contract, T.ponumber, T.ponumber AS task, T.taskcode, T.poline, T.uniq \r\n\r\nFROM\r\n(\r\n\r\nSELECT ET.*,\r\n(SELECT MAX(rate) FROM rate WHERE employeeid=ET.employeeid AND DATE(ET.weekday) BETWEEN effectivedate AND expirydate) AS \r\n\r\nrate,\r\nSUM(ET.hours) AS currenthours,\r\n(SELECT MAX(laborpoline) FROM project WHERE jobcode=ET.jobcode AND (DATE(expirydate) >= DATE(ET.relationshipenddate) || \r\n\r\nexpirydate IS NULL)) AS poline \r\nFROM\r\n(\r\n SELECT \r\n ER.contract, \r\n ER.contract AS laborcategory, \r\n  ER.ponumber, \r\n ER.jobid, \r\n  ER.employeeid,\r\n  E.firstname,\r\n  E.lastname,\r\n E.tsgbadgenumber,\r\n E.blccode,\r\n  CONCAT(E.firstname,'' '',E.lastname,''-'',td.jobcode) AS thekey,\r\n  DATE_FORMAT(''_MONTHSTARTDATE_'',''%d-%b-%y'') AS monthstartdate,\r\n DATE_FORMAT(''_MONTHENDDATE_'',''%d-%b-%y'') AS monthenddate,\r\n ER.taskcode, \r\n ER.relationshipstartdate,\r\n ER.relationshipenddate,\r\n td.jobcode, \r\n  td.weekday, \r\n  td.account, \r\n  td.hours, \r\n  ts.weekendingdate,\r\n  DATE_FORMAT(ts.weekendingdate,''%d-%b-%y'') AS periodending,\r\n  DATE_FORMAT(ts.weekendingdate,''%M'') AS month,\r\n DATE_FORMAT(ts.weekendingdate,''%Y'') AS year\r\n \r\n  FROM  timesheet ts, timesheetdata td\r\n  LEFT JOIN employeerelationship ER ON (td.jobcode = ER.jobnumber AND td.employeeid=ER.employeeid)\r\n  LEFT JOIN employee E ON (E.id=ER.employeeid)  \r\n  \r\n  WHERE \r\n  ts.id=td.timesheetid\r\n  AND ts.status = ''Approved''\r\n  AND td.weekday BETWEEN  DATE(''_MONTHSTARTDATE_'') and DATE(''_MONTHENDDATE_'')\r\n AND td.weekday BETWEEN  ER.relationshipstartdate AND ER.relationshipenddate \r\n  AND ER.jobid IN (select distinct jobid from timesheetdata where employeeid=ER.employeeid and weekday between DATE\r\n\r\n(''_MONTHSTARTDATE_'') and DATE(''_MONTHENDDATE_''))\r\n AND td.hours > 0\r\n) ET \r\n\r\nGROUP BY ET.jobcode, ET.account, ET.employeeid\r\n\r\n) T \r\n\r\nWHERE _PROJECTCATEGORYCONDITION__PERIODCONDITIONS_ T.rate > 0 \r\nORDER BY T.employeeid ,taskcode desc', '', '2012-10-12 17:01:22', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(138, 'MGMT-EmployeeGroups', '', 'alter table timesheetdata modify account VARCHAR(30) ;\n--- INSERT INTO  employeegroup (name, description, groupby, employeetype, invoicecategory, laborcategory, jobnumber, laborimportcategory, network, costcenter, createdby, datecreated, lastupdatedby, lastupdatedate, activity, active, task, effectivedate, expirydate, currentflag)\nVALUES (''MarySmith'', ''MarySmith'', ''Dynamic'', ''All'', ''MarySmith'', ''MarySmith'', '''', '''', '''', '''', 80, now(), NULL, NULL, '''', ''Active'', '''', now(), NULL, ''Y'');\nSELECT * FROM employeegroup;\nupdate timesheetdata set account=''MarySmith''\nwhere account=''MaryS'';\nupdate timesheetdata set account=''MedImmune''\nwhere account=''MedIm'';\n\n---select * from timesheetdata where employeeid=170;\nselect * from timesheetdata WHERE account LIKE "Medi%";', '', '2012-10-25 19:58:34', 80, NULL, 80, 0, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(139, 'IDASH - LastweekBillingAll', 'Gets last week invoicingdata', 'SELECT RPT.*, RPT.currenthours*RPT.rate as billingamt, RPT.Contract AS contract from \r\n\r\n(SELECT TD.id, salutation, username, firstname, lastname, employeetype, isactive, status, Month, (SELECT max(taskcode) FROM employeerelationship RL WHERE\r\nRL.jobnumber = TD.jobcode and RL.employeeid = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate AND jobid IN (select distinct\r\njobid from timesheetdata where employeeid=TD.employeeid and weekday between (SELECT Adddate( now(), - ( DAYOFWEEK(now() ) +5 ) )    ) and (SELECT Adddate( now(), - (DAYOFWEEK( now() )-1)  )))) AS taskcode, (SELECT max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber =\r\nTD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS ponumber, (SELECT max(projectcategory) FROM project\r\nPR where PR.jobcode = TD.jobcode AND ((SELECT DATEDIFF(PR.expirydate, TD.weekday)) > 0 || (PR.expirydate IS NULL AND\r\n\r\nPR.actualstartdate IS NOT NULL))) AS Contract, TD.jobid, TD.jobcode, TD.job, sum(hours) AS currenthours, CASE WHEN ((R.jobid is NULL or R.jobid = 0)) THEN\r\n(SELECT max(contractorrate) FROM rate RT WHERE TD.weekday BETWEEN effectivedate AND expirydate AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0)) ELSE\r\ncontractorrate END AS Contractorrate, CASE WHEN ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT WHERE TD.weekday BETWEEN effectivedate AND\r\nexpirydate AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0)) ELSE rate END AS rate FROM (SELECT E.id, E.salutation, E.username, E.firstname,\r\nE.lastname, E.employeetype, E.isactive, E.status, TD.jobid, TD.employeeid, monthname(TD.weekday) AS Month, TD.job, TD.jobcode, DATE_ADD(TD.weekday,INTERVAL 1\r\nSECOND) as weekday, sum(hours) AS hours FROM timesheetdata TD , employee E WHERE TD.employeeid = E.id AND TD.weekday BETWEEN ( SELECT Adddate( now(), - ( DAYOFWEEK(now() ) +5 ) )    ) AND (SELECT Adddate( now(), - (DAYOFWEEK( now() )-1)  )) AND TD.paycode in (''RT'',''OT'') AND TD.hours > 0 GROUP BY E.id,\r\nE.salutation, E.username, E.firstname, E.lastname, E.employeetype, E.isactive, TD.weekday, TD.jobid, TD.job, TD.jobcode, E.status) AS TD LEFT OUTER JOIN rate AS\r\nR ON (TD.id = R.employeeid AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid) GROUP BY Month, TD.id, salutation, username, firstname,\r\nlastname, employeetype, isactive, status, Contractorrate, TD.jobid, TD.job, Rate ORDER BY Month, Contract, jobid, employeetype DESC)\r\n\r\nas RPT', '', '2012-10-19 23:08:45', 110, NULL, 110, 0, 0, '', '', 'N', '0000-00-00'),
(140, 'RECON-Last Week Billing', 'Run after the 1st - Check Last week Numbers', 'SELECT \r\n   TD.id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   isactive,\r\n   status,\r\n   Month,\r\n   (SELECT  max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber,\r\n   (SELECT  max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND ((SELECT DATEDIFF(PR.expirydate, TD.weekday)) > 0 || (PR.expirydate IS NULL AND \r\n\r\nPR.actualstartdate IS NOT NULL))) AS Contract,   \r\n   TD.jobid, \r\n   TD.jobcode,\r\n   TD.job,\r\n   sum(hours) TotalHours, \r\n    CASE  \r\n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(contractorrate) FROM rate RT \r\n                                 WHERE  TD.weekday BETWEEN effectivedate AND expirydate \r\n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\r\n      ELSE contractorrate\r\n    \r\n   END  AS Contractorrate,   \r\n   CASE  \r\n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \r\n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \r\n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\r\n      ELSE  rate\r\n \r\n   END  AS Rate \r\n FROM \r\n (SELECT \r\n  E.id, \r\n  E.salutation, \r\n  E.username, \r\n  E.firstname, \r\n  E.lastname,\r\n  E.employeetype,\r\n  E.isactive,\r\n  E.status,\r\n  TD.jobid,\r\n  monthname(TD.weekday) AS Month,\r\n  TD.job,\r\n  TD.jobcode,\r\n  DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, \r\n    \r\n  sum(hours) AS hours \r\nFROM timesheetdata  TD , employee   E    \r\nWHERE   TD.employeeid = E.id  \r\n     \r\n    AND  TD.weekday    BETWEEN  (SELECT Adddate( now(), - ( DAYOFWEEK(now() ) +5 ) )) \r\n                           AND  (SELECT Adddate( now(), - (DAYOFWEEK( now() )-1)  )) \r\n    AND  TD.paycode in (''RT'',''OT'')\r\n    AND  TD.hours > 0\r\nGROUP BY \r\n  E.id, \r\n  E.salutation, \r\n  E.username, \r\n  E.firstname, \r\n  E.lastname,\r\n  E.employeetype,\r\n  E.isactive,\r\n  TD.weekday,\r\n  TD.jobid,\r\n  TD.job,\r\n  TD.jobcode,\r\n  E.status) AS TD \r\n  LEFT  OUTER JOIN rate AS R\r\n  ON (TD.id = R.employeeid  \r\n  AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\r\nGROUP BY\r\n   Month,\r\n   TD.id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   isactive,\r\n   status,\r\n   Contractorrate,\r\n     TD.jobid, \r\n   TD.job,\r\n   Rate\r\nORDER BY \r\n   Month,\r\n   Contract,\r\n   jobid,\r\n   employeetype DESC', '', '2012-10-17 19:07:12', 110, '2012-10-17 19:07:17', 110, 0, 0, '', '', 'N', '0000-00-00'),
(141, 'IDASH-LM NotApproved', 'Lists the employees who have timesheets not approved for last week', 'SELECT e.id,CONCAT(e.firstname, " ",e. lastname) AS names,e.tsgbadgenumber,tb.task,tb.taskcode, SUM(hours) AS currenthours,jobcode, e.employeetype,\r\n   e.emailaddress, e.personalemailaddress, officeline1,t.`status`, DATE_FORMAT(t.weekendingdate, ''%d-%b-%y'') AS periodending, DATE_FORMAT(''_ENDDATE_'',''%d-%b-%y'')\r\n   AS monthenddate, DATE_FORMAT(''_STARTDATE_'',''%d-%b-%y'') AS monthstartdate, t.id as tsid FROM employee AS e LEFT JOIN timesheet AS t ON t.employeeid = e.id LEFT\r\n   JOIN v_timesheetdata_without_benefits_new tb ON t.id=tb.timesheetid WHERE laborcategory != '''' AND e.isadmin= ''N'' AND t.payrollprocessed = ''N'' AND (t.`status`\r\n   = ''Saved'' OR t.`status` = ''Submitted'' OR t.`status` = ''Rejected'') AND (to_days(t.weekendingdate) BETWEEN to_days(''_STARTDATE_'') AND to_days(''_ENDDATE_''))\r\n   GROUP BY e.id, jobcode ORDER BY t.status,e.id ASC', '', '2012-10-17 19:13:12', 110, NULL, 110, 0, 0, '', '', 'N', '0000-00-00'),
(142, 'IDASH-LW Saved', 'Lists the employees who have saved the timesheets for last week', 'SELECT e.id,CONCAT(e.firstname, " ",e. lastname)\r\n        AS names,e.tsgbadgenumber,tb.task,tb.taskcode, SUM(hours) \r\n        AS currenthours,jobcode, e.employeetype, e.emailaddress, e.personalemailaddress, officeline1,t.`status`, \r\n        DATE_FORMAT(t.weekendingdate, ''%d-%b-%y'') AS periodending, DATE_FORMAT(''_ENDDATE_'',''%d-%b-%y'') AS monthenddate,\r\n        DATE_FORMAT(''_STARTDATE_'',''%d-%b-%y'') AS monthstartdate, t.id as tsid \r\n        FROM employee AS e LEFT JOIN timesheet AS t ON t.employeeid = e.id LEFT \r\n        JOIN v_timesheetdata_without_benefits_new tb ON t.id=tb.timesheetid WHERE laborcategory != '''' AND e.isadmin= ''N'' \r\n        AND t.payrollprocessed = ''N'' AND (t.`status` = ''Saved'') AND ((t.weekendingdate)\r\n                BETWEEN (SELECT Adddate( now(), - ( DAYOFWEEK(now() ) +5 ) )) \r\n                AND (SELECT Adddate( now(), - (DAYOFWEEK( now() )-1)  ))) GROUP BY e.id, jobcode ORDER BY t.status,e.id ASC\r\n\r\n', '', '2012-10-17 19:25:57', 110, NULL, 110, 0, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(143, 'sfdrg', 'Run after the 1st - Last week Missing TimeSheets ', 'SELECT Base.* \r\nFROM  \r\n  (SELECT * from\r\n  (SELECT     \r\n   E.id, E.salutation, E.username, E.firstname, \r\n   E.lastname,CONCAT(E.firstname, " ",E. lastname) AS names,E.emailaddress,E.personalemailaddress, E.employeetype, E.isactive         \r\n  FROM  employee as  E \r\n   where E.status = ''Active'' AND username \r\n   NOT IN (''fryawe'',''akirunda'',''administrator'',''TSGADMINDL'')) AS E,              \r\n   \r\n  (SELECT  DISTINCT weekendingdate \r\n  FROM timesheet AS TD                          \r\n  WHERE  TD.weekendingdate  BETWEEN  (SELECT Adddate( now(), - ( DAYOFWEEK(now() ) +5 ) )) \r\n                           AND  (SELECT Adddate( now(), - (DAYOFWEEK( now() )-1)  ))) AS W  ) AS Base    \r\n\r\n LEFT OUTER JOIN \r\n \r\n (SELECT  employeeid,weekendingdate \r\n FROM timesheet  TD                          \r\n WHERE  TD.weekendingdate  BETWEEN  (SELECT Adddate( now(), - ( DAYOFWEEK(now() ) +5 ) )) \r\n                           AND  ( SELECT Adddate( now(), - (DAYOFWEEK( now() )-1)  ))) AS Actual\r\n                                               \r\n ON (Actual.employeeid = Base.id AND Actual.weekendingdate = Base.weekendingdate)  \r\n WHERE   Actual.weekendingdate IS NULL\r\n ORDER BY lastname,Actual.weekendingdate\r\n', '', '2012-10-17 19:38:52', 110, NULL, 110, 0, 1, '0|4', '2038-01-01', 'N', '0000-00-00'),
(144, 'IDASH - LastweekBillingGrp', 'For invoicing RECON - Group by Contract.', 'select RPT.Month AS billedmonth, RPT.Contract AS billedcontract, sum(RPT.TotalHours) AS billedhours, sum(RPT.TotalHours*RPT.Rate) AS billedamount from \r\n(SELECT \r\n   TD.id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   isactive,\r\n   status,\r\n   Month,\r\n   (SELECT  max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber,\r\n   (SELECT  max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND ((SELECT DATEDIFF(PR.expirydate, TD.weekday)) > 0 || (PR.expirydate IS NULL AND PR.actualstartdate IS NOT NULL))) AS Contract,   \r\n   TD.jobid, \r\n   TD.jobcode,\r\n   TD.job,\r\n   sum(hours) TotalHours, \r\n    CASE  \r\n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(contractorrate) FROM rate RT \r\n                                 WHERE  TD.weekday BETWEEN effectivedate AND expirydate \r\n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\r\n      ELSE contractorrate\r\n    \r\n   END  AS Contractorrate,   \r\n   CASE  \r\n      WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT \r\n                                 WHERE  TD.weekday  BETWEEN effectivedate AND expirydate \r\n                                 AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0))\r\n      ELSE  rate\r\n \r\n   END  AS Rate \r\n FROM \r\n (SELECT \r\n  E.id, \r\n  E.salutation, \r\n  E.username, \r\n  E.firstname, \r\n  E.lastname,\r\n  E.employeetype,\r\n  E.isactive,\r\n  E.status,\r\n  TD.jobid,\r\n  monthname(TD.weekday) AS Month,\r\n  TD.job,\r\n  TD.jobcode,\r\n  DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, \r\n    \r\n  sum(hours) AS hours \r\nFROM timesheetdata  TD , employee   E    \r\nWHERE   TD.employeeid = E.id  \r\n     \r\n    AND  TD.weekday    BETWEEN  (SELECT Adddate( now(), - ( DAYOFWEEK(now() ) +5 ) )) \r\n                           AND  (SELECT Adddate( now(), - (DAYOFWEEK( now() )-1)  )) \r\n    AND  TD.paycode in (''RT'',''OT'')\r\n    AND  TD.hours > 0\r\nGROUP BY \r\n  E.id, \r\n  E.salutation, \r\n  E.username, \r\n  E.firstname, \r\n  E.lastname,\r\n  E.employeetype,\r\n  E.isactive,\r\n  TD.weekday,\r\n  TD.jobid,\r\n  TD.job,\r\n  TD.jobcode,\r\n  E.status) AS TD \r\n  LEFT  OUTER JOIN rate AS R\r\n  ON (TD.id = R.employeeid  \r\n  AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\r\nGROUP BY\r\n   Month,\r\n   TD.id, \r\n   salutation, \r\n   username, \r\n   firstname, \r\n   lastname,\r\n   employeetype,\r\n   isactive,\r\n   status,\r\n   Contractorrate,\r\n     TD.jobid, \r\n   TD.job,\r\n   Rate\r\nORDER BY \r\n   Month,\r\n   Contract,\r\n   jobid,\r\n   employeetype DESC ) as RPT\r\ngroup by \r\nRPT.Month, RPT.Contract ', '', '2012-10-17 19:46:52', 110, NULL, 110, 0, 0, '', '', 'N', '0000-00-00'),
(145, 'IDASH - LastweekTotalRealHrs', 'Total Hours (REAL - RT) in Timesheet data.', 'SELECT sum(hours) AS totalrthrs FROM timesheetdata WHERE paycode = ''RT'' AND hours > 0 \r\nAND weekday BETWEEN  ( SELECT Adddate( now(), - ( DAYOFWEEK(now() ) +5 ) )) \r\n        AND  (SELECT Adddate( now(), - (DAYOFWEEK( now() )-1)  ))\r\n', '', '2012-10-17 19:52:00', 110, NULL, 110, 0, 0, '', '', 'N', '0000-00-00'),
(146, 'IDASH - LastweekTotalHoliday', 'Total Hours (HOLIDAY - HT) in Timesheet data.', 'SELECT SUM(hours) AS totalhthrs FROM timesheetdata WHERE paycode = ''HT'' AND weekday BETWEEN  \r\n( SELECT Adddate( now(), - ( DAYOFWEEK(now() ) +5 ) ))  AND  (SELECT Adddate( now(), - (DAYOFWEEK( now() )-1)  ))', '', '2012-10-17 19:57:05', 110, NULL, 110, 0, 0, '', '', 'N', '0000-00-00'),
(147, 'IDASH - LastMonthsTotalSickHrs', 'Total Hours (SICK - ST) in Timesheet data.', '\r\nSELECT SUM(hours) AS totalsthrs FROM timesheetdata WHERE paycode = ''ST'' AND weekday BETWEEN ( SELECT Adddate( now(), - ( DAYOFWEEK(now() ) +5 ) ))\r\n        AND (SELECT Adddate( now(), - (DAYOFWEEK( now() )-1)  ))', '', '2012-10-17 20:07:27', 110, NULL, 110, 0, 0, '', '', 'N', '0000-00-00'),
(148, 'IDASH - RECON-AsOfDate JNsVsPr', 'Copy of RECON-AsOfDate JNsVsPrevious query with field name Hours changed', 'select cur.*, (SELECT max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = cur.jobcode and cur.id = RL.employeeid AND now() BETWEEN\r\nrelationshipstartdate AND relationshipenddate) AS PONumber, (SELECT sum(hours) AS hours FROM timesheetdata TD WHERE cur.jobcode = TD.jobcode AND cur.id =\r\nTD.employeeid AND TD.weekday BETWEEN (select adddate(curdate(), INTERVAL 2-DAYOFWEEK(curdate()) DAY)) AND (SELECT Adddate( now(), - (DAYOFWEEK( now() )-1)  )) AND TD.paycode in (''RT'',''OT'')) AS HoursWorked from\r\n(SELECT distinct monthname(TD.weekday) as month,E.id, E.salutation, E.username, E.firstname, E.lastname, TD.job, TD.jobcode FROM timesheetdata TD, employee E\r\nWHERE TD.employeeid = E.id and TD.hours > 0 AND TD.weekday BETWEEN ( select adddate(curdate(), INTERVAL 2-DAYOFWEEK(curdate()) DAY) ) AND (select adddate(curdate(), INTERVAL 8-DAYOFWEEK(curdate()) DAY))) as cur left outer join (SELECT distinct monthname(TD.weekday) as month, E.id, E.salutation, E.username,\r\nE.firstname, E.lastname, TD.job, TD.jobcode FROM timesheetdata TD, employee E WHERE TD.employeeid = E.id and TD.hours > 0 AND TD.weekday BETWEEN ( SELECT Adddate( now(), - ( DAYOFWEEK(now() ) +5 ) ) ) AND (  SELECT Adddate( now(), - (DAYOFWEEK( now() )-1)  ))) as prev on (cur.id =\r\nprev.id and cur.jobcode=prev.jobcode) where (cur.jobcode is NULL or prev.jobcode is NULL)    ', '', '2012-10-19 16:02:25', 110, NULL, 110, 0, 0, '', '', 'N', '0000-00-00'),
(149, 'IDASH-RECON-LWeek Overtime', 'Run after the 1st - Employees with OT in the invoicing period', 'SELECT id, salutation, username, firstname, lastname, employeetype, isactive, status, Month, PayrollCategory, HoursWorked, HoursBilled, HoursInPeriod,\r\n\r\nHolidaysHoursInPeriod, COALESCE(PaidHolidaysToDate,0) AS PaidHolidaysToDate, COALESCE(PaidSickDaysToDate,0) AS PaidSickDaysToDate,\r\n\r\nCOALESCE(PaidVacationDaysToDate,0) AS PaidVacationDaysToDate, COALESCE(PaidPersonalDaysToDate,0) AS PaidPersonalDaysToDate FROM (SELECT E.id, E.salutation,\r\n\r\nE.username, E.firstname, E.lastname, E.employeetype, E.isactive, E.status, monthname(TD.weekday) AS Month, DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday,\r\n\r\n(SELECT max(status) FROM timesheet T WHERE E.id = T.employeeid and T.weekendingdate between ( SELECT Adddate( now(), - ( DAYOFWEEK(now() ) +5 ) )  )\r\n\r\nAND (  SELECT Adddate( now(), - (DAYOFWEEK( now() )-1)  )  )) AS TimesheetStatus, sum(hours) HoursWorked, CASE WHEN sum(hours) - (SELECT count(DISTINCT weekday)*8\r\n\r\nFROM timesheetdata T WHERE DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'') AND T.weekday BETWEEN ( SELECT Adddate( now(), - ( DAYOFWEEK(now() ) +5 ) )\r\n\r\n ) AND (SELECT Adddate( now(), - (DAYOFWEEK( now() )-1)  ) )) = 0 AND employeetype IN (''Full Time'' ) THEN ''REGULAR'' WHEN sum(hours) - (SELECT\r\n\r\ncount(DISTINCT weekday)*8 FROM timesheetdata T WHERE DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'') AND T.weekday BETWEEN ( SELECT Adddate( now(), - ( DAYOFWEEK(now() ) +5 ) )\r\n\r\n) AND ( SELECT Adddate( now(), - (DAYOFWEEK( now() )-1)  )   )) < 0 THEN ''HOURLY'' WHEN sum(hours) - (SELECT count(DISTINCT weekday)*8\r\n\r\nFROM timesheetdata T WHERE DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'') AND T.weekday BETWEEN (SELECT Adddate( now(), - ( DAYOFWEEK(now() ) +5 ) )\r\n\r\n) AND (SELECT Adddate( now(), - (DAYOFWEEK( now() )-1)  ))) > 0 AND employeetype IN (''Full Time'' ) THEN ''REGULAR WITH OVERTIME'' ELSE ''HOURLY'' END\r\n\r\nPayrollCategory, sum(hours) - COALESCE((SELECT sum(hours) FROM timesheetdata T WHERE T.employeeid = E.id AND T.job IN (''Vacation'',''Sick'',''Personal'',''Paid\r\n\r\nHoliday'') AND T.weekday BETWEEN (SELECT Adddate( now(), - ( DAYOFWEEK(now() ) +5 ) )) AND (SELECT Adddate( now(), - (DAYOFWEEK( now() )-1)  )\r\n\r\n)),0) HoursBilled, (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T WHERE DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'') AND T.weekday BETWEEN\r\n\r\n( SELECT Adddate( now(), - ( DAYOFWEEK(now() ) +5 ) )) AND (  SELECT Adddate( now(), - (DAYOFWEEK( now() )-1)  )  )) HoursInPeriod, (SELECT count(1)*8\r\n\r\nFROM publicholidays PH WHERE PH.publicholidaydate BETWEEN (SELECT Adddate( now(), - ( DAYOFWEEK(now() ) +5 ) ) ) AND (\r\n\r\n  SELECT Adddate( now(), - (DAYOFWEEK( now() )-1)  )   )) as HolidaysHoursInPeriod, (SELECT sum(hours)/8 FROM timesheetdata T WHERE employeeid = E.id and job IN (''Paid\r\n\r\nHoliday'') AND Year(T.weekday) = ''2010'') AS PaidHolidaysToDate, (SELECT sum(hours)/8 FROM timesheetdata T WHERE employeeid = E.id and job IN (''Sick'') AND\r\n\r\nYear(T.weekday) = ''2010'') AS PaidSickDaysToDate, (SELECT sum(hours)/8 FROM timesheetdata T WHERE employeeid = E.id and job IN (''Vacation'') AND Year(T.weekday) =\r\n\r\n''2010'') AS PaidVacationDaysToDate, (SELECT sum(hours)/8 FROM timesheetdata T WHERE employeeid = E.id and job IN (''Personal'') AND Year(T.weekday) = ''2010'') AS\r\n\r\nPaidPersonalDaysToDate FROM timesheetdata TD , employee E WHERE TD.employeeid = E.id AND E.isactive = "Y" AND TD.weekday BETWEEN (SELECT Adddate( now(), - ( DAYOFWEEK(now() ) +5 ) )\r\n\r\n) AND ( SELECT Adddate( now(), - (DAYOFWEEK( now() )-1)  )) AND TD.hours > 0 GROUP BY E.id,\r\n\r\nE.salutation, E.username, E.firstname, E.lastname, E.employeetype, E.isactive, E.status ) AS TD WHERE HoursWorked > HoursInPeriod GROUP BY id, salutation,\r\n\r\nusername, firstname, lastname, employeetype, isactive, status, Month ORDER BY Month, employeetype, lastname DESC', '', '2012-10-19 16:49:08', 110, NULL, 110, 0, 0, '', '', 'N', '0000-00-00'),
(150, 'IDASH-AgingReportByJN', 'Showing a break down of the amounts billed from Labor, Travel and ODC by Job Number and PO Number', '(SELECT C.id, C.invoicenumber AS "Invoice Number", B.id AS employeeid, B.PONumber AS "PO Number", B.jobcode AS "Job Number", B.Month AS "Invoice Month",\r\nDATE_FORMAT(C.invoicedate, ''%m/%d/%Y'') AS "Invoice Date", TotalHours AS "Total Hours", sum(TotalHours*rate) AS "Total Amount", A.amountpaid, A.status AS "Payment\r\nStatus", A.comments AS "Update Message", ''LABOR'' AS InvoiceType, B.Contract, C.invoiceyear FROM (SELECT (SELECT max(ponumber) FROM employeerelationship RL WHERE\r\nRL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber, (SELECT\r\nmax(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND ((SELECT DATEDIFF(PR.expirydate, TD.weekday)) > 0 || (PR.expirydate IS NULL AND\r\nPR.actualstartdate IS NOT NULL))) AS Contract, TD.id, salutation, username, firstname, lastname, Month, Year, TD.jobid, TD.jobcode, SUM(hours) AS TotalHours,\r\nCASE WHEN ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT WHERE TD.weekday BETWEEN effectivedate AND expirydate AND RT.employeeid = TD.id\r\nAND (jobid is NULL or jobid = 0)) ELSE rate END AS Rate FROM (SELECT E.id, E.salutation, E.username, E.firstname, E.lastname, E.employeetype, E.isactive,\r\nE.status, TD.jobid, monthname(TD.weekday) AS Month, year(TD.weekday) AS Year, TD.job, TD.jobcode, DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, SUM(hours)\r\nAS hours FROM timesheetdata TD , employee E WHERE TD.employeeid = E.id AND E.isactive = "Y" AND TD.weekday BETWEEN ( SELECT Adddate( now(), - ( DAYOFWEEK(now() ) +5 ) )) AND\r\n(SELECT Adddate( now(), - (DAYOFWEEK( now() )-1)  )) AND TD.paycode in (''RT'',''OT'') AND TD.hours > 0 GROUP BY E.id, E.salutation, E.username, E.firstname,\r\nE.lastname, E.employeetype, E.isactive, TD.weekday, TD.jobid, TD.job, TD.jobcode, E.status) AS TD LEFT OUTER JOIN rate AS R ON (TD.id = R.employeeid AND\r\nTD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid) GROUP BY Month, salutation, username, firstname, lastname, TD.jobid, Rate ORDER BY Month,\r\nYear, Contract, jobid, employeetype DESC) AS B LEFT JOIN c_invoice C ON (monthname(C.startdate) = B.Month AND year(C.startdate) = B.Year AND C.ponumber =\r\nB.PONumber) LEFT JOIN agingstatus A ON (B.Month = A.month AND B.Year = A.invyear AND B.jobcode = A.jobcode AND B.id = A.employeeid AND A.invoicetype = ''labor'')\r\nWHERE ( C.invoicenumber LIKE ''%%'' OR C.invoicedate LIKE ''%%'' OR B.month LIKE ''%%'' OR A.status LIKE ''%%'' OR A.comments LIKE ''%%'') GROUP BY B.Month, B.Year,\r\nB.Contract, B.PONumber, B.jobcode, B.id) UNION (SELECT '''' AS id, '''' AS ''Invoice Number'', O.employeeid, O.ponumber AS ''PO Number'', O.jobnumber AS ''Job Number'',\r\nmonthname(O.transactiondate) AS ''Invoice Month'', DATE_FORMAT(O.transactiondate, ''%m/%d/%Y'') AS ''Invoice Date'', '''' AS ''Total Hours'', O.amount AS ''Total Amount'',\r\nA.amountpaid, A.status AS ''Payment Status'', A.comments AS ''Update Message'', ''ODC'' AS InvoiceType, O.contract AS Contract, year(O.transactiondate) AS invoiceyear\r\nFROM (SELECT employeeid, ponumber, jobnumber, transactiondate, amount, contract, status, description FROM c_odc WHERE (transactiondate BETWEEN ( SELECT Adddate( now(), - ( DAYOFWEEK(now() ) +5 ) )) AND (SELECT Adddate( now(), - (DAYOFWEEK( now() )-1)  ))) ORDER BY transactiondate DESC) AS O LEFT JOIN c_invoice C ON\r\n(monthname(C.startdate) = monthname(O.transactiondate) AND year(C.startdate) = year(O.transactiondate) AND C.ponumber = O.ponumber) LEFT JOIN agingstatus A ON\r\n(O.ponumber = A.ponumber AND O.jobnumber = A.jobcode AND monthname(O.transactiondate) = A.month AND year(O.transactiondate) = A.invyear AND O.employeeid =\r\nA.employeeid AND A.invoicetype = ''odc'') WHERE (O.description LIKE ''%%'') GROUP BY monthname(O.transactiondate), year(O.transactiondate), O.ponumber, O.jobnumber,\r\nO.employeeid) UNION (SELECT '''' AS id, '''' AS "Invoice Number", T.id AS employeeid, C.ponumber AS ''PO Number'', T.jobnumber AS ''Job Number'', monthname(T.startdate)\r\nAS ''Invoice Month'', '''' AS "Invoice Date", '''' AS "Total Hours", T.currentamount AS ''Total Amount'', A.amountpaid, A.status AS ''Payment Status'', A.comments AS\r\n''Update Message'', ''TRAVEL EXPENSES'' AS InvoiceType, P.projectcategory AS Contract, year(T.startdate) AS invoiceyear FROM (SELECT e.id, e.firstname,\r\ne.lastname,td.purpose, td.jobnumber, td.startdate, td.currentamount, td.status FROM traveldetails AS td INNER JOIN employee AS e ON e.id = td.employeeid WHERE\r\n(td.startdate BETWEEN ( SELECT Adddate( now(), - ( DAYOFWEEK(now() ) +5 ) )) AND (SELECT Adddate( now(), - (DAYOFWEEK( now() )-1)  ))) ORDER BY startdate DESC) AS T LEFT JOIN\r\nc_invoice C ON (monthname(C.startdate) = monthname(T.startdate) AND year(C.startdate) = year(T.startdate) AND C.ponumber = T.jobnumber) LEFT JOIN project P ON\r\n(T.jobnumber = P.jobcode AND P.projectcategory != '''') LEFT JOIN agingstatus A ON (T.jobnumber = A.jobcode AND monthname(T.startdate) = A.month AND\r\nyear(T.startdate) = A.invyear AND T.id = A.employeeid AND A.invoicetype = ''travel'') WHERE (T.purpose LIKE ''%%'') GROUP BY monthname(T.startdate),\r\nyear(T.startdate), C.ponumber, T.jobnumber, T.id)', '', '2012-10-20 16:30:10', 110, NULL, 110, 0, 0, '', '', 'N', '0000-00-00'),
(151, 'IDASH - LastWeekReal', 'Real hours in timesheet data', 'SELECT * FROM timesheetdata WHERE paycode = ''RT'' AND hours > 0 AND weekday \r\n\r\nBETWEEN  (SELECT Adddate( now(), - ( DAYOFWEEK(now() ) +5 ) )) \r\n\r\nAND  (SELECT Adddate( now(), - (DAYOFWEEK( now() )-1)  ))', '', '2012-10-20 18:58:32', 110, NULL, 110, 0, 0, '', '', 'N', '0000-00-00'),
(152, 'IDASH - LastWeekHoliday ', 'Holiday hours in timesheet data', 'SELECT * FROM timesheetdata WHERE paycode = ''HT'' AND hours > 0 AND weekday  \r\n\r\nBETWEEN  (SELECT Adddate( now(), - ( DAYOFWEEK(now() ) +5 ) )) AND  (SELECT Adddate( now(), - (DAYOFWEEK( now() )-1)  ))       ', '', '2012-10-20 19:04:18', 110, NULL, 110, 0, 0, '', '', 'N', '0000-00-00'),
(153, 'IDASH - LastweekSick', 'Sick hours in timesheet data', 'SELECT * FROM timesheetdata WHERE paycode = ''ST'' AND hours > 0 AND weekday\r\n  BETWEEN  (SELECT Adddate( now(), - ( DAYOFWEEK(now() ) +5 ) )) \r\n                AND  ( SELECT Adddate( now(), - (DAYOFWEEK( now() )-1)  ))  ', '', '2012-10-20 19:09:03', 110, NULL, 110, 0, 0, '', '', 'N', '0000-00-00'),
(154, 'IDASH - LastweekBillingByCont', 'To search the invoicing data and return details for review', 'select RPT.*, RPT.TotalHours*RPT.Rate as BillingAmt from (SELECT TD.id, salutation, username, firstname, lastname, employeetype, isactive, status, Month, (SELECT\r\nmax(taskcode) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and RL.employeeid = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND\r\nrelationshipenddate AND jobid IN (select distinct jobid from timesheetdata where employeeid=TD.employeeid and weekday between ( SELECT Adddate( now(), - ( DAYOFWEEK(now() ) +5 ) )\r\n) and (  SELECT Adddate( now(), - (DAYOFWEEK( now() )-1)  )  ))) AS taskcode, (SELECT max(ponumber) FROM\r\nemployeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS\r\nPONumber, (SELECT max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND ((SELECT DATEDIFF(PR.expirydate, TD.weekday)) > 0 || (PR.expirydate IS\r\nNULL AND\r\n\r\nPR.actualstartdate IS NOT NULL))) AS Contract, TD.jobid, TD.jobcode, TD.job, sum(hours) TotalHours, CASE WHEN ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT\r\nmax(contractorrate) FROM rate RT WHERE TD.weekday BETWEEN effectivedate AND expirydate AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0)) ELSE\r\ncontractorrate END AS Contractorrate, CASE WHEN ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT WHERE TD.weekday BETWEEN effectivedate AND\r\nexpirydate AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0)) ELSE rate END AS Rate FROM (SELECT E.id, E.salutation, E.username, E.firstname,\r\nE.lastname, E.employeetype, E.isactive, E.status, TD.jobid, TD.employeeid, monthname(TD.weekday) AS Month, TD.job, TD.jobcode, DATE_ADD(TD.weekday,INTERVAL 1\r\nSECOND) as weekday, sum(hours) AS hours FROM timesheetdata TD , employee E WHERE TD.employeeid = E.id AND TD.weekday BETWEEN ( SELECT Adddate( now(), - ( DAYOFWEEK(now() ) +5 ) )\r\n) AND ( SELECT Adddate( now(), - (DAYOFWEEK( now() )-1)  )) AND TD.paycode in (''RT'',''OT'') AND TD.hours > 0 GROUP BY E.id,\r\nE.salutation, E.username, E.firstname, E.lastname, E.employeetype, E.isactive, TD.weekday, TD.jobid, TD.job, TD.jobcode, E.status) AS TD LEFT OUTER JOIN rate AS\r\nR ON (TD.id = R.employeeid AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid) GROUP BY Month, TD.id, salutation, username, firstname,\r\nlastname, employeetype, isactive, status, Contractorrate, TD.jobid, TD.job, Rate ORDER BY Month, Contract, jobid, employeetype DESC ) as RPT _CONTRACTCOND_', '', '2012-10-20 19:51:57', 110, NULL, 110, 0, 0, '', '', 'N', '0000-00-00'),
(155, 'IDASH - Labor Import Query', 'Labor import query for the summary of the results', 'SELECT RPT.*, RPT.currenthours*RPT.rate as billingamt, RPT.Contract AS contract from (\r\n\r\nSELECT TD.id, salutation, username, firstname, lastname, tsgbadgenumber, employeetype, isactive, status, Month, periodending, thekey, (SELECT max(taskcode) FROM\r\nemployeerelationship RL WHERE RL.jobnumber = TD.jobcode and RL.employeeid = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate\r\nAND jobid IN (select distinct jobid from timesheetdata where employeeid=TD.employeeid and weekday between (   SELECT Adddate( now(), - ( DAYOFWEEK(now() ) +5 ) ) ) and (  SELECT Adddate( now(), - (DAYOFWEEK( now() )-1)  )    ))) AS taskcode,\r\n\r\n(SELECT max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND\r\nrelationshipenddate) AS ponumber,\r\n\r\n(SELECT max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND ((SELECT DATEDIFF(PR.expirydate, TD.weekday)) > 0 || (PR.expirydate IS NULL AND\r\n\r\nPR.actualstartdate IS NOT NULL))) AS Contract,\r\n\r\nTD.jobid, TD.jobcode, TD.job, sum(hours) AS currenthours,\r\n\r\nCASE WHEN ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(contractorrate) FROM rate RT WHERE TD.weekday BETWEEN effectivedate AND expirydate AND\r\nRT.employeeid = TD.id AND (jobid is NULL or jobid = 0)) ELSE contractorrate END AS Contractorrate,\r\n\r\nCASE WHEN ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT WHERE TD.weekday BETWEEN effectivedate AND expirydate AND RT.employeeid = TD.id\r\nAND (jobid is NULL or jobid = 0)) ELSE rate END AS rate\r\n\r\nFROM ( SELECT E.id, E.salutation, E.username, E.firstname, E.lastname, E.employeetype, E.isactive, E.status, E.tsgbadgenumber, TD.employeeid, TD.jobid,\r\n monthname(TD.weekday) AS Month, TD.job, TD.jobcode, DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, sum(hours) AS hours, T.weekendingdate AS\r\n periodending, CONCAT(E.firstname, '' '', E.lastname, ''-'', TD.jobcode) AS thekey FROM employee E , timesheetdata TD LEFT OUTER JOIN timesheet T ON (T.id=\r\n  TD.timesheetid) WHERE TD.employeeid = E.id AND TD.weekday BETWEEN (SELECT Adddate( now(), - ( DAYOFWEEK(now() ) +5 ) )) AND (SELECT Adddate( now(), - (DAYOFWEEK( now() )-1)  )) AND TD.paycode in (''RT'',''OT'') AND TD.hours > 0 GROUP BY E.id, E.salutation, E.username, E.firstname,\r\n E.lastname, E.employeetype, E.isactive, TD.weekday, TD.jobid, TD.job, TD.jobcode, E.status) AS TD\r\n\r\nLEFT OUTER JOIN rate AS R ON (TD.id = R.employeeid AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid)\r\n\r\nGROUP BY Month, TD.id, salutation, username, firstname, lastname, employeetype, isactive, status, Contractorrate, TD.jobid, TD.job, Rate\r\n\r\nORDER BY Month, Contract, jobid, employeetype DESC\r\n\r\n) as RPT\r\n', '', '2012-10-19 22:55:05', 110, NULL, 110, 1, 0, '110|onetime', '', 'N', '0000-00-00'),
(160, 'sfdrg', 'Run after the 1st - Last Month''s Missing TimeSheets ', 'SELECT Base.* FROM \r\n(SELECT * from (SELECT E.id, E.salutation, E.username, E.firstname, E.lastname,\r\nCONCAT(E.firstname, " ",E. lastname) AS names,\r\nE.emailaddress,E.personalemailaddress, E.employeetype, E.isactive \r\nFROM employee as E where E.status = ''Active'' AND username NOT IN (''fryawe'',''akirunda'',''administrator'',''TSGADMINDL'')) AS E, \r\n(SELECT DISTINCT weekendingdate FROM timesheet AS TD WHERE TD.weekendingdate\r\nBETWEEN (''_STARTDATE_'') AND \r\n(''_ENDDATE_'')) AS W ) AS Base LEFT OUTER JOIN (SELECT employeeid,weekendingdate\r\n FROM timesheet TD WHERE TD.weekendingdate BETWEEN (''_STARTDATE_'')\r\n AND (''_ENDDATE_'')) AS Actual ON (Actual.employeeid = Base.id AND\r\n Actual.weekendingdate = Base.weekendingdate) WHERE Actual.weekendingdate IS NULL ORDER BY lastname,Actual.weekendingdate\r\n        ', '', '2012-12-12 18:50:14', 1, '2012-12-12 18:50:24', 1, 0, 1, '0|4', '2038-01-01', 'N', '0000-00-00'),
(161, 'IDASH - Labor Import Query', 'Labor import query for the summary of the results', 'SELECT RPT.*, RPT.currenthours*RPT.rate as billingamt, RPT.Contract AS contract from (\r\n\r\nSELECT \r\nTD.id, \r\nsalutation, \r\nusername, \r\nfirstname, \r\nlastname, \r\ntsgbadgenumber,\r\nemployeetype, \r\nisactive, \r\nstatus, \r\nMonth, \r\nperiodending, \r\nthekey, \r\n(SELECT max(taskcode) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and RL.employeeid = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate AND jobid IN (select distinct jobid from timesheetdata where employeeid=TD.employeeid and weekday between (''_STARTDATE_'') and (''_ENDDATE_''))) AS taskcode,\r\n\r\n(SELECT max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS ponumber, \r\n\r\n(SELECT max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND ((SELECT DATEDIFF(PR.expirydate, TD.weekday)) > 0 || (PR.expirydate IS NULL AND \r\n\r\nPR.actualstartdate IS NOT NULL))) AS Contract, \r\n\r\nTD.jobid, TD.jobcode, TD.job, sum(hours) AS currenthours, \r\n\r\nCASE WHEN ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(contractorrate) FROM rate RT WHERE TD.weekday BETWEEN effectivedate AND expirydate AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0)) ELSE contractorrate END AS Contractorrate, \r\n\r\nCASE WHEN ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT WHERE TD.weekday BETWEEN effectivedate AND expirydate AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0)) ELSE rate END AS rate \r\n\r\nFROM (\r\n SELECT E.id, E.salutation, E.username, E.firstname, E.lastname, E.employeetype, E.isactive, E.status, E.tsgbadgenumber, TD.employeeid, TD.jobid, monthname(TD.weekday) AS Month, TD.job, TD.jobcode, DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, sum(hours) AS hours, T.weekendingdate AS periodending, CONCAT(E.firstname, '' '', E.lastname, ''-'', TD.jobcode) AS thekey \r\n FROM employee E , timesheetdata TD LEFT OUTER JOIN timesheet T ON (T.id=TD.timesheetid)\r\n WHERE TD.employeeid = E.id AND TD.weekday BETWEEN (''_STARTDATE_'') AND (''_ENDDATE_'') AND TD.paycode in (''RT'',''OT'') AND TD.hours > 0 \r\n GROUP BY E.id, E.salutation, E.username, E.firstname, E.lastname, E.employeetype, E.isactive, TD.weekday, TD.jobid, TD.job, TD.jobcode, E.status) AS TD \r\n\r\nLEFT OUTER JOIN rate AS R ON (TD.id = R.employeeid AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid) \r\n\r\nGROUP BY Month, TD.id, salutation, username, firstname, lastname, employeetype, isactive, status, Contractorrate, TD.jobid, TD.job, Rate \r\n\r\nORDER BY Month, Contract, jobid, employeetype DESC\r\n\r\n) as RPT', '', '2012-12-13 15:03:47', 1, NULL, 1, 1, 0, '1|onetime', '2011-08-03 23:59:00', 'N', '0000-00-00'),
(162, 'IDASH - LastMonthBillingAll', 'Gets last months invoicing data', 'SELECT RPT.*, RPT.currenthours*RPT.rate as billingamt, RPT.Contract AS contract from \r\n\r\n(SELECT TD.id, salutation, username, firstname, lastname, employeetype, isactive, status, Month, \r\n(SELECT max(taskcode) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and RL.employeeid = RL.employeeid AND TD.weekday \r\nBETWEEN relationshipstartdate AND relationshipenddate AND jobid IN (select distinct jobid from timesheetdata where employeeid=TD.employeeid \r\nand weekday between (''_STARTDATE_'') and\r\n(''_ENDDATE_''))) AS taskcode, \r\n(SELECT max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday \r\nBETWEEN relationshipstartdate AND relationshipenddate) AS ponumber, (SELECT max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND \r\n((SELECT DATEDIFF(PR.expirydate, TD.weekday)) > 0 || (PR.expirydate IS NULL AND \r\n\r\nPR.actualstartdate IS NOT NULL))) AS Contract, TD.jobid, TD.jobcode, TD.job, sum(hours) AS currenthours, \r\nCASE WHEN ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(contractorrate) FROM rate RT WHERE TD.weekday\r\nBETWEEN effectivedate AND expirydate AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0)) ELSE contractorrate END AS Contractorrate,\r\nCASE WHEN ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT WHERE TD.weekday BETWEEN\r\neffectivedate AND expirydate AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0)) ELSE rate END AS rate FROM \r\n(SELECT E.id, E.salutation, E.username, E.firstname, E.lastname, E.employeetype, E.isactive, E.status, TD.jobid, TD.employeeid, monthname(TD.weekday) AS Month,\r\nTD.job, TD.jobcode, DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, sum(hours) AS hours FROM timesheetdata TD ,\r\nemployee E WHERE TD.employeeid = E.id AND TD.weekday BETWEEN (''_STARTDATE_'')\r\nAND (''_ENDDATE_'') AND TD.paycode in (''RT'',''OT'') AND TD.hours > 0 GROUP BY E.id, E.salutation, \r\nE.username, E.firstname, E.lastname, E.employeetype, E.isactive, TD.weekday, TD.jobid, TD.job, TD.jobcode, E.status) AS TD LEFT OUTER JOIN \r\nrate AS R ON (TD.id = R.employeeid AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid) GROUP BY Month, TD.id, salutation,\r\nusername, firstname, lastname, employeetype, isactive, status, Contractorrate, TD.jobid, TD.job, Rate ORDER BY Month, Contract, jobid, employeetype DESC) \r\n\r\nas RPT', '', '2012-12-13 15:15:54', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(163, 'IDASH-AgingReportByJN', 'Showing a break down of the amounts billed from Labor, Travel and ODC by Job Number and PO Number', '(SELECT C.id, C.invoicenumber AS "Invoice Number", B.id AS employeeid, B.PONumber AS "PO Number", B.jobcode AS "Job Number", B.Month AS "Invoice Month",\r\nDATE_FORMAT(C.invoicedate, ''%m/%d/%Y'') AS "Invoice Date", TotalHours AS "Total Hours", sum(TotalHours*rate) AS "Total Amount", A.amountpaid, A.status AS "Payment\r\nStatus", A.comments AS "Update Message", ''LABOR'' AS InvoiceType, B.Contract, C.invoiceyear FROM (SELECT (SELECT max(ponumber) FROM employeerelationship RL WHERE\r\nRL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber, (SELECT\r\nmax(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND ((SELECT DATEDIFF(PR.expirydate, TD.weekday)) > 0 || (PR.expirydate IS NULL AND\r\nPR.actualstartdate IS NOT NULL))) AS Contract, TD.id, salutation, username, firstname, lastname, Month, Year, TD.jobid, TD.jobcode, SUM(hours) AS TotalHours,\r\nCASE WHEN ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT WHERE TD.weekday BETWEEN effectivedate AND expirydate AND RT.employeeid = TD.id\r\nAND (jobid is NULL or jobid = 0)) ELSE rate END AS Rate FROM (SELECT E.id, E.salutation, E.username, E.firstname, E.lastname, E.employeetype, E.isactive,\r\nE.status, TD.jobid, monthname(TD.weekday) AS Month, year(TD.weekday) AS Year, TD.job, TD.jobcode, DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday, SUM(hours)\r\nAS hours FROM timesheetdata TD , employee E WHERE TD.employeeid = E.id AND E.isactive = "Y" AND TD.weekday BETWEEN (''_STARTDATE_'') AND\r\n(''_ENDDATE_'') AND TD.paycode in (''RT'',''OT'') AND TD.hours > 0 GROUP BY E.id, E.salutation, E.username, E.firstname,\r\nE.lastname, E.employeetype, E.isactive, TD.weekday, TD.jobid, TD.job, TD.jobcode, E.status) AS TD LEFT OUTER JOIN rate AS R ON (TD.id = R.employeeid AND\r\nTD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid) GROUP BY Month, salutation, username, firstname, lastname, TD.jobid, Rate ORDER BY Month,\r\nYear, Contract, jobid, employeetype DESC) AS B LEFT JOIN c_invoice C ON (monthname(C.startdate) = B.Month AND year(C.startdate) = B.Year AND C.ponumber =\r\nB.PONumber) LEFT JOIN agingstatus A ON (B.Month = A.month AND B.Year = A.invyear AND B.jobcode = A.jobcode AND B.id = A.employeeid AND A.invoicetype = ''labor'')\r\nWHERE ( C.invoicenumber LIKE ''%%'' OR C.invoicedate LIKE ''%%'' OR B.month LIKE ''%%'' OR A.status LIKE ''%%'' OR A.comments LIKE ''%%'') GROUP BY B.Month, B.Year,\r\nB.Contract, B.PONumber, B.jobcode, B.id) UNION (SELECT '''' AS id, '''' AS ''Invoice Number'', O.employeeid, O.ponumber AS ''PO Number'', O.jobnumber AS ''Job Number'',\r\nmonthname(O.transactiondate) AS ''Invoice Month'', DATE_FORMAT(O.transactiondate, ''%m/%d/%Y'') AS ''Invoice Date'', '''' AS ''Total Hours'', O.amount AS ''Total Amount'',\r\nA.amountpaid, A.status AS ''Payment Status'', A.comments AS ''Update Message'', ''ODC'' AS InvoiceType, O.contract AS Contract, year(O.transactiondate) AS invoiceyear\r\nFROM (SELECT employeeid, ponumber, jobnumber, transactiondate, amount, contract, status, description FROM c_odc WHERE (transactiondate BETWEEN\r\n(''_STARTDATE_'') AND (''_ENDDATE_'')) ORDER BY transactiondate DESC) AS O LEFT JOIN c_invoice C ON\r\n(monthname(C.startdate) = monthname(O.transactiondate) AND year(C.startdate) = year(O.transactiondate) AND C.ponumber = O.ponumber) LEFT JOIN agingstatus A ON\r\n(O.ponumber = A.ponumber AND O.jobnumber = A.jobcode AND monthname(O.transactiondate) = A.month AND year(O.transactiondate) = A.invyear AND O.employeeid =\r\nA.employeeid AND A.invoicetype = ''odc'') WHERE (O.description LIKE ''%%'') GROUP BY monthname(O.transactiondate), year(O.transactiondate), O.ponumber, O.jobnumber,\r\nO.employeeid) UNION (SELECT '''' AS id, '''' AS "Invoice Number", T.id AS employeeid, C.ponumber AS ''PO Number'', T.jobnumber AS ''Job Number'', monthname(T.startdate)\r\nAS ''Invoice Month'', '''' AS "Invoice Date", '''' AS "Total Hours", T.currentamount AS ''Total Amount'', A.amountpaid, A.status AS ''Payment Status'', A.comments AS\r\n''Update Message'', ''TRAVEL EXPENSES'' AS InvoiceType, P.projectcategory AS Contract, year(T.startdate) AS invoiceyear FROM (SELECT e.id, e.firstname,\r\ne.lastname,td.purpose, td.jobnumber, td.startdate, td.currentamount, td.status FROM traveldetails AS td INNER JOIN employee AS e ON e.id = td.employeeid WHERE\r\n(td.startdate BETWEEN (''_STARTDATE_'') AND (''_ENDDATE_'')) ORDER BY startdate DESC) AS T LEFT JOIN\r\nc_invoice C ON (monthname(C.startdate) = monthname(T.startdate) AND year(C.startdate) = year(T.startdate) AND C.ponumber = T.jobnumber) LEFT JOIN project P ON\r\n(T.jobnumber = P.jobcode AND P.projectcategory != '''') LEFT JOIN agingstatus A ON (T.jobnumber = A.jobcode AND monthname(T.startdate) = A.month AND\r\nyear(T.startdate) = A.invyear AND T.id = A.employeeid AND A.invoicetype = ''travel'') WHERE (T.purpose LIKE ''%%'') GROUP BY monthname(T.startdate),\r\nyear(T.startdate), C.ponumber, T.jobnumber, T.id) ', '', '2012-12-13 21:14:51', 110, NULL, 110, 0, 0, '', '', 'N', '0000-00-00');
INSERT INTO `customreport` (`id`, `title`, `description`, `querystring`, `category`, `datecreated`, `createdby`, `lastupdatedon`, `lastupdatedby`, `issendemail`, `isactive`, `expirytype`, `expirydate`, `postpone`, `date`) VALUES
(164, 'IDASH - LastMonthsBillingGrp', 'For invoicing RECON - Group by Contract.', 'select RPT.Month AS billedmonth, RPT.Contract AS billedcontract, sum(RPT.TotalHours) AS billedhours, sum(RPT.TotalHours*RPT.Rate) AS billedamount from (SELECT\r\nTD.id, salutation, username, firstname, lastname, employeetype, isactive, status, Month, (SELECT  max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber =\r\nTD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber, (SELECT  max(projectcategory) FROM\r\nproject PR where PR.jobcode = TD.jobcode AND ((SELECT DATEDIFF(PR.expirydate, TD.weekday)) > 0 || (PR.expirydate IS NULL AND PR.actualstartdate IS NOT NULL))) AS\r\nContract, TD.jobid, TD.jobcode, TD.job, sum(hours) TotalHours, CASE WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(contractorrate) FROM rate RT WHERE\r\nTD.weekday BETWEEN effectivedate AND expirydate AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0)) ELSE contractorrate\r\nEND  AS Contractorrate, CASE WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT WHERE  TD.weekday  BETWEEN effectivedate AND\r\nexpirydate AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0)) ELSE  rate\r\nEND  AS Rate FROM (SELECT E.id, E.salutation, E.username, E.firstname, E.lastname, E.employeetype, E.isactive, E.status, TD.jobid, monthname(TD.weekday) AS\r\nMonth, TD.job, TD.jobcode, DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday,\r\nsum(hours) AS hours FROM timesheetdata  TD , employee   E WHERE   TD.employeeid = E.id\r\nAND  TD.weekday    BETWEEN  (''_STARTDATE_'') AND  (''_ENDDATE_'')\r\nAND  TD.paycode in (''RT'',''OT'') AND  TD.hours > 0 GROUP BY E.id, E.salutation, E.username, E.firstname, E.lastname, E.employeetype,\r\nE.isactive, TD.weekday, TD.jobid, TD.job, TD.jobcode, E.status) AS TD LEFT  OUTER JOIN rate AS R ON (TD.id = R.employeeid AND\r\nTD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid) GROUP BY Month, TD.id, salutation, username, firstname,\r\nlastname, employeetype, isactive, status, Contractorrate, TD.jobid, TD.job, Rate ORDER BY Month, Contract, jobid, employeetype DESC )\r\nas RPT group by RPT.Month, RPT.Contract', '', '2012-12-14 12:43:18', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(165, 'IDASH - LastMonthsTotalRealHrs', 'Total Hours (REAL - RT) in Timesheet data.', 'SELECT sum(hours) AS totalrthrs FROM timesheetdata WHERE paycode = ''RT'' AND hours > 0 AND weekday BETWEEN  \r\n        (''_STARTDATE_'') AND \r\n        (''_ENDDATE_'')', '', '2012-12-14 12:52:03', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(166, 'IDASH - LastMonthsTotalHoliday', 'Total Hours (HOLIDAY - HT) in Timesheet data.', 'SELECT SUM(hours) AS totalhthrs FROM timesheetdata WHERE paycode = ''HT'' AND \r\nweekday BETWEEN  (''_STARTDATE_'') \r\nAND  (''_ENDDATE_'')', '', '2012-12-14 13:33:15', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(167, 'IDASH - LastMonthsTotalSickHrs', 'Total Hours (SICK - ST) in Timesheet data.', 'SELECT SUM(hours) AS totalsthrs FROM timesheetdata WHERE paycode = ''ST'' AND weekday BETWEEN ''_STARTDATE_'' AND ''_ENDDATE_''', '', '2012-12-14 13:41:25', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(168, 'IDASH - RECON-AsOfDate JNsVsPr', 'Copy of RECON-AsOfDate JNsVsPrevious query with field name Hours changed', 'select cur.*, (SELECT max(ponumber) FROM employeerelationship RL WHERE RL.jobnumber = cur.jobcode and cur.id = RL.employeeid AND now() BETWEEN\r\nrelationshipstartdate AND relationshipenddate) AS PONumber, (SELECT sum(hours) AS hours FROM timesheetdata TD WHERE cur.jobcode = TD.jobcode AND cur.id =\r\nTD.employeeid AND TD.weekday BETWEEN (''_STARTDATE_'') AND (''_ENDDATE_'')\r\nAND TD.paycode in (''RT'',''OT'')) AS HoursWorked from (SELECT distinct monthname(TD.weekday) as month,E.id, E.salutation, E.username, E.firstname, E.lastname,\r\nTD.job, TD.jobcode FROM timesheetdata TD, employee E WHERE TD.employeeid = E.id and TD.hours > 0 AND TD.weekday BETWEEN (''_STARTDATE_'' ) AND (''_ENDDATE_'')) as cur left outer join (SELECT distinct monthname(TD.weekday)\r\nas month, E.id, E.salutation, E.username, E.firstname, E.lastname, TD.job, TD.jobcode FROM timesheetdata TD, employee E WHERE TD.employeeid = E.id and TD.hours >\r\n0 AND TD.weekday BETWEEN (''_STARTDATE_'' ) AND ( ''_ENDDATE_'')) as prev on (cur.id =\r\nprev.id and cur.jobcode=prev.jobcode) where (cur.jobcode is NULL or prev.jobcode is NULL)', '', '2012-12-17 18:52:13', 105, '2012-12-17 18:52:16', 105, 0, 0, '', '2011-06-10 23:59:00', 'N', '0000-00-00'),
(169, 'IDASH-RECON-LM Overtime', 'Run after the 1st - Employees with OT in the invoicing period', 'SELECT id, salutation, username, firstname, lastname, employeetype, isactive, status, Month, PayrollCategory, HoursWorked, HoursBilled, HoursInPeriod,\r\nHolidaysHoursInPeriod, COALESCE(PaidHolidaysToDate,0) AS PaidHolidaysToDate, COALESCE(PaidSickDaysToDate,0) AS PaidSickDaysToDate,\r\nCOALESCE(PaidVacationDaysToDate,0) AS PaidVacationDaysToDate, COALESCE(PaidPersonalDaysToDate,0) AS PaidPersonalDaysToDate FROM (SELECT E.id, E.salutation,\r\nE.username, E.firstname, E.lastname, E.employeetype, E.isactive, E.status, monthname(TD.weekday) AS Month, DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday,\r\n(SELECT max(status) FROM timesheet T WHERE E.id = T.employeeid and T.weekendingdate between ( ''_STARTDATE_'' ) AND (''_ENDDATE_'')) AS TimesheetStatus, sum(hours) HoursWorked, CASE WHEN sum(hours) - (SELECT count(DISTINCT weekday)*8 FROM\r\ntimesheetdata T WHERE DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'') AND T.weekday BETWEEN (''_STARTDATE_'' ) AND (''_ENDDATE_'' )) = 0 AND employeetype IN (''Full Time'' ) THEN ''REGULAR'' WHEN sum(hours) - (SELECT count(DISTINCT weekday)*8 FROM\r\ntimesheetdata T WHERE DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'') AND T.weekday BETWEEN (''_STARTDATE_'' ) AND (''_ENDDATE_'' )) < 0 THEN ''HOURLY'' WHEN sum(hours) - (SELECT count(DISTINCT weekday)*8 FROM timesheetdata T WHERE DAYNAME(weekday)\r\nNOT IN (''Saturday'',''Sunday'') AND T.weekday BETWEEN (''_STARTDATE_'') AND (''_ENDDATE_'')) > 0 AND employeetype IN (''Full Time'' ) THEN ''REGULAR WITH OVERTIME'' ELSE ''HOURLY'' END PayrollCategory, sum(hours) - COALESCE((SELECT\r\nsum(hours) FROM timesheetdata T WHERE T.employeeid = E.id AND T.job IN (''Vacation'',''Sick'',''Personal'',''Paid Holiday'') AND T.weekday BETWEEN (''_STARTDATE_'') AND (''_ENDDATE_'')),0) HoursBilled, (SELECT count(DISTINCT\r\nweekday)*8 FROM timesheetdata T WHERE DAYNAME(weekday) NOT IN (''Saturday'',''Sunday'') AND T.weekday BETWEEN (''_STARTDATE_'')\r\nAND (''_ENDDATE_'' )) HoursInPeriod, (SELECT count(1)*8 FROM publicholidays PH WHERE PH.publicholidaydate BETWEEN (''_STARTDATE_'' ) AND (''_ENDDATE_'')) as HolidaysHoursInPeriod, (SELECT sum(hours)/8 FROM\r\ntimesheetdata T WHERE employeeid = E.id and job IN (''Paid Holiday'') AND Year(T.weekday) = ''2010'') AS PaidHolidaysToDate, (SELECT sum(hours)/8 FROM timesheetdata\r\nT WHERE employeeid = E.id and job IN (''Sick'') AND Year(T.weekday) = ''2010'') AS PaidSickDaysToDate, (SELECT sum(hours)/8 FROM timesheetdata T WHERE employeeid =\r\nE.id and job IN (''Vacation'') AND Year(T.weekday) = ''2010'') AS PaidVacationDaysToDate, (SELECT sum(hours)/8 FROM timesheetdata T WHERE employeeid = E.id and job\r\nIN (''Personal'') AND Year(T.weekday) = ''2010'') AS PaidPersonalDaysToDate FROM timesheetdata TD , employee E WHERE TD.employeeid = E.id AND E.isactive = "Y" AND\r\nTD.weekday BETWEEN (''_STARTDATE_'') AND (''_ENDDATE_'') AND TD.hours >\r\n0 GROUP BY E.id, E.salutation, E.username, E.firstname, E.lastname, E.employeetype, E.isactive, E.status ) AS TD WHERE HoursWorked > HoursInPeriod GROUP BY id,\r\nsalutation, username, firstname, lastname, employeetype, isactive, status, Month ORDER BY Month, employeetype, lastname DESC', '', '2012-12-17 19:04:00', 80, NULL, 80, 0, 0, '', '', 'N', '0000-00-00'),
(170, 'IDASH-LM Saved', 'Lists the employees who have saved the timesheets for last month.', 'SELECT    e.id,CONCAT(e.firstname, " ",e. lastname) AS names,e.tsgbadgenumber,tb.task,tb.taskcode, SUM(hours) AS currenthours,jobcode, e.employeetype,\r\n   e.emailaddress, e.personalemailaddress, officeline1,t.`status`, DATE_FORMAT(t.weekendingdate, ''%d-%b-%y'') AS periodending,\r\n    DATE_FORMAT(''_ENDDATE_'',''%d-%b-%y'') AS monthenddate, DATE_FORMAT(''_STARTDATE_'',''%d-%b-%y'') AS monthstartdate, t.id as tsid FROM employee AS e\r\n\r\n     LEFT JOIN\r\n\r\n     timesheet AS t ON t.employeeid = e.id\r\n\r\n     LEFT JOIN v_timesheetdata_without_benefits_new tb\r\n\r\n     ON t.id=tb.timesheetid\r\n\r\n      WHERE laborcategory != '''' AND e.isadmin= ''N'' AND t.payrollprocessed = ''N'' AND (t.`status` = ''Saved'') AND ((t.weekendingdate) BETWEEN (''_STARTDATE_'') AND (''_ENDDATE_'')) GROUP BY e.id, jobcode\r\n      ORDER BY t.status,e.id ASC', '', '2012-12-17 19:08:26', 1, NULL, 1, 0, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(171, 'IDASH - LastMonthsReal', 'Real hours in timesheet data', 'SELECT * FROM timesheetdata WHERE paycode = ''RT'' AND hours > 0 AND weekday  BETWEEN\r\n(''_STARTDATE_'') AND  (''_ENDDATE_'')', '', '2012-12-17 20:40:06', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(172, 'IDASH - LastMonthsHoliday ', 'Holiday hours in timesheet data', 'SELECT * FROM timesheetdata WHERE paycode = ''HT'' AND hours > 0 AND weekday  \r\nBETWEEN  (''_STARTDATE_'') AND  (''_ENDDATE_'')', '', '2012-12-17 20:46:33', 105, NULL, 105, 0, 0, '', '', 'N', '0000-00-00'),
(173, 'IDASH - LastMonthsSick', 'Sick hours in timesheet data', 'SELECT * FROM timesheetdata WHERE paycode = ''ST'' AND hours > 0 AND weekday  BETWEEN \r\n(''_STARTDATE_'') AND  (''_ENDDATE_'')', '', '2012-12-17 20:50:08', 105, '2012-12-17 20:50:11', 105, 0, 0, '', '', 'N', '0000-00-00'),
(174, 'IDASH - LastMonthBillingByCont', 'To search the invoicing data and return details for review', 'select RPT.*, RPT.TotalHours*RPT.Rate as BillingAmt from (SELECT TD.id, salutation, username, firstname, lastname, employeetype, isactive, status, Month, (SELECT\r\nmax(taskcode) FROM employeerelationship RL WHERE RL.jobnumber = TD.jobcode and RL.employeeid = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND\r\nrelationshipenddate AND jobid IN (select distinct jobid from timesheetdata where employeeid=TD.employeeid and weekday between (''_STARTDATE_'') and (''_ENDDATE_''))) AS taskcode, (SELECT max(ponumber) FROM\r\nemployeerelationship RL WHERE RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS\r\nPONumber, (SELECT max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND ((SELECT DATEDIFF(PR.expirydate, TD.weekday)) > 0 || (PR.expirydate IS\r\nNULL AND\r\n\r\nPR.actualstartdate IS NOT NULL))) AS Contract, TD.jobid, TD.jobcode, TD.job, sum(hours) TotalHours, CASE WHEN ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT\r\nmax(contractorrate) FROM rate RT WHERE TD.weekday BETWEEN effectivedate AND expirydate AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0)) ELSE\r\ncontractorrate END AS Contractorrate, CASE WHEN ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT WHERE TD.weekday BETWEEN effectivedate AND\r\nexpirydate AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0)) ELSE rate END AS Rate FROM (SELECT E.id, E.salutation, E.username, E.firstname,\r\nE.lastname, E.employeetype, E.isactive, E.status, TD.jobid, TD.employeeid, monthname(TD.weekday) AS Month, TD.job, TD.jobcode, DATE_ADD(TD.weekday,INTERVAL 1\r\nSECOND) as weekday, sum(hours) AS hours FROM timesheetdata TD , employee E WHERE TD.employeeid = E.id AND TD.weekday BETWEEN (''_STARTDATE_'') AND (''_ENDDATE_'') AND TD.paycode in (''RT'',''OT'') AND TD.hours > 0 GROUP BY E.id,\r\nE.salutation, E.username, E.firstname, E.lastname, E.employeetype, E.isactive, TD.weekday, TD.jobid, TD.job, TD.jobcode, E.status) AS TD LEFT OUTER JOIN rate AS\r\nR ON (TD.id = R.employeeid AND TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid) GROUP BY Month, TD.id, salutation, username, firstname,\r\nlastname, employeetype, isactive, status, Contractorrate, TD.jobid, TD.job, Rate ORDER BY Month, Contract, jobid, employeetype DESC ) as RPT _CONTRACTCOND_\r\n', '', '2012-12-17 21:10:22', 105, '2012-12-17 21:10:24', 105, 0, 0, '', '', 'N', '0000-00-00'),
(175, 'RECON-Last Month\\''s Billing', 'Run after the 1st - Check Last Month''s Numbers', 'SELECT TD.id, salutation, username, firstname, lastname, employeetype, isactive, status, Month, (SELECT  max(ponumber) FROM employeerelationship RL WHERE\r\n   RL.jobnumber = TD.jobcode and TD.id = RL.employeeid AND TD.weekday BETWEEN relationshipstartdate AND relationshipenddate) AS PONumber, (SELECT\r\n   max(projectcategory) FROM project PR where PR.jobcode = TD.jobcode AND ((SELECT DATEDIFF(PR.expirydate, TD.weekday)) > 0 || (PR.expirydate IS NULL AND\r\n\r\nPR.actualstartdate IS NOT NULL))) AS Contract, TD.jobid, TD.jobcode, TD.job, sum(hours) TotalHours, CASE WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT\r\n   max(contractorrate) FROM rate RT WHERE  TD.weekday BETWEEN effectivedate AND expirydate AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0)) ELSE\r\n   contractorrate\r\n\r\n   END  AS Contractorrate, CASE WHEN  ((R.jobid is NULL or R.jobid = 0)) THEN (SELECT max(rate) FROM rate RT WHERE  TD.weekday  BETWEEN effectivedate AND\r\n   expirydate AND RT.employeeid = TD.id AND (jobid is NULL or jobid = 0)) ELSE  rate\r\n\r\n   END  AS Rate FROM (SELECT E.id, E.salutation, E.username, E.firstname, E.lastname, E.employeetype, E.isactive, E.status, TD.jobid, monthname(TD.weekday) AS\r\n Month, TD.job, TD.jobcode, DATE_ADD(TD.weekday,INTERVAL 1 SECOND) as weekday,\r\n\r\n  sum(hours) AS hours FROM timesheetdata  TD , employee   E WHERE   TD.employeeid = E.id\r\n\r\n    AND  TD.weekday    BETWEEN  (''_STARTDATE_'') AND  (''_ENDDATE_'')\r\n        AND  TD.paycode in (''RT'',''OT'') AND  TD.hours > 0 GROUP BY E.id, E.salutation, E.username, E.firstname, E.lastname, E.employeetype,\r\n        E.isactive, TD.weekday, TD.jobid, TD.job, TD.jobcode, E.status) AS TD LEFT  OUTER JOIN rate AS R ON (TD.id = R.employeeid AND\r\n         TD.weekday BETWEEN effectivedate AND expirydate AND R.jobid = TD.jobid) GROUP BY Month, TD.id, salutation, username, firstname,\r\n         lastname, employeetype, isactive, status, Contractorrate, TD.jobid, TD.job, Rate ORDER BY Month, Contract, jobid, employeetype DESC\r\n\r\n   \r\n        ', '', '2012-12-17 21:42:44', 80, '2012-12-17 21:42:45', 80, 0, 0, '', '', 'N', '0000-00-00'),
(176, 'IDASH-RECON-PartialEOMHours', 'Check if all have submitted hours for a partial week', 'call checkTime(\\''20100329\\'',\\''20100331\\'')', '', '2012-12-21 20:54:45', 80, '2012-12-21 20:54:48', 80, 0, 0, '', '', 'N', '0000-00-00'),
(177, 'MGMT-InvoiceStatus', '', 'call GetInVoicePaymentStatus();', '', '2013-03-15 18:33:08', 80, NULL, 80, 0, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(178, 'MGMT-InvoicePaymentStatus', '', 'call GetInVoicePaymentStatusAll();', '', '2013-04-03 18:56:29', 80, NULL, 80, 1, 1, '0|0', '2038-01-01', 'N', '0000-00-00'),
(99900, 'I-BILLS-PDFinvoice', 'I-BILLS-PDFinvoice', 'SELECT\n\ndistinct\n\n ''1'', tc.description as taskdescription,\n\n o.description as Description,\n\n o.id,\n\n o.employeeid,\n\n o.costcentercode AS Costcenter,\n\n o.activity AS Activity,\n\n o.jobnumber AS ''Job Number'',\n\n o.poline AS ''PO Line'',\n\n o.taskcode, costcode,\n\n DATE_FORMAT(o.transactiondate, ''%m/%d/%y'') AS ''Transaction Date'',\n\nDATE_FORMAT(o.transactiondate, ''%y/%m/%d'') AS ''ExcelDate'' ,\n\n o.liquidationamount AS ''Liquidation Amount'',\n\n o.amount AS Amount,\n\no.hours AS hours,\n\no.rate AS rate\n\nFROM c_odc_view AS o, c_invoice AS i, c_invoiceemployees AS ie, taskcodes AS tc\n\nWHERE tc.taskcode = o.taskcode\n\n  \n\n  AND i.id = ie.invoiceid \n\n  AND TO_DAYS(o.transactiondate) BETWEEN TO_DAYS(i.startdate)\n\n  AND TO_DAYS(i.enddate)\n\n  AND o.`status` = ''Approved''\n\n  AND i.id = ''_ID_''\n\n  and i.laborcategory = o.category\n\nUNION ALL\n\nSELECT\n\n2,\n\n ''Payment'',\n\n ''Payment Received'', \n\n'' '', \n\n'' '',\n\n '' '',\n\n '' '',\n\n '' '',\n\n  '' '',\n\n   '' '',\n\n   '' '',\n\nDATE_FORMAT(paymentdate, ''%m/%d/%y'') AS ''Transaction Date'',\n\nDATE_FORMAT(paymentdate, ''%y/%m/%d'') AS ''ExcelDate'' ,\n\n  '' '',\n\n   amount*-1,\n\n  '' '',\n\n  '' ''\n\nFROM payments\n\nWHERE invoice = (SELECT invoicenumber FROM  invoice WHERE id=''_ID_'')\nand status = ''Payment''\nORDER BY  1  ASC,  13 ASC ;', '', '2013-04-01 18:31:55', 80, '2013-04-01 18:32:00', 80, 0, 0, '', '', 'N', '0000-00-00'),
(99901, 'I-BILLS-PDFinvoice', 'I-BILLS-PDFinvoice', 'SELECT\n\ndistinct\n\n ''1'', tc.description as taskdescription,\n\n o.description as Description,\n\n o.id,\n\n o.employeeid,\n\n o.costcentercode AS Costcenter,\n\n o.activity AS Activity,\n\n o.jobnumber AS ''Job Number'',\n\n o.poline AS ''PO Line'',\n\n o.taskcode, costcode,\n\n DATE_FORMAT(o.transactiondate, ''%m/%d/%y'') AS ''Transaction Date'',\n\nDATE_FORMAT(o.transactiondate, ''%y/%m/%d'') AS ''ExcelDate'' ,\n\n o.liquidationamount AS ''Liquidation Amount'',\n\n o.amount AS Amount,\n\no.hours AS hours,\n\no.rate AS rate\n\nFROM c_odc_view AS o, c_invoice AS i, c_invoiceemployees AS ie, taskcodes AS tc\n\nWHERE tc.taskcode = o.taskcode\n\n  \n\n  AND i.id = ie.invoiceid \n\n  AND TO_DAYS(o.transactiondate) BETWEEN TO_DAYS(i.startdate)\n\n  AND TO_DAYS(i.enddate)\n\n  AND o.`status` = ''Approved''\n\n  AND i.id = ''_ID_''\n\n  and i.invoicecategory = o.category\n\nUNION ALL\n\nSELECT\n\n2,\n\n ''Payment'',\n\n ''Payment Received'', \n\n'' '', \n\n'' '',\n\n '' '',\n\n '' '',\n\n '' '',\n\n  '' '',\n\n   '' '',\n\n   '' '',\n\nDATE_FORMAT(paymentdate, ''%m/%d/%y'') AS ''Transaction Date'',\n\nDATE_FORMAT(paymentdate, ''%y/%m/%d'') AS ''ExcelDate'' ,\n\n  '' '',\n\n   amount*-1,\n\n  '' '',\n\n  '' ''\n\nFROM payments\n\nWHERE invoice = (SELECT invoicenumber FROM  invoice WHERE id=''_ID_'')\n\nORDER BY  1 ASC,13 ASC ', '', '2013-04-01 18:31:55', 80, '2013-04-01 18:32:00', 80, 0, 0, '', '', 'N', '0000-00-00'),
(99902, 'MGMT-PDFQuery', '', 'UPDATE `customreport` SET `querystring` = ''SELECT\n\ndistinct\n\n ''''1'''', tc.description as taskdescription,\n\n o.description as Description,\n\n o.id,\n\n o.employeeid,\n\n o.costcentercode AS Costcenter,\n\n o.activity AS Activity,\n\n o.jobnumber AS ''''Job Number'''',\n\n o.poline AS ''''PO Line'''',\n\n o.taskcode, costcode,\n\n DATE_FORMAT(o.transactiondate, ''''%m/%d/%y'''') AS ''''Transaction Date'''',\n\nDATE_FORMAT(o.transactiondate, ''''%y/%m/%d'''') AS ''''ExcelDate'''' ,\n\n o.liquidationamount AS ''''Liquidation Amount'''',\n\n o.amount AS Amount,\n\no.hours AS hours,\n\no.rate AS rate\n\nFROM c_odc_view AS o, c_invoice AS i, c_invoiceemployees AS ie, taskcodes AS tc\n\nWHERE tc.taskcode = o.taskcode\n\n  \n\n  AND i.id = ie.invoiceid \n\n  AND TO_DAYS(o.transactiondate) BETWEEN TO_DAYS(i.startdate)\n\n  AND TO_DAYS(i.enddate)\n\n  AND o.`status` = ''''Approved''''\n\n  AND i.id = ''''_ID_''''\n\n  and i.laborcategory = o.category\n\nUNION ALL\n\nSELECT\n\n2,\n\n ''''Payment'''',\n\n ''''Payment Received'''', \n\n'''' '''', \n\n'''' '''',\n\n '''' '''',\n\n '''' '''',\n\n '''' '''',\n\n  '''' '''',\n\n   '''' '''',\n\n   '''' '''',\n\nDATE_FORMAT(paymentdate, ''''%m/%d/%y'''') AS ''''Transaction Date'''',\n\nDATE_FORMAT(paymentdate, ''''%y/%m/%d'''') AS ''''ExcelDate'''' ,\n\n  '''' '''',\n\n   amount*-1,\n\n  '''' '''',\n\n  '''' ''''\n\nFROM payments\n\nWHERE invoice = (SELECT invoicenumber FROM  invoice WHERE id=''''_ID_'''')\nand status = ''''Payment''''\nORDER BY  1  ASC,  13 ASC ;'' WHERE `customreport`.`id` = 99900;\n', '', '2013-04-04 19:20:44', 80, NULL, 80, 0, 1, '1|onetime', '2038-01-01', 'N', '0000-00-00'),
(99903, 'MGMT-BOMS-Invoice', 'MGMT-BOMS-Invoice', 'CALL CLIENTInvoicesGenerate()', 'TECHSOFT', '2013-09-02 12:13:45', 80, NULL, 80, 1, 1, '0|4', '2013-10-01 00:00:00', 'N', '0000-00-00'),
(99904, 'MGMT-InvoiceRevertToPending', '', 'UPDATE invoice SET paymentstatus= ''PENDING'' WHERE laborcategory = ''MedImmune'' AND startdate=''2013-05-01'';\nSELECT * FROM invoice WHERE laborcategory = ''MedImmune'' AND startdate=''2013-05-01'';', 'TECHSOFT', '2013-08-20 19:08:44', 80, NULL, 80, 0, 1, '1|onetime', '2013-08-20 23:59:00', 'N', '0000-00-00'),
(99905, 'HRMS-MakeInvoiceAvailable', 'Use to make previous month invoice available', 'UPDATE invoice SET paymentstatus=''PENDING'' WHERE invoicenumber=''7500094150JUL13'';\nSELECT * FROM invoice WHERE invoicenumber=''7500094150JUL13'';\n'';', 'CIMS', '2013-09-09 11:13:41', 18, NULL, 18, 0, 1, '1|onetime', '2013-09-09 23:59:00', 'N', '0000-00-00'),
(99906, 'MGMT-RelastionshipsBuild', '', 'select\n NULL,\n 179,\n projectcategory,\n ponumber po,\n taskcode task,\n '''',\n id pid,\n jobcode,\n ''2013-01-01'',\n ''2038-01-01'',\n 80,\n now(),\n ''Initial Update'',\n 80,\n now() from project where jobcode=''LITIGATION''  and taskcode=''LT112''\nand currentflag=''Y''', 'BrownS_CIV_H1', '2013-10-24 17:40:53', 80, NULL, 80, 0, 1, '1|onetime', '2013-10-24 23:59:00', 'N', '0000-00-00'),
(99907, 'MGMT-FixCategories', '', ' select * from taskcategorytype;\n select * from taskcategory ;\nupdate taskcategory\nset type=5, category=''PREFILE'' where category=''BC13 - PREFILE'';', 'AEW', '2013-12-02 20:28:37', 80, NULL, 80, 0, 1, '1|onetime', '2013-12-02 23:59:00', 'N', '0000-00-00'),
(99908, 'LEGAL-ConsolidatedInvoice', 'Consolidated Invoice report script.', 'SELECT *\nFROM\n  InvoiceBalanceHistory ih inner JOIN invoice i ON (i.id = ih.invoiceid)\n   INNER JOIN invoicecategory ic ON (ic.category = i.laborcategory) WHERE year(i.startdate) = YEAR(NOW()) AND month(i.startdate) = 01 AND i.currentflag=''Y''\n', 'GreenB_R_H1', '2014-05-23 13:44:43', 18, NULL, 18, 0, 1, '1|onetime', '2014-05-23 23:59:00', 'N', '0000-00-00');

-- --------------------------------------------------------

--
-- Table structure for table `employee`
--
DROP TABLE IF EXISTS `employee`;
CREATE TABLE IF NOT EXISTS `employee` (
  `id` bigint(20) NOT NULL,
  `employeetemplateid` bigint(20) DEFAULT NULL,
  `salutation` varchar(25) DEFAULT NULL,
  `username` varchar(255) NOT NULL DEFAULT '',
  `password` varchar(255) NOT NULL DEFAULT '',
  `firstname` varchar(255) NOT NULL DEFAULT '',
  `middlename` varchar(255) DEFAULT NULL,
  `lastname` varchar(255) NOT NULL DEFAULT '',
  `initials` varchar(255) DEFAULT NULL,
  `gender` enum('Male','Female') DEFAULT NULL,
  `jobtitle` varchar(255) NOT NULL DEFAULT '',
  `blccode` varchar(255) DEFAULT NULL,
  `jobcategory` varchar(255) DEFAULT NULL,
  `department` varchar(255) DEFAULT NULL,
  `joblocation` varchar(255) DEFAULT NULL,
  `employeetype` varchar(10) DEFAULT NULL,
  `rateperhour` varchar(10) NOT NULL DEFAULT '',
  `account` varchar(10) NOT NULL DEFAULT '',
  `emailaddress` varchar(255) NOT NULL DEFAULT '',
  `personalemailaddress` varchar(255) DEFAULT NULL,
  `isactive` enum('Y','N') NOT NULL DEFAULT 'Y',
  `isadmin` enum('Y','N') NOT NULL DEFAULT 'N',
  `onvacation` enum('N','Y') NOT NULL DEFAULT 'N',
  `usertype` enum('Power','Normal') DEFAULT 'Normal',
  `mobilenumber` varchar(255) DEFAULT NULL,
  `tsgbadgenumber` varchar(255) DEFAULT NULL,
  `officeline1` varchar(50) DEFAULT NULL,
  `officeline2` varchar(50) DEFAULT NULL,
  `faxnumber` varchar(50) DEFAULT NULL,
  `address1` varchar(255) DEFAULT NULL,
  `address2` varchar(255) DEFAULT NULL,
  `stateorprovince` varchar(255) DEFAULT NULL,
  `postalcode` varchar(50) DEFAULT NULL,
  `country` varchar(255) DEFAULT NULL,
  `city` varchar(255) DEFAULT NULL,
  `companyname` varchar(255) DEFAULT '',
  `companyaddress` varchar(255) DEFAULT '',
  `ssn` varchar(20) DEFAULT NULL,
  `ein` varchar(20) DEFAULT NULL,
  `birthdate` datetime DEFAULT NULL,
  `hiredate` datetime DEFAULT NULL,
  `employeestartdate` datetime DEFAULT NULL,
  `employeeenddate` datetime DEFAULT NULL,
  `releasedate` datetime DEFAULT NULL,
  `lastreviewdate` datetime DEFAULT NULL,
  `nextreviewdate` datetime DEFAULT NULL,
  `supervisorname` varchar(255) DEFAULT NULL,
  `supervisoremail` varchar(255) DEFAULT NULL,
  `supervisorofficeline` varchar(255) DEFAULT NULL,
  `payrollfrequency` varchar(50) DEFAULT NULL,
  `paycode` varchar(10) DEFAULT NULL,
  `regularrate` decimal(10,2) NOT NULL DEFAULT '0.00',
  `regularratecode` varchar(10) DEFAULT NULL,
  `maximumregularhours` decimal(10,1) NOT NULL DEFAULT '8.0',
  `overtimeallowed` enum('Y','N') NOT NULL DEFAULT 'N',
  `overtimerate` decimal(10,2) DEFAULT NULL,
  `overtimeratecode` varchar(10) DEFAULT NULL,
  `maximumovertimehoursperday` decimal(10,1) DEFAULT NULL,
  `maximumhoursperday` decimal(10,0) NOT NULL,
  `maximumhoursperweek` decimal(10,0) NOT NULL,
  `maximumovertimehours` decimal(10,1) DEFAULT NULL,
  `vacationdaysallowed` enum('Y','N') NOT NULL DEFAULT 'N',
  `maximumsocialsecurity` decimal(10,0) DEFAULT NULL,
  `maximumvacationdays` decimal(10,2) DEFAULT NULL,
  `personaldaysallowed` enum('Y','N') NOT NULL DEFAULT 'N',
  `maximumpersonaldays` decimal(10,2) DEFAULT NULL,
  `paidholidaysallowed` enum('Y','N') NOT NULL DEFAULT 'N',
  `maximumpaidholidays` decimal(10,2) DEFAULT NULL,
  `sickdaysallowed` enum('Y','N') NOT NULL DEFAULT 'N',
  `maximumsickdays` decimal(10,2) DEFAULT NULL,
  `saturdayworkallowed` enum('Y','N') NOT NULL DEFAULT 'N',
  `sundayworkallowed` enum('Y','N') NOT NULL DEFAULT 'N',
  `publicholidayworkallowed` enum('Y','N') NOT NULL DEFAULT 'N',
  `employeebenefitsbillable` enum('N','Y') NOT NULL DEFAULT 'N',
  `invoicecategory` varchar(50) DEFAULT NULL,
  `employeejobs` varchar(240) DEFAULT NULL,
  `status` varchar(255) DEFAULT NULL,
  `createdby` bigint(20) NOT NULL DEFAULT '0',
  `datecreated` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `changedpassword` enum('Y','N') NOT NULL DEFAULT 'N',
  `lastupdatedby` varchar(20) DEFAULT NULL,
  `lastupdatedate` datetime DEFAULT NULL,
  `securityquestion` varchar(255) DEFAULT NULL,
  `answer` varchar(255) DEFAULT NULL,
  `disabledaily` enum('Y','N') NOT NULL DEFAULT 'N',
  `passwordexpirydate` datetime DEFAULT NULL,
  `canviewemployeeresources` enum('Y','N') DEFAULT 'N',
  `canviewpublicholidays` enum('Y','N') DEFAULT 'N',
  `canviewpayrolldates` enum('Y','N') DEFAULT 'N',
  `canviewtravelpolicy` enum('Y','N') DEFAULT 'N',
  `canview401kinformation` enum('Y','N') DEFAULT 'N',
  `canviewreferenceinformation` enum('Y','N') DEFAULT 'N',
  `ec1_firstname` varchar(255) DEFAULT NULL,
  `ec1_lastname` varchar(255) DEFAULT NULL,
  `ec1_streetaddress` varchar(255) DEFAULT NULL,
  `ec1_city` varchar(255) DEFAULT NULL,
  `ec1_state` varchar(255) DEFAULT NULL,
  `ec1_zipcode` varchar(255) DEFAULT NULL,
  `ec1_homephone` varchar(255) DEFAULT NULL,
  `ec1_workphone` varchar(255) DEFAULT NULL,
  `ec1_cellphone` varchar(255) DEFAULT NULL,
  `ec1_relationship` varchar(255) DEFAULT NULL,
  `ec2_firstname` varchar(255) DEFAULT NULL,
  `ec2_lastname` varchar(255) DEFAULT NULL,
  `ec2_streetaddress` varchar(255) DEFAULT NULL,
  `ec2_city` varchar(255) DEFAULT NULL,
  `ec2_state` varchar(255) DEFAULT NULL,
  `ec2_zipcode` varchar(255) DEFAULT NULL,
  `ec2_homephone` varchar(255) DEFAULT NULL,
  `ec2_workphone` varchar(255) DEFAULT NULL,
  `ec2_cellphone` varchar(255) DEFAULT NULL,
  `ec2_relationship` varchar(255) DEFAULT NULL,
  `ec3_firstname` varchar(255) DEFAULT NULL,
  `ec3_lastname` varchar(255) DEFAULT NULL,
  `ec3_streetaddress` varchar(255) DEFAULT NULL,
  `ec3_city` varchar(255) DEFAULT NULL,
  `ec3_state` varchar(255) DEFAULT NULL,
  `ec3_zipcode` varchar(255) DEFAULT NULL,
  `ec3_homephone` varchar(255) DEFAULT NULL,
  `ec3_workphone` varchar(255) DEFAULT NULL,
  `ec3_cellphone` varchar(255) DEFAULT NULL,
  `ec3_relationship` varchar(255) DEFAULT NULL,
  `permissiontemplate` bigint(20) NOT NULL,
  `companyid` int(11) NOT NULL,
  `categoryuser` enum('HRMS','Legal','Healthcare') NOT NULL DEFAULT 'HRMS',
  `uniqueid` int(15) DEFAULT NULL,
  `role` int(11) NOT NULL,
  `week_start` varchar(20) NOT NULL,
  `hour_wage` varchar(8) NOT NULL,
  `photo` varchar(250) NOT NULL DEFAULT 'None'
) ENGINE=InnoDB AUTO_INCREMENT=202 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `employee`
--

INSERT INTO `employee` (`id`, `employeetemplateid`, `salutation`, `username`, `password`, `firstname`, `middlename`, `lastname`, `initials`, `gender`, `jobtitle`, `blccode`, `jobcategory`, `department`, `joblocation`, `employeetype`, `rateperhour`, `account`, `emailaddress`, `personalemailaddress`, `isactive`, `isadmin`, `onvacation`, `usertype`, `mobilenumber`, `tsgbadgenumber`, `officeline1`, `officeline2`, `faxnumber`, `address1`, `address2`, `stateorprovince`, `postalcode`, `country`, `city`, `companyname`, `companyaddress`, `ssn`, `ein`, `birthdate`, `hiredate`, `employeestartdate`, `employeeenddate`, `releasedate`, `lastreviewdate`, `nextreviewdate`, `supervisorname`, `supervisoremail`, `supervisorofficeline`, `payrollfrequency`, `paycode`, `regularrate`, `regularratecode`, `maximumregularhours`, `overtimeallowed`, `overtimerate`, `overtimeratecode`, `maximumovertimehoursperday`, `maximumhoursperday`, `maximumhoursperweek`, `maximumovertimehours`, `vacationdaysallowed`, `maximumsocialsecurity`, `maximumvacationdays`, `personaldaysallowed`, `maximumpersonaldays`, `paidholidaysallowed`, `maximumpaidholidays`, `sickdaysallowed`, `maximumsickdays`, `saturdayworkallowed`, `sundayworkallowed`, `publicholidayworkallowed`, `employeebenefitsbillable`, `invoicecategory`, `employeejobs`, `status`, `createdby`, `datecreated`, `changedpassword`, `lastupdatedby`, `lastupdatedate`, `securityquestion`, `answer`, `disabledaily`, `passwordexpirydate`, `canviewemployeeresources`, `canviewpublicholidays`, `canviewpayrolldates`, `canviewtravelpolicy`, `canview401kinformation`, `canviewreferenceinformation`, `ec1_firstname`, `ec1_lastname`, `ec1_streetaddress`, `ec1_city`, `ec1_state`, `ec1_zipcode`, `ec1_homephone`, `ec1_workphone`, `ec1_cellphone`, `ec1_relationship`, `ec2_firstname`, `ec2_lastname`, `ec2_streetaddress`, `ec2_city`, `ec2_state`, `ec2_zipcode`, `ec2_homephone`, `ec2_workphone`, `ec2_cellphone`, `ec2_relationship`, `ec3_firstname`, `ec3_lastname`, `ec3_streetaddress`, `ec3_city`, `ec3_state`, `ec3_zipcode`, `ec3_homephone`, `ec3_workphone`, `ec3_cellphone`, `ec3_relationship`, `permissiontemplate`, `companyid`, `categoryuser`, `uniqueid`, `role`, `week_start`, `hour_wage`, `photo`) VALUES
(18, 0, 'Mr.', 'akirunda', '55b4205a5fdf9245b1cd5ed00bdf234a794af2a5', 'Andrew', '', 'Kirunda', '', 'Male', 'Administrator', '', 'Administrative', '', '', 'Contractor', '', '', 'akirunda@techsoftgroup.com', '', 'Y', 'Y', 'N', 'Power', '6092080252', 'TS1647', '', '', '', '', '', '', '', '', '', '', '', '', '', '0000-00-00 00:00:00', '2007-09-11 00:00:00', '2007-09-11 00:00:00', '2038-01-01 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '', '', '', 'Twice a Month', 'TSG', 1.00, 'RT', 10.0, 'Y', 1.00, 'OT', 4.0, 10, 40, 120.0, 'N', 0, 0.00, 'N', 0.00, 'N', 0.00, 'N', 0.00, 'Y', 'Y', 'Y', 'N', 'TQS', '1,6,9,11,13,47', 'Active', 1, '2006-02-02 15:30:00', 'Y', '18', '2015-03-20 09:41:00', 'What''s your mother''s maiden name?', 'Techsoft', 'Y', '2016-01-21 14:27:24', 'N', 'N', '', 'N', 'N', 'N', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'GEORGIA', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 0, 74, 'HRMS', 0, 2, 'sunday', '', ''),
(80, 2, 'Mr.', 'fryawe', '448ed7416fce2cb66c285d182b1ba3df1e90016d', 'Frederick', '', 'Yawe', '', 'Male', 'Administrator', '', 'Administrative', '10', 'Alabama', 'Contractor', '', '', 'yawef@me.com', '', 'Y', 'Y', 'N', 'Power', '6092080252', '', '', '', '', '', '', 'Alabama', '', 'United States', '', '', '260 Peachtree St, Atlanta, GA 30303', '', '', '0000-00-00 00:00:00', '2010-09-01 00:00:00', '2010-10-01 00:00:00', '2038-01-01 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '', '', '', 'Twice a Month', 'TSG', 0.00, '', 8.0, 'N', 0.00, '', 0.0, 40, 40, 0.0, 'N', 0, 0.00, 'N', 0.00, 'N', 0.00, 'N', 0.00, 'Y', 'Y', 'Y', 'N', 'TST', '', 'Active', 1, '2009-02-26 21:50:00', 'Y', '18', '2014-08-12 12:37:00', 'What''s your mother''s maiden name?', 'Brown', 'N', '2016-01-29 15:36:28', 'N', 'N', '', 'N', 'N', 'N', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 0, 74, 'HRMS', 0, 2, 'sunday', '12', ''),
(179, 0, 'Mr.', 'ATS001', '1e8c31478be557d7633d5ed8ed2aac5ea62cb685', 'William', '', 'Johnson', '', 'Male', 'Project Manager', '', 'Project Manager', '', '', 'Full-Time', '', '', 'wjohnson@techsoftgroup.com', '', 'Y', 'N', 'N', 'Normal', '4045551919', '', '', '4045551920', '', '', '', '', '', '', '', '', '', '', '', '1970-01-01 00:00:00', '2015-10-01 00:00:00', '2015-10-01 00:00:00', '2038-01-01 00:00:00', '2016-02-26 00:00:00', '2016-02-26 00:00:00', '2016-03-31 00:00:00', '', '', '', 'Twice a Month', 'ATS', 0.00, '', 8.0, '', 0.00, '', 0.0, 8, 40, 0.0, 'N', 0, 0.00, 'N', 0.00, 'N', 0.00, 'N', 0.00, 'N', 'N', 'N', 'N', 'ATS', '', 'Active', 18, '2015-11-13 00:00:00', 'Y', '18', '2015-11-22 19:31:03', 'What''s your mother''s maiden name?', 'techsoft', 'N', '2015-11-13 00:00:00', 'N', 'N', '', 'N', 'N', 'N', 'Elaine', 'Johnson', '10 Main St', 'Atlanta', 'GA', '30302', '4045552525', '4045552626', '4045552727', 'Spouse', 'Britney', 'Johnson', '25 Brook St', 'Waltham', 'MA', '02452', '7815551616', '7815551919', '7815552020', 'Sister', '', '', '', '', 'GA', '', '', '', '', '', 0, 74, 'HRMS', 0, 2, 'Sunday', '', ''),
(181, 0, 'Mrs.', 'ATS002', 'bb6d51c7521b376468f3b2ff486d856be503e4de', 'Susan', '', 'Brown', '', 'Female', '', '', 'Business Analysis', '', '', 'Contractor', '', '', 'sbrown@techsoftgroup.com', '', 'Y', 'N', 'N', 'Normal', '4045551919', '', '', '4045551920', '', '', '', '', '', '', '', 'Susan Brown Consultants', '120 Peachtree St, Atlanta, GA 30303', '', '', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2015-10-02 00:00:00', '2038-01-01 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '', '', '', 'Monthly', 'ATS', 0.00, '', 8.0, '', 0.00, '', 2.0, 10, 50, 0.0, '', 0, 0.00, '', 0.00, '', 0.00, '', 0.00, '', '', '', '', 'ATS', '', 'Active', 18, '2015-11-13 00:00:00', 'Y', '18', '2015-11-13 00:00:00', 'What''s your mother''s maiden name?', 'techsoft', 'N', '2015-11-13 00:00:00', '', '', '', '', '', '', 'Jacob', 'Brown', '56 Best St', 'Atlanta', 'GA', '30301', '7705551818', '7705552929', '7705552626', 'Spouse', 'Sam', 'Brown', '63 Macon St', 'Macon', 'GA', '30156', '7705551996', '7705551997', '7705551998', 'Father', '', '', '', '', '', '', '', '', '', '', 0, 0, 'HRMS', 0, 2, 'Sunday', '', ''),
(182, 0, 'Ms.', 'ATS003', '1e8c31478be557d7633d5ed8ed2aac5ea62cb685', 'Irene', '', 'Cloud', '', 'Female', '', '', '', '', '', 'Part-time', '', '', 'icloud@techsoftgroup.com', '', 'Y', 'N', 'N', 'Normal', '4045551818', '', '', '4045551819', '', '', '', '', '', '', '', '', '260 Peachtree St, Atlanta, GA 30303', '', '', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2012-01-01 00:00:00', '2038-01-01 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '', '', '', 'Twice a Month', 'ATS', 0.00, '', 8.0, '', 0.00, '', 0.0, 8, 40, 0.0, '', 0, 10.00, '', 2.00, '', 10.00, '', 3.00, '', '', '', '', 'ATS', '', 'Active', 18, '2015-11-13 00:00:00', 'Y', '18', '2015-11-13 00:00:00', 'What''s your mother''s maiden name?', 'techsoft', 'N', '2015-11-13 00:00:00', '', '', '', '', '', '', 'Jim', 'Cloud', '111 Baker St', 'Atlanta', 'GA', '30303', '4045552928', '', '4045552728', 'Spouse', 'Suzanne', 'James', '126 River St', 'Suwanee', 'GA', '30324', '7705554848', '7705554949', '7705555050', 'Friend', '', '', '', '', '', '', '', '', '', '', 0, 0, 'HRMS', 0, 2, 'Sunday', '', ''),
(183, 0, 'Ms.', 'ATS004', '7c222fb2927d828af22f592134e8932480637c0d', 'tsg', '', 'test', '', '', '', '', '', '', '', 'Contractor', '', '', 'ttest@techsoftgroup.com', '', 'Y', 'N', 'N', 'Normal', '4045551616', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2007-09-11 00:00:00', '2038-01-01 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '', '', '', 'Monthly', 'ATS', 0.00, '', 8.0, '', 0.00, '', 0.0, 10, 40, 0.0, '', 0, 0.00, '', 0.00, '', 0.00, '', 0.00, '', '', '', '', 'ATS', '', 'Active', 18, '2015-11-13 00:00:00', 'Y', '18', '2015-11-13 00:00:00', 'What''s your mother''s maiden name?', 'techsoft', 'N', '2015-11-13 00:00:00', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 0, 0, 'HRMS', 0, 2, 'Sunday', '', ''),
(184, 0, 'Mrs.', 'ATS005', '5eb84dbe39b02fcf45bd3d3c23d3a59bf910125d', 'Tina', '', 'Jackson', '', 'Female', '', '', '', 'Marketing', '', 'Part-time', '', '', 'tjackson@techsoftgroup.com', '', 'Y', 'N', 'N', 'Normal', '4045551515', '', '', '555 222 1212', '', '', '', '', '', '', '', '', '260 Peachtree St, Atlanta, GA 30303', '', '', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2012-01-01 00:00:00', '2038-01-01 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '', '', '', 'Twice a Month', 'ATS', 0.00, '', 8.0, '', 0.00, '', 0.0, 10, 50, 0.0, '', 0, 0.00, '', 0.00, '', 0.00, '', 0.00, '', '', '', '', 'ATS', '', 'Active', 18, '2015-11-13 00:00:00', 'Y', '18', '2015-11-13 00:00:00', 'What''s your mother''s maiden name?', 'techsoft', 'N', '2015-11-13 00:00:00', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 0, 0, 'HRMS', 0, 2, 'Sunday', '', ''),
(185, 0, 'Mr.', 'ATS006', '5eb84dbe39b02fcf45bd3d3c23d3a59bf910125d', 'Fred', '', 'Frisk', '', 'Male', '', '', 'Information Technology', '', '', 'Contractor', '', '', 'ffrisk@techsoftgroup.com', '', 'Y', 'N', 'N', 'Normal', '4045551717', '', '', '555 222 1212', '', '', '', '', '', '', '', 'Frisk Consulting', '180 Peachtree St, Atlanta, GA 30303', '', '', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2012-01-01 00:00:00', '2038-01-01 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '', '', '', 'Bi-Weekly', 'ATS', 0.00, '', 8.0, '', 0.00, '', 0.0, 10, 50, 0.0, '', 0, 0.00, '', 0.00, '', 0.00, '', 0.00, '', '', '', '', 'ATS', '', 'Active', 18, '2015-11-13 00:00:00', 'Y', '18', '2015-11-13 00:00:00', 'What''s your mother''s maiden name?', 'techsoft', 'N', '2015-11-13 00:00:00', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 0, 0, 'HRMS', 0, 2, 'Sunday', '', ''),
(186, 0, 'Mr.', 'ATS007', '5eb84dbe39b02fcf45bd3d3c23d3a59bf910125d', 'Tim', '', 'Ross', '', 'Male', '', '', 'Accounting', '', '', 'Full-Time', '', '', 'tross@techsoftgroup.com', '', 'Y', 'N', 'N', 'Normal', '4045551212', '', '', '555 222 1212', '', '', '', '', '', '', '', '', '260 Peachtree St, Atlanta, GA 30303', '', '', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2012-01-01 00:00:00', '2038-01-01 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '', '', '', 'Weekly', 'ATS', 0.00, '', 8.0, '', 0.00, '', 0.0, 10, 50, 0.0, '', 0, 0.00, '', 0.00, '', 0.00, '', 0.00, '', '', '', '', 'ATS', '', 'Active', 18, '2015-11-13 00:00:00', 'Y', '18', '2015-11-13 00:00:00', 'What''s your mother''s maiden name?', 'techsoft', 'N', '2015-11-13 00:00:00', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 0, 0, 'HRMS', 0, 2, 'Sunday', '', ''),
(187, 0, 'Ms.', 'ATS008', '5eb84dbe39b02fcf45bd3d3c23d3a59bf910125d', 'Rita', '', 'Baker', '', 'Female', '', '', '', '', '', 'Part-time', '', '', 'rbaker@techsoftgroup.com', '', 'Y', 'N', 'N', 'Normal', '4045551313', '', '', '555 222 1212', '', '', '', '', '', '', '', '', '260 Peachtree St, Atlanta, GA 30303', '', '', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2012-01-01 00:00:00', '2038-01-01 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '', '', '', 'Bi-Weekly', 'ATS', 0.00, '', 8.0, '', 0.00, '', 0.0, 10, 50, 0.0, '', 0, 0.00, '', 0.00, '', 0.00, '', 0.00, '', '', '', '', 'ATS', '', 'Active', 18, '2015-11-13 00:00:00', 'Y', '18', '2015-11-13 00:00:00', 'What''s your mother''s maiden name?', 'techsoft', 'N', '2015-11-13 00:00:00', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 0, 0, 'HRMS', 0, 2, 'Sunday', '', ''),
(188, 0, 'Mr.', 'ATS009', '5eb84dbe39b02fcf45bd3d3c23d3a59bf910125d', 'Sam', '', 'Baldwin', '', 'Male', '', '', '', '', '', 'Part-time', '', '', 'sbaldwin@techsoftgroup.com', '', 'Y', 'N', 'N', 'Normal', '4045551414', '', '', '555 222 1212', '', '', '', '', '', '', '', '', '260 Peachtree St, Atlanta, GA 30303', '', '', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2012-01-01 00:00:00', '2038-01-01 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '', '', '', 'Monthly', 'ATS', 0.00, '', 8.0, '', 0.00, '', 0.0, 10, 50, 0.0, '', 0, 0.00, '', 0.00, '', 0.00, '', 0.00, '', '', '', '', 'ATS', '', 'Active', 18, '2015-11-13 00:00:00', 'Y', '18', '2015-11-13 00:00:00', 'What''s your mother''s maiden name?', 'techsoft', 'N', '2015-11-13 00:00:00', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 0, 0, 'HRMS', 0, 2, 'Sunday', '', ''),
(189, 0, 'Mr.', 'ATS010', '172eb1ac68c1e9e025556f11beef08df511f0db3', 'Techsoft', '', 'Support', '', '', '', '', 'Tech Support', '', '', 'Agency', '', '', 'tsupport@techsoftgroup.com', '', 'Y', 'N', 'N', 'Normal', '4045551618', '', '', '555 222 1212', '', '', '', '', '', '', '', '', '260 Peachtree St, Atlanta, GA 30303', '', '', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2012-01-01 00:00:00', '2038-01-01 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '', '', '', 'Bi-Weekly', 'ATS', 0.00, '', 8.0, '', 0.00, '', 0.0, 10, 50, 0.0, '', 0, 0.00, '', 0.00, '', 0.00, '', 0.00, '', '', '', '', 'ATS', '', 'Active', 18, '2015-11-13 00:00:00', 'Y', '18', '2015-11-13 00:00:00', 'What''s your mother''s maiden name?', 'techsoft', 'N', '2015-11-13 00:00:00', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 0, 0, 'HRMS', 0, 2, 'Sunday', '', ''),
(190, 0, 'Ms.', 'ATS011', '172eb1ac68c1e9e025556f11beef08df511f0db3', 'Lillian', '', 'Moss', '', 'Female', '', '', 'Customer Service', '', '', 'Full-Time', '', '', 'lmoss@techsoftgroup.com', '', 'Y', 'N', 'N', 'Normal', '4045551111', '', '', '555 222 1212', '', '', '', '', '', '', '', '', '260 Peachtree St, Atlanta, GA 30303', '', '', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '2012-01-01 00:00:00', '2038-01-01 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '0000-00-00 00:00:00', '', '', '', '', 'ATS', 0.00, '', 8.0, '', 0.00, '', 0.0, 10, 50, 0.0, '', 0, 0.00, '', 0.00, '', 0.00, '', 0.00, '', '', '', '', 'ATS', '', 'Active', 18, '2015-11-13 00:00:00', 'Y', '18', '2015-11-13 00:00:00', 'What''s your mother''s maiden name?', 'techsoft', 'N', '2015-11-13 00:00:00', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 0, 0, 'HRMS', 0, 2, 'Sunday', '', ''),
(191, 0, '', 'ATS121', 'a7bce209422530b8c66d793dc3122ced832cb463', 'Test', '', 'Fred', '', 'Male', 'Mytest', '', 'SAS Programmer', '', 'Arizona', 'Full Time', '', 'ATS', 'yuva@mytest.com', '', 'Y', 'N', 'N', 'Normal', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', NULL, '2015-09-01 00:00:00', '2015-09-01 00:00:00', '2038-01-01 00:00:00', NULL, NULL, NULL, '', '', '', 'Monthly', NULL, 0.00, NULL, 8.0, 'N', NULL, NULL, NULL, 40, 40, NULL, 'N', 0, 0.00, 'N', 0.00, 'N', 0.00, 'N', 0.00, 'N', 'N', 'N', 'N', 'ATS', NULL, 'Active', 80, '2015-09-18 10:05:39', 'N', '80', '2015-09-18 10:05:39', NULL, NULL, 'N', '2015-12-17 10:05:39', 'N', 'N', '', 'N', 'N', 'N', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 0, 74, 'HRMS', NULL, 0, 'monday', '', ''),
(192, 0, '', 'ATS300', 'accb69f5fb57307f5438a1d88b92b9bf3e435238', 'Jim', '', 'Bronson', '', 'Male', 'Project Manager', '', 'Project Manager', '', '', 'Full Time', '', '', 'akirunda@techsoftbusinesssolutions.com', '', 'Y', 'N', 'N', 'Power', '6785551616', '', '', '', '', '', '', '', '', '', '', '', '', '', '', NULL, '2015-09-01 00:00:00', '2015-09-01 00:00:00', '2038-01-01 00:00:00', NULL, NULL, NULL, '', '', '', 'Twice a Month', NULL, 0.00, NULL, 8.0, 'N', NULL, NULL, NULL, 8, 40, NULL, 'Y', 0, 10.00, 'Y', 2.00, 'Y', 10.00, 'Y', 3.00, 'N', 'N', 'N', 'N', 'TECHSOFT_H_H1', NULL, 'Active', 18, '2015-10-23 16:45:43', 'N', '80', '2015-10-26 13:40:45', NULL, NULL, 'N', '2016-01-21 16:45:43', 'N', 'N', '', 'N', 'N', 'N', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 0, 111, 'HRMS', NULL, 0, 'sunday', '', ''),
(193, 0, '', 'ATS024', 'dee4c3cc192c9de8bf9742308b87a61482769472', 'Joseph', '', 'Malcox', '', 'Male', 'Programmer', '', 'SAS Programmer', '', '', 'Full Time', '', '', 'akirund@hotmail.com', '', 'Y', 'N', 'N', 'Power', '4045551819', '', '', '', '', '', '', '', '', '', '', '', '', '', '', NULL, '2015-10-01 00:00:00', '2015-10-01 00:00:00', '2038-01-01 00:00:00', NULL, NULL, NULL, '', '', '', 'Twice a Month', NULL, 0.00, NULL, 8.0, 'N', NULL, NULL, NULL, 8, 40, NULL, 'Y', 0, 10.00, 'Y', 2.00, 'Y', 10.00, 'Y', 3.00, 'N', 'N', 'N', 'N', 'TECHSOFT_H_H1', NULL, 'Active', 18, '2015-11-02 20:29:02', 'N', '18', '2015-11-02 23:01:47', NULL, NULL, 'N', '2016-01-31 20:29:02', 'N', 'N', '', 'N', 'N', 'N', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 0, 0, 'Legal', NULL, 0, 'sunday', '', ''),
(194, 2, 'Mr.', 'TST523', '5771c775b9e6e4e49c5514793fb3146167a0eb5f', 'FTS', '', 'YAWE', '', 'Male', 'SSD', '', 'Library Technologist', '21', 'Arkansas', 'Contractor', '', '', 'yawef@mes.com', '', 'Y', 'N', 'N', 'Normal', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', NULL, '2015-11-01 00:00:00', '2015-11-01 00:00:00', '2038-01-01 00:00:00', NULL, NULL, NULL, '', '', '', 'Monthly', NULL, 0.00, NULL, 8.0, 'N', NULL, NULL, NULL, 1, 1, NULL, 'N', 0, 0.00, 'N', 0.00, 'N', 0.00, 'N', 0.00, 'N', 'N', 'N', 'N', 'A4GINTERNALEXPENSES_F_F1', NULL, 'Active', 80, '2015-11-02 23:22:18', 'N', '182', '2015-11-05 00:08:45', NULL, NULL, 'N', '2016-01-31 23:22:18', 'N', 'N', '', 'N', 'N', 'N', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 0, 111, 'Legal', NULL, 0, 'sunday', '', ''),
(195, 0, '', 'ATS027', 'cedd4b9fb42fff47897e2caa806d87476276383a', 'Jonathan', '', 'Wise', '', 'Male', 'Developer', '', 'Developer', '', '', 'Full Time', '', 'CMS_H_H1', 'akirunda@hotmail.com', '', 'Y', 'N', 'N', 'Power', '7705558989', '', '', '', '', '', '', '', '', '', '', '', '', '', '', NULL, '2015-10-01 00:00:00', '2015-10-01 00:00:00', '2038-01-01 00:00:00', NULL, NULL, NULL, '', '', '', 'Twice a Month', NULL, 0.00, NULL, 8.0, 'N', NULL, NULL, NULL, 8, 40, NULL, 'Y', 0, 10.00, 'Y', 2.00, 'Y', 10.00, 'Y', 3.00, 'N', 'N', 'N', 'N', 'CMS_H_H1', NULL, 'Active', 18, '2015-11-02 23:36:14', 'N', '18', '2015-11-02 23:36:14', NULL, NULL, 'N', '2016-01-31 23:36:14', 'N', 'N', '', 'N', 'N', 'N', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 0, 0, '', NULL, 0, '', '', ''),
(196, 0, '', 'ATS028', '06ad10904775593a1029a6576fbd5e886fdfe1f1', 'Maxine', '', 'Jacobs', '', 'Female', 'Developer', '', 'Developer', '', '', 'Contractor', '', '', 'akirun@hotmail.com', '', 'Y', 'N', 'N', 'Power', '4045551919', '', '', '', '', '', '', '', '', '', '', '', '1200 Main St, Atlanta, GA 30306', '', '', NULL, '2015-10-01 00:00:00', '2015-10-01 00:00:00', '2038-01-01 00:00:00', NULL, NULL, NULL, '', '', '', 'Twice a Month', NULL, 0.00, NULL, 8.0, 'N', NULL, NULL, NULL, 9, 45, NULL, 'N', 0, 0.00, 'N', 0.00, 'N', 0.00, 'N', 0.00, 'N', 'N', 'N', 'N', 'CMS_H_H1', NULL, 'Active', 18, '2015-11-02 23:40:12', 'Y', '18', '2015-11-05 15:37:18', 'What''s your mother''s maiden name?', 'TECHSOFT', 'N', '2016-02-03 15:32:05', 'N', 'N', '', 'N', 'N', 'N', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 0, 112, 'Legal', NULL, 0, 'sunday', '', ''),
(197, 2, 'Dr.', 'ATS029', '06ad10904775593a1029a6576fbd5e886fdfe1f1', 'Jagden', '', 'Mustashe', '', 'Male', 'Business Analyst', '', 'Business Analyst', '', '', 'Contractor', '', '', 'akiru@techsoftbusinesssolutions.com', '', 'Y', 'N', 'N', 'Normal', '4045551818', '', '', '', '', '', '', '', '', '', '', '', '', '', '', NULL, '2015-10-01 00:00:00', '2015-10-01 00:00:00', '2038-01-01 00:00:00', NULL, NULL, NULL, '', '', '', 'Monthly', NULL, 0.00, NULL, 8.0, 'N', NULL, NULL, NULL, 8, 45, NULL, 'N', 0, 0.00, 'N', 0.00, 'N', 0.00, 'N', 0.00, 'N', 'N', 'N', 'N', 'CMS_H_H1', NULL, 'Active', 182, '2015-11-03 20:27:04', 'Y', '18', '2015-11-05 19:57:14', 'What''s your mother''s maiden name?', 'techsoft', 'N', '2016-02-03 15:05:24', 'N', 'N', '', 'N', 'N', 'N', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 0, 113, 'Legal', NULL, 0, 'sunday', '', ''),
(198, 0, 'Mr.', 'ATS031', 'a5edf69ff329d0f37351091f52bfe02a21f5f197', 'Frank', '', 'Devon', '', 'Male', 'Project Manager', '', 'Project Manager', '', '', 'Full Time', '', 'CMS_H_H1', 'akiru@techsoftgroup.com', '', 'Y', 'N', 'N', 'Normal', '4045551818', '', '', '', '', '', '', '', '', '', '', '', '', '', '', NULL, '2015-10-01 00:00:00', '2015-10-01 00:00:00', '2038-01-01 00:00:00', NULL, NULL, NULL, '', '', '', 'Twice a Month', NULL, 0.00, NULL, 8.0, 'N', NULL, NULL, NULL, 8, 45, NULL, 'Y', 0, 10.00, 'Y', 2.00, 'Y', 10.00, 'Y', 3.00, 'N', 'N', 'N', 'N', 'CMS_H_H1', NULL, 'Active', 182, '2015-11-05 01:02:08', 'N', '182', '2015-11-05 01:02:08', NULL, NULL, 'N', '2016-02-03 01:02:08', 'N', 'N', '', 'N', 'N', 'N', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 0, 0, '', NULL, 0, '', '', ''),
(199, 2, '', 'ATS050', '06ad10904775593a1029a6576fbd5e886fdfe1f1', 'Jeff', '', 'Boston', '', 'Male', 'Developer', '', 'Developer', '', '', 'Contractor', '', '', 'akirun@techsoftgroup.com', '', 'Y', 'N', 'N', 'Power', '7705558899', '', '', '', '', '', '', '', '', '', '', '', '', '', '', NULL, '2015-10-01 00:00:00', '2015-10-01 00:00:00', '2038-01-01 00:00:00', NULL, NULL, NULL, '', '', '', 'Monthly', NULL, 0.00, NULL, 8.0, 'N', NULL, NULL, NULL, 8, 40, NULL, 'N', 0, 0.00, 'N', 0.00, 'N', 0.00, 'N', 0.00, 'N', 'N', 'N', 'N', 'CMS_H_H1', NULL, 'Active', 18, '2015-11-05 16:26:56', 'Y', '18', '2015-11-05 16:39:04', 'What''s your mother''s maiden name?', 'techsoft', 'N', '2016-02-03 16:36:12', 'N', 'N', '', 'N', 'N', 'N', 'Jane', 'Boston', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 0, 112, 'Legal', NULL, 0, 'sunday', '', ''),
(200, 3, 'Dr.', 'TST524', '853912fe537fa92f1a10b897548df688f6cf2710', 'Jessica', '', 'Simon', '', 'Female', 'Busines Analyst', '', 'Business Analyst', 'NewAccounts', '', 'Full Time', '', 'ATS', 'ak@techsoftbusinesssolutions.com', '', 'Y', 'N', 'N', 'Normal', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', NULL, '2015-10-01 00:00:00', '2015-10-01 00:00:00', '2038-01-01 00:00:00', NULL, NULL, NULL, '', '', '', 'Twice a Month', NULL, 0.00, NULL, 8.0, 'N', NULL, NULL, NULL, 8, 40, NULL, 'Y', 0, 10.00, 'Y', 2.00, 'Y', 10.00, 'Y', 3.00, 'N', 'N', 'N', 'N', 'ATS', NULL, 'Active', 182, '2015-11-05 22:27:48', 'N', '182', '2015-11-05 22:27:48', NULL, NULL, 'N', '2016-02-03 22:27:48', 'N', 'N', '', 'N', 'N', 'N', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 0, 111, 'Legal', NULL, 0, 'sunday', '', ''),
(201, 3, '', 'TST525', 'c715eb7d77ba84931f4f63addab6ce74fadf05a4', 'Brian', '', 'Kenzo', '', 'Male', 'Developer', '', 'Developer', '', '', 'Full Time', '', 'CMS_H_H1', 'ank@techsoftbusinesssolutions.com', '', 'Y', 'N', 'N', 'Normal', '4045559898', '', '', '', '', '', '', '', '', '', '', '', '', '', '', NULL, '2015-10-01 00:00:00', '2015-10-01 00:00:00', '2038-01-01 00:00:00', NULL, NULL, NULL, '', '', '', 'Twice a Month', NULL, 0.00, NULL, 8.0, 'N', NULL, NULL, NULL, 8, 40, NULL, 'Y', 0, 10.00, 'Y', 2.00, 'Y', 10.00, 'Y', 3.00, 'N', 'N', 'N', 'N', 'CMS_H_H1', NULL, 'Active', 182, '2015-11-05 23:26:31', 'N', '182', '2015-11-05 23:26:31', NULL, NULL, 'N', '2016-02-03 23:26:31', 'N', 'N', '', 'N', 'N', 'N', 'Jolly', 'Golucky', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 0, 111, 'Legal', NULL, 0, 'sunday', '', '');

-- --------------------------------------------------------

--
-- Table structure for table `employeerelationship`
--
DROP TABLE IF EXISTS `employeerelationship`;
CREATE TABLE IF NOT EXISTS `employeerelationship` (
  `id` bigint(20) NOT NULL,
  `employeeid` bigint(20) NOT NULL,
  `contract` varchar(100) NOT NULL,
  `ponumber` varchar(10) DEFAULT '0000000000',
  `taskcode` varchar(200) DEFAULT NULL,
  `blccode` varchar(15) DEFAULT NULL,
  `jobid` bigint(20) NOT NULL,
  `jobnumber` varchar(30) NOT NULL,
  `relationshipstartdate` datetime NOT NULL,
  `relationshipenddate` datetime NOT NULL DEFAULT '2038-01-01 00:00:00',
  `lastupdatedby` bigint(20) DEFAULT NULL,
  `lastupdatedate` datetime DEFAULT NULL,
  `comment` mediumtext,
  `createdby` bigint(20) NOT NULL DEFAULT '0',
  `datecreated` datetime NOT NULL DEFAULT '0000-00-00 00:00:00'
) ENGINE=InnoDB AUTO_INCREMENT=300 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `employeerelationship`
--

INSERT INTO `employeerelationship` (`id`, `employeeid`, `contract`, `ponumber`, `taskcode`, `blccode`, `jobid`, `jobnumber`, `relationshipstartdate`, `relationshipenddate`, `lastupdatedby`, `lastupdatedate`, `comment`, `createdby`, `datecreated`) VALUES
(1, 179, 'ATS', 'POTRS00100', 'HRAdministrativ', '', 3, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(2, 179, 'ATS', 'POTRS00100', 'Onboarding', '', 2, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(3, 179, 'DefaultT_F_F1', 'POTSK00100', 'Adhoc Task', '', 1, 'ADHOC-TASK', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(4, 179, 'DELTA_F_F1', 'PODELTA123', 'Project Managem', '', 4, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(5, 179, 'DELTA_F_F1', 'PODELTA123', 'Business Analys', '', 5, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(6, 179, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Project Managem', '', 6, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(7, 179, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Programming', '', 7, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(8, 179, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Business Analys', '', 8, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(9, 181, 'ATS', 'POTRS00100', 'HRAdministrativ', '', 3, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(10, 181, 'ATS', 'POTRS00100', 'Onboarding', '', 2, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(11, 181, 'DefaultT_F_F1', 'POTSK00100', 'Adhoc Task', '', 1, 'ADHOC-TASK', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(12, 181, 'DELTA_F_F1', 'PODELTA123', 'Project Managem', '', 4, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(13, 181, 'DELTA_F_F1', 'PODELTA123', 'Business Analys', '', 5, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(14, 181, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Project Managem', '', 6, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(15, 181, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Programming', '', 7, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(16, 181, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Business Analys', '', 8, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(17, 182, 'ATS', 'POTRS00100', 'HRAdministrativ', '', 3, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(18, 182, 'ATS', 'POTRS00100', 'Onboarding', '', 2, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(19, 182, 'DefaultT_F_F1', 'POTSK00100', 'Adhoc Task', '', 1, 'ADHOC-TASK', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(20, 182, 'DELTA_F_F1', 'PODELTA123', 'Project Managem', '', 4, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(21, 182, 'DELTA_F_F1', 'PODELTA123', 'Business Analys', '', 5, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(22, 182, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Project Managem', '', 6, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(23, 182, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Programming', '', 7, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(24, 182, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Business Analys', '', 8, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(25, 183, 'ATS', 'POTRS00100', 'HRAdministrativ', '', 3, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(26, 183, 'ATS', 'POTRS00100', 'Onboarding', '', 2, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(27, 183, 'DefaultT_F_F1', 'POTSK00100', 'Adhoc Task', '', 1, 'ADHOC-TASK', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(28, 183, 'DELTA_F_F1', 'PODELTA123', 'Project Managem', '', 4, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(29, 183, 'DELTA_F_F1', 'PODELTA123', 'Business Analys', '', 5, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(30, 183, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Project Managem', '', 6, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(31, 183, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Programming', '', 7, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(32, 183, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Business Analys', '', 8, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(33, 184, 'ATS', 'POTRS00100', 'HRAdministrativ', '', 3, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(34, 184, 'ATS', 'POTRS00100', 'Onboarding', '', 2, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(35, 184, 'DefaultT_F_F1', 'POTSK00100', 'Adhoc Task', '', 1, 'ADHOC-TASK', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(36, 184, 'DELTA_F_F1', 'PODELTA123', 'Project Managem', '', 4, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(37, 184, 'DELTA_F_F1', 'PODELTA123', 'Business Analys', '', 5, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(38, 184, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Project Managem', '', 6, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(39, 184, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Programming', '', 7, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(40, 184, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Business Analys', '', 8, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(41, 185, 'ATS', 'POTRS00100', 'HRAdministrativ', '', 3, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(42, 185, 'ATS', 'POTRS00100', 'Onboarding', '', 2, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(43, 185, 'DefaultT_F_F1', 'POTSK00100', 'Adhoc Task', '', 1, 'ADHOC-TASK', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(44, 185, 'DELTA_F_F1', 'PODELTA123', 'Project Managem', '', 4, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(45, 185, 'DELTA_F_F1', 'PODELTA123', 'Business Analys', '', 5, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(46, 185, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Project Managem', '', 6, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(47, 185, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Programming', '', 7, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(48, 185, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Business Analys', '', 8, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(49, 186, 'ATS', 'POTRS00100', 'HRAdministrativ', '', 3, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(50, 186, 'ATS', 'POTRS00100', 'Onboarding', '', 2, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(51, 186, 'DefaultT_F_F1', 'POTSK00100', 'Adhoc Task', '', 1, 'ADHOC-TASK', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(52, 186, 'DELTA_F_F1', 'PODELTA123', 'Project Managem', '', 4, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(53, 186, 'DELTA_F_F1', 'PODELTA123', 'Business Analys', '', 5, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(54, 186, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Project Managem', '', 6, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(55, 186, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Programming', '', 7, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(56, 186, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Business Analys', '', 8, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(57, 187, 'ATS', 'POTRS00100', 'HRAdministrativ', '', 3, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(58, 187, 'ATS', 'POTRS00100', 'Onboarding', '', 2, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(59, 187, 'DefaultT_F_F1', 'POTSK00100', 'Adhoc Task', '', 1, 'ADHOC-TASK', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(60, 187, 'DELTA_F_F1', 'PODELTA123', 'Project Managem', '', 4, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(61, 187, 'DELTA_F_F1', 'PODELTA123', 'Business Analys', '', 5, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(62, 187, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Project Managem', '', 6, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(63, 187, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Programming', '', 7, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(64, 187, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Business Analys', '', 8, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(65, 188, 'ATS', 'POTRS00100', 'HRAdministrativ', '', 3, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(66, 188, 'ATS', 'POTRS00100', 'Onboarding', '', 2, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(67, 188, 'DefaultT_F_F1', 'POTSK00100', 'Adhoc Task', '', 1, 'ADHOC-TASK', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(68, 188, 'DELTA_F_F1', 'PODELTA123', 'Project Managem', '', 4, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(69, 188, 'DELTA_F_F1', 'PODELTA123', 'Business Analys', '', 5, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(70, 188, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Project Managem', '', 6, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(71, 188, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Programming', '', 7, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(72, 188, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Business Analys', '', 8, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(73, 189, 'ATS', 'POTRS00100', 'HRAdministrativ', '', 3, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(74, 189, 'ATS', 'POTRS00100', 'Onboarding', '', 2, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(75, 189, 'DefaultT_F_F1', 'POTSK00100', 'Adhoc Task', '', 1, 'ADHOC-TASK', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(76, 189, 'DELTA_F_F1', 'PODELTA123', 'Project Managem', '', 4, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(77, 189, 'DELTA_F_F1', 'PODELTA123', 'Business Analys', '', 5, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(78, 189, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Project Managem', '', 6, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(79, 189, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Programming', '', 7, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(80, 189, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Business Analys', '', 8, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(81, 190, 'ATS', 'POTRS00100', 'HRAdministrativ', '', 3, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(82, 190, 'ATS', 'POTRS00100', 'Onboarding', '', 2, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(83, 190, 'DefaultT_F_F1', 'POTSK00100', 'Adhoc Task', '', 1, 'ADHOC-TASK', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(84, 190, 'DELTA_F_F1', 'PODELTA123', 'Project Managem', '', 4, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(85, 190, 'DELTA_F_F1', 'PODELTA123', 'Business Analys', '', 5, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(86, 190, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Project Managem', '', 6, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(87, 190, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Programming', '', 7, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(88, 190, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Business Analys', '', 8, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(89, 191, 'ATS', 'POTRS00100', 'HRAdministrativ', '', 3, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(90, 191, 'ATS', 'POTRS00100', 'Onboarding', '', 2, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(91, 191, 'DefaultT_F_F1', 'POTSK00100', 'Adhoc Task', '', 1, 'ADHOC-TASK', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(92, 191, 'DELTA_F_F1', 'PODELTA123', 'Project Managem', '', 4, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(93, 191, 'DELTA_F_F1', 'PODELTA123', 'Business Analys', '', 5, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(94, 191, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Project Managem', '', 6, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(95, 191, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Programming', '', 7, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(96, 191, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Business Analys', '', 8, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(97, 192, 'ATS', 'POTRS00100', 'HRAdministrativ', '', 3, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(98, 192, 'ATS', 'POTRS00100', 'Onboarding', '', 2, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(99, 192, 'DefaultT_F_F1', 'POTSK00100', 'Adhoc Task', '', 1, 'ADHOC-TASK', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(100, 192, 'DELTA_F_F1', 'PODELTA123', 'Project Managem', '', 4, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(101, 192, 'DELTA_F_F1', 'PODELTA123', 'Business Analys', '', 5, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(102, 192, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Project Managem', '', 6, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(103, 192, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Programming', '', 7, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(104, 192, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Business Analys', '', 8, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(105, 193, 'ATS', 'POTRS00100', 'HRAdministrativ', '', 3, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(106, 193, 'ATS', 'POTRS00100', 'Onboarding', '', 2, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(107, 193, 'DefaultT_F_F1', 'POTSK00100', 'Adhoc Task', '', 1, 'ADHOC-TASK', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(108, 193, 'DELTA_F_F1', 'PODELTA123', 'Project Managem', '', 4, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(109, 193, 'DELTA_F_F1', 'PODELTA123', 'Business Analys', '', 5, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(110, 193, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Project Managem', '', 6, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(111, 193, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Programming', '', 7, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(112, 193, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Business Analys', '', 8, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(113, 194, 'ATS', 'POTRS00100', 'HRAdministrativ', '', 3, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(114, 194, 'ATS', 'POTRS00100', 'Onboarding', '', 2, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(115, 194, 'DefaultT_F_F1', 'POTSK00100', 'Adhoc Task', '', 1, 'ADHOC-TASK', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(116, 194, 'DELTA_F_F1', 'PODELTA123', 'Project Managem', '', 4, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(117, 194, 'DELTA_F_F1', 'PODELTA123', 'Business Analys', '', 5, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(118, 194, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Project Managem', '', 6, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(119, 194, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Programming', '', 7, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(120, 194, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Business Analys', '', 8, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(121, 195, 'ATS', 'POTRS00100', 'HRAdministrativ', '', 3, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(122, 195, 'ATS', 'POTRS00100', 'Onboarding', '', 2, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(123, 195, 'DefaultT_F_F1', 'POTSK00100', 'Adhoc Task', '', 1, 'ADHOC-TASK', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(124, 195, 'DELTA_F_F1', 'PODELTA123', 'Project Managem', '', 4, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(125, 195, 'DELTA_F_F1', 'PODELTA123', 'Business Analys', '', 5, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(126, 195, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Project Managem', '', 6, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(127, 195, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Programming', '', 7, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(128, 195, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Business Analys', '', 8, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(129, 196, 'ATS', 'POTRS00100', 'HRAdministrativ', '', 3, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(130, 196, 'ATS', 'POTRS00100', 'Onboarding', '', 2, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(131, 196, 'DefaultT_F_F1', 'POTSK00100', 'Adhoc Task', '', 1, 'ADHOC-TASK', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(132, 196, 'DELTA_F_F1', 'PODELTA123', 'Project Managem', '', 4, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(133, 196, 'DELTA_F_F1', 'PODELTA123', 'Business Analys', '', 5, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(134, 196, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Project Managem', '', 6, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(135, 196, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Programming', '', 7, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(136, 196, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Business Analys', '', 8, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(137, 197, 'ATS', 'POTRS00100', 'HRAdministrativ', '', 3, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(138, 197, 'ATS', 'POTRS00100', 'Onboarding', '', 2, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(139, 197, 'DefaultT_F_F1', 'POTSK00100', 'Adhoc Task', '', 1, 'ADHOC-TASK', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(140, 197, 'DELTA_F_F1', 'PODELTA123', 'Project Managem', '', 4, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(141, 197, 'DELTA_F_F1', 'PODELTA123', 'Business Analys', '', 5, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(142, 197, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Project Managem', '', 6, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(143, 197, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Programming', '', 7, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(144, 197, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Business Analys', '', 8, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(145, 198, 'ATS', 'POTRS00100', 'HRAdministrativ', '', 3, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(146, 198, 'ATS', 'POTRS00100', 'Onboarding', '', 2, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(147, 198, 'DefaultT_F_F1', 'POTSK00100', 'Adhoc Task', '', 1, 'ADHOC-TASK', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(148, 198, 'DELTA_F_F1', 'PODELTA123', 'Project Managem', '', 4, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(149, 198, 'DELTA_F_F1', 'PODELTA123', 'Business Analys', '', 5, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(150, 198, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Project Managem', '', 6, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(151, 198, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Programming', '', 7, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(152, 198, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Business Analys', '', 8, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(153, 199, 'ATS', 'POTRS00100', 'HRAdministrativ', '', 3, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(154, 199, 'ATS', 'POTRS00100', 'Onboarding', '', 2, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(155, 199, 'DefaultT_F_F1', 'POTSK00100', 'Adhoc Task', '', 1, 'ADHOC-TASK', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(156, 199, 'DELTA_F_F1', 'PODELTA123', 'Project Managem', '', 4, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(157, 199, 'DELTA_F_F1', 'PODELTA123', 'Business Analys', '', 5, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(158, 199, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Project Managem', '', 6, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(159, 199, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Programming', '', 7, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(160, 199, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Business Analys', '', 8, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(161, 200, 'ATS', 'POTRS00100', 'HRAdministrativ', '', 3, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(162, 200, 'ATS', 'POTRS00100', 'Onboarding', '', 2, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(163, 200, 'DefaultT_F_F1', 'POTSK00100', 'Adhoc Task', '', 1, 'ADHOC-TASK', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(164, 200, 'DELTA_F_F1', 'PODELTA123', 'Project Managem', '', 4, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(165, 200, 'DELTA_F_F1', 'PODELTA123', 'Business Analys', '', 5, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(166, 200, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Project Managem', '', 6, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(167, 200, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Programming', '', 7, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(168, 200, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Business Analys', '', 8, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(169, 201, 'ATS', 'POTRS00100', 'HRAdministrativ', '', 3, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(170, 201, 'ATS', 'POTRS00100', 'Onboarding', '', 2, 'ONBOARDING', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(171, 201, 'DefaultT_F_F1', 'POTSK00100', 'Adhoc Task', '', 1, 'ADHOC-TASK', '2015-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(172, 201, 'DELTA_F_F1', 'PODELTA123', 'Project Managem', '', 4, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(173, 201, 'DELTA_F_F1', 'PODELTA123', 'Business Analys', '', 5, 'DATA-MIGRATION', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(174, 201, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Project Managem', '', 6, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(175, 201, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Programming', '', 7, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(176, 201, 'HOMEDEPOT_H_H1', 'POHOMEDEPO', 'Business Analys', '', 8, 'SYSTEM-UPGRADE', '2015-10-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-13 16:29:54', 'Initial Update', 80, '2015-11-13 16:29:54'),
(256, 179, 'GDOT_F_F1', 'POGDOTFF1', 'Adhoc Task', '', 16, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 18:20:05', 'Initial Update', 80, '2015-11-20 18:20:05'),
(257, 181, 'GDOT_F_F1', 'POGDOTFF1', 'Adhoc Task', '', 16, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 18:20:05', 'Initial Update', 80, '2015-11-20 18:20:05'),
(258, 182, 'GDOT_F_F1', 'POGDOTFF1', 'Adhoc Task', '', 16, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 18:20:05', 'Initial Update', 80, '2015-11-20 18:20:05'),
(259, 183, 'GDOT_F_F1', 'POGDOTFF1', 'Adhoc Task', '', 16, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 18:20:05', 'Initial Update', 80, '2015-11-20 18:20:05'),
(260, 184, 'GDOT_F_F1', 'POGDOTFF1', 'Adhoc Task', '', 16, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 18:20:05', 'Initial Update', 80, '2015-11-20 18:20:05'),
(261, 185, 'GDOT_F_F1', 'POGDOTFF1', 'Adhoc Task', '', 16, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 18:20:05', 'Initial Update', 80, '2015-11-20 18:20:05'),
(262, 186, 'GDOT_F_F1', 'POGDOTFF1', 'Adhoc Task', '', 16, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 18:20:06', 'Initial Update', 80, '2015-11-20 18:20:06'),
(263, 187, 'GDOT_F_F1', 'POGDOTFF1', 'Adhoc Task', '', 16, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 18:20:06', 'Initial Update', 80, '2015-11-20 18:20:06'),
(264, 188, 'GDOT_F_F1', 'POGDOTFF1', 'Adhoc Task', '', 16, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 18:20:06', 'Initial Update', 80, '2015-11-20 18:20:06'),
(265, 189, 'GDOT_F_F1', 'POGDOTFF1', 'Adhoc Task', '', 16, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 18:20:06', 'Initial Update', 80, '2015-11-20 18:20:06'),
(266, 190, 'GDOT_F_F1', 'POGDOTFF1', 'Adhoc Task', '', 16, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 18:20:06', 'Initial Update', 80, '2015-11-20 18:20:06'),
(267, 191, 'GDOT_F_F1', 'POGDOTFF1', 'Adhoc Task', '', 16, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 18:20:06', 'Initial Update', 80, '2015-11-20 18:20:06'),
(268, 192, 'GDOT_F_F1', 'POGDOTFF1', 'Adhoc Task', '', 16, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 18:20:06', 'Initial Update', 80, '2015-11-20 18:20:06'),
(269, 193, 'GDOT_F_F1', 'POGDOTFF1', 'Adhoc Task', '', 16, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 18:20:06', 'Initial Update', 80, '2015-11-20 18:20:06'),
(270, 194, 'GDOT_F_F1', 'POGDOTFF1', 'Adhoc Task', '', 16, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 18:20:06', 'Initial Update', 80, '2015-11-20 18:20:06'),
(271, 195, 'GDOT_F_F1', 'POGDOTFF1', 'Adhoc Task', '', 16, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 18:20:06', 'Initial Update', 80, '2015-11-20 18:20:06'),
(272, 196, 'GDOT_F_F1', 'POGDOTFF1', 'Adhoc Task', '', 16, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 18:20:06', 'Initial Update', 80, '2015-11-20 18:20:06'),
(273, 197, 'GDOT_F_F1', 'POGDOTFF1', 'Adhoc Task', '', 16, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 18:20:06', 'Initial Update', 80, '2015-11-20 18:20:06'),
(274, 198, 'GDOT_F_F1', 'POGDOTFF1', 'Adhoc Task', '', 16, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 18:20:06', 'Initial Update', 80, '2015-11-20 18:20:06'),
(275, 199, 'GDOT_F_F1', 'POGDOTFF1', 'Adhoc Task', '', 16, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 18:20:07', 'Initial Update', 80, '2015-11-20 18:20:07'),
(276, 200, 'GDOT_F_F1', 'POGDOTFF1', 'Adhoc Task', '', 16, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 18:20:07', 'Initial Update', 80, '2015-11-20 18:20:07'),
(277, 201, 'GDOT_F_F1', 'POGDOTFF1', 'Adhoc Task', '', 16, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 18:20:07', 'Initial Update', 80, '2015-11-20 18:20:07'),
(278, 179, 'FULTONCOUNTY_H_H1', 'POFULTONCO', 'Adhoc Task', '', 17, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 19:20:04', 'Initial Update', 80, '2015-11-20 19:20:04'),
(279, 181, 'FULTONCOUNTY_H_H1', 'POFULTONCO', 'Adhoc Task', '', 17, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 19:20:04', 'Initial Update', 80, '2015-11-20 19:20:04'),
(280, 182, 'FULTONCOUNTY_H_H1', 'POFULTONCO', 'Adhoc Task', '', 17, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 19:20:04', 'Initial Update', 80, '2015-11-20 19:20:04'),
(281, 183, 'FULTONCOUNTY_H_H1', 'POFULTONCO', 'Adhoc Task', '', 17, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 19:20:04', 'Initial Update', 80, '2015-11-20 19:20:04'),
(282, 184, 'FULTONCOUNTY_H_H1', 'POFULTONCO', 'Adhoc Task', '', 17, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 19:20:05', 'Initial Update', 80, '2015-11-20 19:20:05'),
(283, 185, 'FULTONCOUNTY_H_H1', 'POFULTONCO', 'Adhoc Task', '', 17, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 19:20:05', 'Initial Update', 80, '2015-11-20 19:20:05'),
(284, 186, 'FULTONCOUNTY_H_H1', 'POFULTONCO', 'Adhoc Task', '', 17, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 19:20:05', 'Initial Update', 80, '2015-11-20 19:20:05'),
(285, 187, 'FULTONCOUNTY_H_H1', 'POFULTONCO', 'Adhoc Task', '', 17, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 19:20:05', 'Initial Update', 80, '2015-11-20 19:20:05'),
(286, 188, 'FULTONCOUNTY_H_H1', 'POFULTONCO', 'Adhoc Task', '', 17, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 19:20:05', 'Initial Update', 80, '2015-11-20 19:20:05'),
(287, 189, 'FULTONCOUNTY_H_H1', 'POFULTONCO', 'Adhoc Task', '', 17, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 19:20:05', 'Initial Update', 80, '2015-11-20 19:20:05'),
(288, 190, 'FULTONCOUNTY_H_H1', 'POFULTONCO', 'Adhoc Task', '', 17, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 19:20:05', 'Initial Update', 80, '2015-11-20 19:20:05'),
(289, 191, 'FULTONCOUNTY_H_H1', 'POFULTONCO', 'Adhoc Task', '', 17, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 19:20:05', 'Initial Update', 80, '2015-11-20 19:20:05'),
(290, 192, 'FULTONCOUNTY_H_H1', 'POFULTONCO', 'Adhoc Task', '', 17, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 19:20:05', 'Initial Update', 80, '2015-11-20 19:20:05'),
(291, 193, 'FULTONCOUNTY_H_H1', 'POFULTONCO', 'Adhoc Task', '', 17, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 19:20:06', 'Initial Update', 80, '2015-11-20 19:20:06'),
(292, 194, 'FULTONCOUNTY_H_H1', 'POFULTONCO', 'Adhoc Task', '', 17, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 19:20:06', 'Initial Update', 80, '2015-11-20 19:20:06'),
(293, 195, 'FULTONCOUNTY_H_H1', 'POFULTONCO', 'Adhoc Task', '', 17, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 19:20:06', 'Initial Update', 80, '2015-11-20 19:20:06'),
(294, 196, 'FULTONCOUNTY_H_H1', 'POFULTONCO', 'Adhoc Task', '', 17, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 19:20:06', 'Initial Update', 80, '2015-11-20 19:20:06'),
(295, 197, 'FULTONCOUNTY_H_H1', 'POFULTONCO', 'Adhoc Task', '', 17, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 19:20:06', 'Initial Update', 80, '2015-11-20 19:20:06'),
(296, 198, 'FULTONCOUNTY_H_H1', 'POFULTONCO', 'Adhoc Task', '', 17, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 19:20:06', 'Initial Update', 80, '2015-11-20 19:20:06'),
(297, 199, 'FULTONCOUNTY_H_H1', 'POFULTONCO', 'Adhoc Task', '', 17, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 19:20:06', 'Initial Update', 80, '2015-11-20 19:20:06'),
(298, 200, 'FULTONCOUNTY_H_H1', 'POFULTONCO', 'Adhoc Task', '', 17, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 19:20:06', 'Initial Update', 80, '2015-11-20 19:20:06'),
(299, 201, 'FULTONCOUNTY_H_H1', 'POFULTONCO', 'Adhoc Task', '', 17, 'ADHOC-TASK', '2013-01-01 00:00:00', '2038-01-01 00:00:00', 80, '2015-11-20 19:20:06', 'Initial Update', 80, '2015-11-20 19:20:06');

-- --------------------------------------------------------

--
-- Table structure for table `EMRStatus`
--

CREATE TABLE IF NOT EXISTS `EMRStatus` (
  `id` bigint(20) NOT NULL,
  `module` varchar(30) NOT NULL,
  `description` varchar(255) DEFAULT NULL,
  `status` mediumtext NOT NULL,
  `category` varchar(200) NOT NULL,
  `comments` varchar(255) NOT NULL,
  `ts_begin` datetime NOT NULL,
  `nodes` int(11) NOT NULL
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `EMRStatus`
--

INSERT INTO `EMRStatus` (`id`, `module`, `description`, `status`, `category`, `comments`, `ts_begin`, `nodes`) VALUES
(1, 'asdasd', 'sadasd', 'sadasd', 'asdasd', 'asdasd', '2015-04-04 00:00:00', 0),
(2, 'sadasd', 'asdasd', 'asdasd', 'sadasd', 'asdasd', '2015-04-04 00:00:00', 0),
(3, 'asdasd', 'asdasd', 'asdasd', 'asdsad', 'asdsad', '2015-04-04 00:00:00', 0),
(4, 'asdasd', 'asdasd', 'asdasd', 'asdsad', 'asdsad', '2015-04-04 00:00:00', 0),
(5, 'asdasd', 'asdasd', 'asdasd', 'asdsad', 'asdsad', '2015-04-04 00:00:00', 0),
(6, 'asdasd', 'asdasd', 'asdasd', 'asdsad', 'asdsad', '2015-04-04 00:00:00', 0),
(7, 'asdasd', 'asdasd', 'asdasd', 'asdsad', 'asdsad', '2015-04-04 00:00:00', 0),
(8, 'asdasd', 'asdasd', 'asdasd', 'asdsad', 'asdsad', '2015-04-04 00:00:00', 0),
(9, 'asdasd', 'asdasd', 'asdasd', 'asdsad', 'asdsad', '2015-04-04 00:00:00', 0),
(10, 'asdasd', 'asdasd', 'asdasd', 'asdsad', 'asdsad', '2015-04-04 00:00:00', 0),
(11, 'asdasd', 'asdasd', 'asdasd', 'asdsad', 'asdsad', '2015-04-04 00:00:00', 0),
(12, 'asdasd', 'asdasd', 'asdasd', 'asdsad', 'asdsad', '2015-04-04 00:00:00', 0);

--
-- Indexes for dumped tables
--

--
-- Indexes for table `customreport`
--
ALTER TABLE `customreport`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `employee`
--
ALTER TABLE `employee`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `username` (`username`),
  ADD UNIQUE KEY `emailaddress` (`emailaddress`),
  ADD KEY `account` (`account`),
  ADD KEY `changedpassword` (`changedpassword`),
  ADD KEY `employeetype` (`employeetype`),
  ADD KEY `gender` (`gender`),
  ADD KEY `invoicecategory` (`invoicecategory`),
  ADD KEY `isactive` (`isactive`),
  ADD KEY `isadmin` (`isadmin`),
  ADD KEY `status` (`status`),
  ADD KEY `EmpId` (`id`);

--
-- Indexes for table `employeerelationship`
--
ALTER TABLE `employeerelationship`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `uniquerelationship` (`employeeid`,`contract`,`ponumber`,`taskcode`,`blccode`,`jobid`,`relationshipstartdate`,`relationshipenddate`),
  ADD KEY `contract` (`contract`),
  ADD KEY `employee_jobid` (`jobid`,`employeeid`),
  ADD KEY `EmpId` (`employeeid`),
  ADD KEY `EmpIdJobContract` (`employeeid`,`jobnumber`,`ponumber`,`contract`),
  ADD KEY `IDX_TASKCODE` (`taskcode`);

--
-- Indexes for table `EMRStatus`
--
ALTER TABLE `EMRStatus`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `customreport`
--
ALTER TABLE `customreport`
  MODIFY `id` bigint(20) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=99909;
--
-- AUTO_INCREMENT for table `employee`
--
ALTER TABLE `employee`
  MODIFY `id` bigint(20) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=202;
--
-- AUTO_INCREMENT for table `employeerelationship`
--
ALTER TABLE `employeerelationship`
  MODIFY `id` bigint(20) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=300;
--
-- AUTO_INCREMENT for table `EMRStatus`
--
ALTER TABLE `EMRStatus`
  MODIFY `id` bigint(20) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=13;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;

-- phpMyAdmin SQL Dump
-- version 4.4.12
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: Dec 06, 2017 at 06:24 PM
-- Server version: 5.5.44-0ubuntu0.14.04.1-log
-- PHP Version: 5.5.9-1ubuntu4.13

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- Database: `hrms`
--
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;

TRUNCATE TABLE EMRStatus;
TRUNCATE TABLE customreport;
ALTER TABLE `customreport` CHANGE `datecreated` `datecreated` DATETIME NULL, CHANGE `createdby` `createdby` BIGINT(20) NULL, CHANGE `lastupdatedon` `lastupdatedon` DATETIME NULL, CHANGE `lastupdatedby` `lastupdatedby` BIGINT(20) NULL, CHANGE `issendemail` `issendemail` TINYINT(1) NULL, CHANGE `isactive` `isactive` TINYINT(1) NULL, CHANGE `expirytype` `expirytype` VARCHAR(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL, CHANGE `expirydate` `expirydate` VARCHAR(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL, CHANGE `postpone` `postpone` ENUM('N','Y') CHARACTER SET utf8 COLLATE utf8_general_ci NULL, CHANGE `date` `date` DATE NULL;

ALTER TABLE `customreport` ADD `bucket` VARCHAR(255) NULL AFTER `category`;/** Renamed to hadoop_status **/
DROP TABLE IF EXISTS `EMRStatus`;

--
-- Table structure for table `hadoop_status`
--

DROP TABLE IF EXISTS `hadoop_status`;
CREATE TABLE IF NOT EXISTS `hadoop_status` (
  `id` bigint(20) AUTO_INCREMENT PRIMARY KEY,
  `module` varchar(30) NOT NULL,
  `description` varchar(255) DEFAULT NULL,
  `status` mediumtext NOT NULL,
  `category` varchar(200) NOT NULL,
  `comments` varchar(255) NOT NULL,
  `ts_begin` datetime NOT NULL,
  `nodes` int(11) NOT NULL,
  `uuid` char(38) NOT NULL,
  UNIQUE KEY `unique_hadoop_status_uuid` (`uuid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Table structure for table `mpp_status`
--
DROP TABLE IF EXISTS `mpp_status`;
CREATE TABLE IF NOT EXISTS `mpp_status` (
  `id` bigint(20) AUTO_INCREMENT PRIMARY KEY,
  `module` varchar(30) NOT NULL,
  `description` varchar(255) DEFAULT NULL,
  `status` mediumtext NOT NULL,
  `category` varchar(200) NOT NULL,
  `comments` varchar(255) NOT NULL,
  `ts_begin` datetime NOT NULL,
  `nodes` int(11) NOT NULL,
  `uuid` char(38) NOT NULL,
  UNIQUE KEY `unique_mpp_status_uuid` (`uuid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;


/** Added new columns **/
DROP TABLE IF EXISTS `notification`;
CREATE TABLE IF NOT EXISTS `notification`(
  id int auto_increment primary key,
  `action` mediumtext NOT NULL,
  `user` varchar(50) COLLATE utf8_unicode_ci NOT NULL,
  category varchar(255) NULL,
  start_time timestamp default CURRENT_TIMESTAMP not null,
  end_time timestamp,
  status int null,
  output mediumtext null,
  process_id int null,
  account_id int null,
  user_id int null,
  datecreated timestamp default CURRENT_TIMESTAMP not null
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;/*!40101 SET @OLD_CHARACTER_SET_CLIENT = @@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS = @@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION = @@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE = @@TIME_ZONE */;
/*!40103 SET TIME_ZONE = '+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS = @@UNIQUE_CHECKS, UNIQUE_CHECKS = 0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS = 0 */;
/*!40101 SET @OLD_SQL_MODE = @@SQL_MODE, SQL_MODE = 'NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES = @@SQL_NOTES, SQL_NOTES = 0 */;
--
-- Table structure for table `account`
--
DROP TABLE IF EXISTS `account`;
CREATE TABLE IF NOT EXISTS `account`
(
  `id`   BIGINT(20) AUTO_INCREMENT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  UNIQUE INDEX account_name (`name`),
  `uuid` char(38) NOT NULL,
  UNIQUE KEY `unique_account_uuid` (`uuid`),
  PRIMARY KEY (`id`)
)
  DEFAULT CHARACTER SET utf8
  COLLATE utf8_unicode_ci
  ENGINE = InnoDB;

--
-- Dumping data for table `account`
--
INSERT INTO account (`id`, `name`, `uuid`) VALUES (1, 'Acme Corp', '336761a8-3122-4877-b04a-a4281be6f1dc'), (2, 'Rutrum Industries', 'dd8ec1e5-dd47-42af-be55-f53584753f8e');

--
-- Table structure for table `app_user`
--
DROP TABLE IF EXISTS `app_user`;
CREATE TABLE IF NOT EXISTS `app_user` (
  `id`                       BIGINT(20) AUTO_INCREMENT NOT NULL COMMENT '(DC2Type:msgphp_user_id)',
  `credential_nickname`      VARCHAR(255) NOT NULL,
  `credential_password`      VARCHAR(255) NOT NULL,
  `password_reset_token`     VARCHAR(255) DEFAULT NULL,
  `password_requested_at`    DATETIME     DEFAULT NULL,
  `account_id`          BIGINT(20) NOT NULL,
  `employeetemplateid` bigint(20) DEFAULT NULL,
  `salutation` varchar(25) DEFAULT '',
  `firstname` varchar(255) NOT NULL DEFAULT '',
  `middlename` varchar(255) DEFAULT '',
  `lastname` varchar(255) NOT NULL DEFAULT '',
  `initials` varchar(255) DEFAULT '',
  `gender` enum('Male','Female') DEFAULT NULL,
  `jobtitle` varchar(255) NOT NULL DEFAULT '',
  `blccode` varchar(255) DEFAULT '',
  `jobcategory` varchar(255) DEFAULT '',
  `department` varchar(255) DEFAULT '',
  `joblocation` varchar(255) DEFAULT '',
  `employeetype` varchar(10) DEFAULT '',
  `rateperhour` varchar(10) NOT NULL DEFAULT '',
  `account` varchar(10) NOT NULL DEFAULT '',
  `emailaddress` varchar(255) NOT NULL DEFAULT '',
  `personalemailaddress` varchar(255) DEFAULT '',
  `uuid` char(38) NOT NULL,
  UNIQUE INDEX app_user_credential_nickname(`credential_nickname`),
  UNIQUE KEY `unique_app_user_uuid` (`uuid`),
  PRIMARY KEY (`id`)
)
  DEFAULT CHARACTER SET utf8
  COLLATE utf8_unicode_ci
  ENGINE = InnoDB;

ALTER TABLE app_user
  ADD CONSTRAINT fk_app_user_account FOREIGN KEY (account_id) REFERENCES account (id);

--
-- Dumping data for table `app_user`
--
INSERT INTO `app_user` (`id`, `credential_nickname`,`credential_password`, `firstname`, `lastname`, `account_id`, `blccode`, `uuid`) VALUES (1, 'admin', '$2y$13$2A.mwmtd1brc07i5W3e16Ol42keJ1ATtxmkf3KcCc16jZ9OGlBCp6', 'System', 'Admin', 1, 'AB123', '3f35cde5-0f47-4c5f-bb59-31bbafcc9c64
'), (2, 'ATS002', '$2y$13$2A.mwmtd1brc07i5W3e16Ol42keJ1ATtxmkf3KcCc16jZ9OGlBCp6', 'John', 'Doe', 1, 'AB123', 'f1cc1e22-6fce-4ce1-88e1-faf704ecf123
'),(3, 'ATS003', '$2y$13$2A.mwmtd1brc07i5W3e16Ol42keJ1ATtxmkf3KcCc16jZ9OGlBCp6', 'Jean', 'Black', 2, 'CD789', '6eb865f7-d5d6-4f04-bf6d-4a0ee05a8081'),(4, 'ATS004', '$2y$13$2A.mwmtd1brc07i5W3e16Ol42keJ1ATtxmkf3KcCc16jZ9OGlBCp6', 'Frank', 'Morris', 2, 'CD789', '5df79a88-b73d-47c6-b482-eb681f3c9b4d'),
(5, 'fryawe', '$2y$13$K13evaPHxa.TBo0ORC8A\/eBHDUmUDVk7ovdElljO9rWRKDfmqBpTS', 'Fred','Yawe', 2, 'AFG89', 'bb1de4ca-e7ee-49e9-8096-f3fa45082e2b'),
(NULL, 'b.yuvaraj.er', '$2y$13$K13evaPHxa.TBo0ORC8A\/eBHDUmUDVk7ovdElljO9rWRKDfmqBpTS', 'Yuva','B', 2, 'AFG1234', 'bb1ase4ca-e7ee-49e9-8096-f3fa45082e2b');

--
-- table structure for filewatcher
--
DROP TABLE IF EXISTS `filewatcher`;
CREATE TABLE IF NOT EXISTS `filewatcher` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `title` varchar(30) NOT NULL,
  `description` varchar(255) DEFAULT NULL,
  `querystring` mediumtext NOT NULL,
  `category` varchar(200) NOT NULL,
  `bucket` varchar(255) DEFAULT NULL,
  `datecreated` datetime DEFAULT NULL,
  `createdby` bigint(20) DEFAULT NULL,
  `lastupdatedon` datetime DEFAULT NULL,
  `lastupdatedby` bigint(20) DEFAULT NULL,
  `issendemail` tinyint(1) DEFAULT NULL,
  `isactive` tinyint(1) DEFAULT NULL,
  `expirytype` varchar(255) DEFAULT NULL,
  `expirydate` varchar(255) DEFAULT NULL,
  `postpone` enum('N','Y') DEFAULT NULL,
  `status` varchar(255) NOT NULL DEFAULT 'Pending',
  `color` VARCHAR(25) NOT NULL DEFAULT 'orange',
  `date` date DEFAULT NULL,
  `uuid` char(38) NOT NULL,
  UNIQUE KEY `unique_filewatcher_uuid` (`uuid`),
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Table structure for table `role`
--
DROP TABLE IF EXISTS `role`;
CREATE TABLE IF NOT EXISTS `role` (
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`name`)
)
  DEFAULT CHARACTER SET utf8
  COLLATE utf8_unicode_ci
  ENGINE = InnoDB;

--
-- Dumping data for table `role`
--
INSERT INTO `role` (`name`) VALUES ('ROLE_ADMIN'), ('ROLE_USER');
--
-- Table structure for table `user_role`
--
DROP TABLE IF EXISTS user_role;
CREATE TABLE IF NOT EXISTS user_role (
  user_id   BIGINT(20) NOT NULL COMMENT '(DC2Type:msgphp_user_id)',
  role_name VARCHAR(255) NOT NULL,
  INDEX idx_user_role_user_id (user_id),
  INDEX idx_user_role_role_name (role_name),
  PRIMARY KEY (user_id, role_name)
)
  DEFAULT CHARACTER SET utf8
  COLLATE utf8_unicode_ci
  ENGINE = InnoDB;

ALTER TABLE user_role
  ADD CONSTRAINT fk_user_role_user FOREIGN KEY (user_id) REFERENCES user (id) ON DELETE CASCADE;
ALTER TABLE user_role
  ADD CONSTRAINT fk_user_role_role FOREIGN KEY (role_name) REFERENCES role (name) ON DELETE CASCADE;

--
-- Dumping data for table `role`
--
INSERT INTO `user_role` (`user_id`, `role_name`) VALUES (1, 'ROLE_ADMIN'), (2, 'ROLE_USER'), (3, 'ROLE_USER'), (4, 'ROLE_USER');


--
-- table structure for simulation
--
DROP TABLE IF EXISTS `simulation`;
CREATE TABLE IF NOT EXISTS `simulation` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `title` varchar(30) NOT NULL,
  `description` varchar(255) DEFAULT NULL,
  `querystring` mediumtext NOT NULL,
  `category` varchar(200) NOT NULL,
  `bucket` varchar(255) DEFAULT NULL,
  `datecreated` datetime DEFAULT NULL,
  `createdby` bigint(20) DEFAULT NULL,
  `lastupdatedon` datetime DEFAULT NULL,
  `lastupdatedby` bigint(20) DEFAULT NULL,
  `issendemail` tinyint(1) DEFAULT NULL,
  `isactive` tinyint(1) DEFAULT NULL,
  `expirytype` varchar(255) DEFAULT NULL,
  `expirydate` varchar(255) DEFAULT NULL,
  `postpone` enum('N','Y') DEFAULT NULL,
  `status` varchar(255) NOT NULL DEFAULT 'Pending',
  `color` VARCHAR(25) NOT NULL DEFAULT 'orange',
  `date` date DEFAULT NULL,
  `uuid` char(38) NOT NULL,
  UNIQUE KEY `unique_simulation_uuid` (`uuid`),
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Dumping data for simulation
--


--
-- Table structure for table `template`
--
DROP TABLE IF EXISTS `template`;
CREATE TABLE IF NOT EXISTS `template` (
  `id`   BIGINT(20) AUTO_INCREMENT NOT NULL,
  `account_id`   BIGINT(20),
  `name` VARCHAR(255) NOT NULL,
  `format` VARCHAR(25) NOT NULL,
  `rules` mediumtext NULL,
  `samplerow` mediumtext NOT NULL,
  `creationtype` TINYINT(1),
  `delimiter` VARCHAR(25),
  `uuid` char(38) NOT NULL,
  datecreated timestamp default CURRENT_TIMESTAMP not null,
  UNIQUE INDEX unique_template_name_for_account (`account_id`,`name`),
  UNIQUE KEY `unique_template_uuid` (`uuid`),
  PRIMARY KEY (`id`)
)
  DEFAULT CHARACTER SET utf8
  COLLATE utf8_unicode_ci
  ENGINE = InnoDB;

ALTER TABLE template
  ADD CONSTRAINT fk_template_account FOREIGN KEY (account_id) REFERENCES template (id) ON DELETE CASCADE;

--
-- Dumping data for table `template`
--
INSERT INTO `template` (`id`, `account_id`, `name`, `format`, `rules`, `samplerow`, `creationtype`, `delimiter`, `uuid`)
    VALUES (1, 2, 'AWS-Invoice', 'CSV', '"name":"string","zip":"webservice://test.com"', 'name,zip\nJohn Doe,08898', 0, ',', '52044a5d-b053-48e8-9bf2-29e6a0a90b13'), (2, 2, 'AWS-Activity', 'CSV', '', '', 0, ',', '0f67727b-8bbc-4654-a1a2-4beac3c6b30f');

--
-- uuid for custom report
--
ALTER TABLE `customreport` ADD COLUMN `uuid` VARCHAR(38) NOT NULL;
--
-- Add the sample data for the uuid
--
UPDATE `customreport` SET `uuid` = UUID();
--
-- Add a unique index to the uuid column
--
ALTER TABLE `customreport`
  ADD COLUMN `status` VARCHAR(255) NOT NULL DEFAULT 'Pending',
  ADD COLUMN `color` VARCHAR(25) NOT NULL DEFAULT 'orange',
  ADD UNIQUE INDEX `unique_customreport_uuid` (`uuid`);



/*!40101 SET SQL_MODE = @OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT = @OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS = @OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION = @OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES = @OLD_SQL_NOTES */;
/*!40101 SET @OLD_CHARACTER_SET_CLIENT = @@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS = @@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION = @@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE = @@TIME_ZONE */;
/*!40103 SET TIME_ZONE = '+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS = @@UNIQUE_CHECKS, UNIQUE_CHECKS = 0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS = 0 */;
/*!40101 SET @OLD_SQL_MODE = @@SQL_MODE, SQL_MODE = 'NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES = @@SQL_NOTES, SQL_NOTES = 0 */;

--
-- Change the status dates from date to datetime
--
ALTER TABLE `filewatcher` CHANGE `date` `date` DATETIME DEFAULT NULL;
ALTER TABLE `customreport` CHANGE `date` `date` DATETIME DEFAULT NULL;
ALTER TABLE `simulation` CHANGE `date` `date` DATETIME DEFAULT NULL;

/*!40101 SET SQL_MODE = @OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT = @OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS = @OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION = @OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES = @OLD_SQL_NOTES */;/*!40101 SET @OLD_CHARACTER_SET_CLIENT = @@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS = @@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION = @@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE = @@TIME_ZONE */;
/*!40103 SET TIME_ZONE = '+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS = @@UNIQUE_CHECKS, UNIQUE_CHECKS = 0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS = 0 */;
/*!40101 SET @OLD_SQL_MODE = @@SQL_MODE, SQL_MODE = 'NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES = @@SQL_NOTES, SQL_NOTES = 0 */;

--
-- Change the status dates from date to datetime
--
ALTER TABLE `template` ADD COLUMN `table` VARCHAR(255) NOT NULL;

--
-- Add a statusresult field which will be used to record the outcomes of any execution
--
ALTER TABLE `customreport` ADD COLUMN statusresult MEDIUMTEXT DEFAULT NULL;
ALTER TABLE `filewatcher` ADD COLUMN statusresult MEDIUMTEXT DEFAULT NULL;
ALTER TABLE `hadoop_status`
    ADD COLUMN statusresult MEDIUMTEXT DEFAULT NULL,
    ADD COLUMN `color` VARCHAR(25) NOT NULL DEFAULT 'orange';
ALTER TABLE `mpp_status`
    ADD COLUMN statusresult MEDIUMTEXT DEFAULT NULL,
    ADD COLUMN `color` VARCHAR(25) NOT NULL DEFAULT 'orange';
ALTER TABLE `simulation` ADD COLUMN statusresult MEDIUMTEXT DEFAULT NULL;

--
-- Notifications add a read value
--
ALTER TABLE `notification`
    ADD COLUMN `isread` TINYINT NOT NULL DEFAULT 0,
    ADD COLUMN `color` VARCHAR(25) NOT NULL DEFAULT '#337ab7';
/*!40101 SET SQL_MODE = @OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT = @OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS = @OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION = @OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES = @OLD_SQL_NOTES */;/*!40101 SET @OLD_CHARACTER_SET_CLIENT = @@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS = @@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION = @@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE = @@TIME_ZONE */;
/*!40103 SET TIME_ZONE = '+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS = @@UNIQUE_CHECKS, UNIQUE_CHECKS = 0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS = 0 */;
/*!40101 SET @OLD_SQL_MODE = @@SQL_MODE, SQL_MODE = 'NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES = @@SQL_NOTES, SQL_NOTES = 0 */;

--
-- Change the status dates from date to datetime
--
ALTER TABLE `template`
  CHANGE `table` `tablename` VARCHAR(255) NOT NULL,
  ADD COLUMN `isactive` TINYINT(1) NOT NULL DEFAULT 1;

/*!40101 SET SQL_MODE = @OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT = @OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS = @OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION = @OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES = @OLD_SQL_NOTES */;/*!40101 SET @OLD_CHARACTER_SET_CLIENT = @@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS = @@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION = @@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE = @@TIME_ZONE */;
/*!40103 SET TIME_ZONE = '+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS = @@UNIQUE_CHECKS, UNIQUE_CHECKS = 0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS = 0 */;
/*!40101 SET @OLD_SQL_MODE = @@SQL_MODE, SQL_MODE = 'NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES = @@SQL_NOTES, SQL_NOTES = 0 */;

--
-- add datecreated for account
--
ALTER TABLE `account`
  ADD COLUMN `datecreated` datetime DEFAULT NULL,
  ADD COLUMN `description` varchar(255) DEFAULT NULL;

--
-- table structure for conversions
--
DROP TABLE IF EXISTS `conversion`;
CREATE TABLE IF NOT EXISTS `conversion` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `description` varchar(255) DEFAULT NULL,
  `type` varchar (255) NOT NULL,
  `url` varchar(1000) NOT NULL,
  `parameters` mediumtext DEFAULT NULL,
  `datecreated` datetime DEFAULT NULL,
  `createdby` bigint(20) DEFAULT NULL,
  `lastupdatedon` datetime DEFAULT NULL,
  `lastupdatedby` bigint(20) DEFAULT NULL,
  `isactive` tinyint(1) DEFAULT NULL,
  `uuid` char(38) NOT NULL,
  UNIQUE KEY `unique_conversion_uuid` (`uuid`),
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Sample data for conversions
--
INSERT INTO conversion (id, name, description, type, url, parameters, datecreated, createdby, lastupdatedon, lastupdatedby, isactive, uuid)
VALUES (1, 'None', null, '', '', null, '2018-06-30 11:34:33', 1, null, null, 1, '5a76f700-2b80-4262-af53-7b63b1cb4ed3'),
 (2, 'Date Conversion', null, 'Webservice', 'http://example.com/dateconversion', null, '2018-06-30 11:34:33', 1, null, null, 1, '4eb436f2-5910-449d-a115-acc64870f01f'),
 (3, 'ZipCode Lookup', null, 'WebService', 'http://example.com/zipcodelookup', null, '2018-06-30 11:35:45', 1, null, null, 1, '9f2b1dd1-5eef-4893-a414-746fee87f983');

--
-- Add sync column for Templates
--
ALTER TABLE `template`
  ADD COLUMN `color` varchar(25) NOT NULL DEFAULT '',
  ADD COLUMN `forsync` tinyint NOT NULL DEFAULT 0;

--
-- Add athena output column for the queries
--
ALTER TABLE `customreport`
  ADD COLUMN `athenaoutput` MEDIUMTEXT DEFAULT NULL;

--
-- Add the presigned urls for the folder of the differnet entities
--
ALTER TABLE template ADD COLUMN `bucketinput` varchar(255) NOT NULL,
                      ADD COLUMN `bucketoutput` varchar(255) NOT NULL,
                      ADD COLUMN `filecount` INT DEFAULT 0;

/*!40101 SET SQL_MODE = @OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT = @OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS = @OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION = @OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES = @OLD_SQL_NOTES */;/*!40101 SET @OLD_CHARACTER_SET_CLIENT = @@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS = @@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION = @@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE = @@TIME_ZONE */;
/*!40103 SET TIME_ZONE = '+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS = @@UNIQUE_CHECKS, UNIQUE_CHECKS = 0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS = 0 */;
/*!40101 SET @OLD_SQL_MODE = @@SQL_MODE, SQL_MODE = 'NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES = @@SQL_NOTES, SQL_NOTES = 0 */;


--
-- Add type column for Templates
--
ALTER TABLE `template`
  ADD COLUMN `type` varchar(10) NOT NULL DEFAULT 'User';

  --
-- Add type column for Templates
--
ALTER TABLE `customreport`
  ADD COLUMN `type` varchar(10) NOT NULL DEFAULT 'User';

/*!40101 SET SQL_MODE = @OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT = @OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS = @OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION = @OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES = @OLD_SQL_NOTES */;/*!40101 SET @OLD_CHARACTER_SET_CLIENT = @@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS = @@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION = @@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE = @@TIME_ZONE */;
/*!40103 SET TIME_ZONE = '+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS = @@UNIQUE_CHECKS, UNIQUE_CHECKS = 0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS = 0 */;
/*!40101 SET @OLD_SQL_MODE = @@SQL_MODE, SQL_MODE = 'NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES = @@SQL_NOTES, SQL_NOTES = 0 */;


-- Table structure for table `fileupload`
--

DROP TABLE IF EXISTS `fileupload`;
CREATE TABLE IF NOT EXISTS `fileupload` (
  `id` bigint(20) AUTO_INCREMENT PRIMARY KEY,
  `name` varchar(100) NOT NULL,
  `folder` varchar(255) DEFAULT NULL,
  `templateid` BIGINT(20) NOT NULL,
  `source` VARCHAR(255) NOT NULL,
  `size` int NOT NULL,
  status varchar(255) NOT NULL DEFAULT 'Pending',
  `color` VARCHAR(25) NOT NULL DEFAULT 'orange',
  `statusresult` mediumtext NOT NULL,
  `date` datetime  null,
  `uuid` char(38) NOT NULL,
 `uploadedby` bigint NOT NULL,
  UNIQUE KEY `unique_file_upload_uuid` (`uuid`),
  UNIQUE KEY `unique_file_upload_name_folder` (`name`, `folder`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

ALTER TABLE fileupload
  ADD CONSTRAINT fk_file_upload_template FOREIGN KEY (templateid) REFERENCES template (id);

/*!40101 SET SQL_MODE = @OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT = @OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS = @OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION = @OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES = @OLD_SQL_NOTES */;/*!40101 SET @OLD_CHARACTER_SET_CLIENT = @@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS = @@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION = @@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE = @@TIME_ZONE */;
/*!40103 SET TIME_ZONE = '+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS = @@UNIQUE_CHECKS, UNIQUE_CHECKS = 0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS = 0 */;
/*!40101 SET @OLD_SQL_MODE = @@SQL_MODE, SQL_MODE = 'NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES = @@SQL_NOTES, SQL_NOTES = 0 */;


-- Table structure for table `fileupload`
--

DROP TABLE IF EXISTS `fileupload`;
CREATE TABLE IF NOT EXISTS `fileupload` (
  `id` bigint(20) AUTO_INCREMENT PRIMARY KEY,
  `name` varchar(100) NOT NULL,
  `folder` varchar(255) DEFAULT NULL,
  `templateid` BIGINT(20) NOT NULL,
  `source` VARCHAR(255) NOT NULL,
  `size` int NOT NULL,
  status varchar(255) NOT NULL DEFAULT 'Pending',
  `color` VARCHAR(25) NOT NULL DEFAULT 'orange',
  `statusresult` mediumtext NOT NULL,
  `date` datetime  null,
  `uuid` char(38) NOT NULL,
 `uploadedby` bigint NOT NULL,
  UNIQUE KEY `unique_file_upload_uuid` (`uuid`),
  UNIQUE KEY `unique_file_upload_name_folder` (`name`, `folder`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

ALTER TABLE fileupload
  ADD CONSTRAINT fk_file_upload_template FOREIGN KEY (templateid) REFERENCES template (id);

/*!40101 SET SQL_MODE = @OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT = @OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS = @OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION = @OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES = @OLD_SQL_NOTES */;/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Add a role for each entity
--
INSERT INTO role (`name`) VALUES ('ROLE_SUPER_ADMIN'), ('ROLE_DELETE_USER_DATA'), ('ROLE_DELETE_SHARED_DATA'), ('ROLE_RECOVER_USER_DATA'), ('ROLE_RECOVER_SHARED_DATA'), ( 'ROLE_CONVERSIONS'), ('ROLE_FILE_WATCHER'), ( 'ROLE_MODEL'), ( 'ROLE_FILE_UPLOAD'), ('ROLE_HADOOP'), ('ROLE_DATABASE'), ('ROLE_TABLES'), ( 'ROLE_QUERIES'), ('ROLE_TEMPLATE');
--
-- Add the super-admin role to the admin, and make user id 3 an admin for that account
--
DELETE  FROM user_role;
ALTER TABLE user_role DROP FOREIGN KEY fk_user_role_user;
ALTER TABLE user_role
  ADD CONSTRAINT fk_user_role_user
FOREIGN KEY (`user_id`) REFERENCES `app_user` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
INSERT INTO user_role(`user_id`, `role_name`) VALUES (1, 'ROLE_SUPER_ADMIN'), (1, 'ROLE_DELETE_USER_DATA'), (1, 'ROLE_DELETE_SHARED_DATA'), (1, 'ROLE_RECOVER_USER_DATA'), (1, 'ROLE_RECOVER_SHARED_DATA'), (1, 'ROLE_CONVERSIONS'), (1, 'ROLE_FILE_WATCHER'), (1, 'ROLE_MODEL'), (1, 'ROLE_FILE_UPLOAD'), (1, 'ROLE_HADOOP'), (1, 'ROLE_DATABASE'), (1, 'ROLE_TABLES'), (1, 'ROLE_QUERIES'), (1, 'ROLE_TEMPLATE'), (2, 'ROLE_DELETE_USER_DATA'), (2, 'ROLE_DELETE_SHARED_DATA'), (2, 'ROLE_RECOVER_USER_DATA'), (2, 'ROLE_RECOVER_SHARED_DATA'), (2, 'ROLE_CONVERSIONS'), (2, 'ROLE_FILE_WATCHER'), (2, 'ROLE_MODEL'), (2, 'ROLE_FILE_UPLOAD'), (2, 'ROLE_HADOOP'), (2, 'ROLE_DATABASE'), (2, 'ROLE_TABLES'), (2, 'ROLE_QUERIES'), (2, 'ROLE_TEMPLATE'),(3, 'ROLE_DELETE_USER_DATA'), (3, 'ROLE_DELETE_SHARED_DATA'), (3, 'ROLE_RECOVER_USER_DATA'), (3, 'ROLE_RECOVER_SHARED_DATA'), (3, 'ROLE_CONVERSIONS'), (3, 'ROLE_FILE_WATCHER'), (3, 'ROLE_MODEL'), (3, 'ROLE_FILE_UPLOAD'), (3, 'ROLE_HADOOP'), (3, 'ROLE_DATABASE'), (3, 'ROLE_TABLES'), (3, 'ROLE_QUERIES'), (3, 'ROLE_TEMPLATE'),(3, 'ROLE_ADMIN'), (4, 'ROLE_DELETE_USER_DATA'), (4, 'ROLE_CONVERSIONS'), (4, 'ROLE_FILE_WATCHER'), (4, 'ROLE_MODEL'), (4, 'ROLE_FILE_UPLOAD'), (4, 'ROLE_HADOOP'), (4, 'ROLE_DATABASE'), (4, 'ROLE_TABLES'), (4, 'ROLE_QUERIES'), (4, 'ROLE_TEMPLATE'),(5, 'ROLE_DELETE_USER_DATA'), (5, 'ROLE_CONVERSIONS'), (5, 'ROLE_FILE_WATCHER'), (5, 'ROLE_MODEL'), (5, 'ROLE_FILE_UPLOAD'), (5, 'ROLE_HADOOP'), (5, 'ROLE_DATABASE'), (5, 'ROLE_TABLES'), (5, 'ROLE_QUERIES'), (5, 'ROLE_TEMPLATE'), (5, 'ROLE_USER');

--
-- Add accountid fields to tables that do not have
--
ALTER TABLE `hadoop_status` ADD COLUMN `accountid` BIGINT(20) NOT NULL;
ALTER TABLE `hadoop_status`
  ADD CONSTRAINT `fk_hadoop_status_account` FOREIGN KEY (`accountid`) REFERENCES account (`id`);

ALTER TABLE `mpp_status` ADD COLUMN `accountid` BIGINT(20) NOT NULL;
ALTER TABLE `mpp_status`
  ADD CONSTRAINT `fk_mpp_status_account` FOREIGN KEY (`accountid`) REFERENCES account (`id`);

ALTER TABLE `filewatcher` ADD COLUMN `accountid` BIGINT(20) NOT NULL;
ALTER TABLE `filewatcher`
  ADD CONSTRAINT `fk_filewatcher_account` FOREIGN KEY (`accountid`) REFERENCES account (`id`);

ALTER TABLE `simulation` ADD COLUMN `accountid` BIGINT(20) NOT NULL;
ALTER TABLE `simulation`
  ADD CONSTRAINT `fk_simulation_account` FOREIGN KEY (`accountid`) REFERENCES account (`id`);

ALTER TABLE `customreport` ADD COLUMN `accountid` BIGINT(20) NOT NULL;
ALTER TABLE `customreport`
  ADD CONSTRAINT `fk_customreport_account` FOREIGN KEY (`accountid`) REFERENCES account (`id`);

ALTER TABLE `fileupload` ADD COLUMN `accountid` BIGINT(20) NOT NULL;
ALTER TABLE `fileupload`
  ADD CONSTRAINT `fk_fileupload_account` FOREIGN KEY (`accountid`) REFERENCES account (`id`);

ALTER TABLE `template`
  DROP FOREIGN KEY `fk_template_account`;
ALTER TABLE `template` DROP INDEX `unique_template_name_for_account`;
ALTER TABLE `template` DROP COLUMN `account_id`;
ALTER TABLE `template` ADD COLUMN `accountid` BIGINT(20) NOT NULL;
ALTER TABLE `template`
  ADD CONSTRAINT `fk_template_account` FOREIGN KEY (`accountid`) REFERENCES account (`id`);
ALTER TABLE `template` ADD UNIQUE INDEX `unique_template_name_for_account` (`accountid`, `name`);

--
-- Add trash column to file upload
--
ALTER TABLE `fileupload`
  ADD COLUMN `trash` TINYINT(1) NOT NULL DEFAULT 0,
  MODIFY `name` VARCHAR(255) NOT NULL;

--
-- Add createdby for template
--
ALTER TABLE `template` ADD COLUMN `createdby` bigint(20) DEFAULT NULL;
ALTER TABLE `template` ADD COLUMN `simulationid` bigint(20) DEFAULT NULL;
ALTER TABLE `template`
  ADD CONSTRAINT `fk_template_createdby` FOREIGN KEY (`createdby`) REFERENCES app_user (`id`);

--
-- Add dashboard urls to the account
--
ALTER TABLE `account`
    ADD COLUMN `dashboard_url` VARCHAR(1000) DEFAULT NULL,
  ADD COLUMN `current_activity_url` VARCHAR(1000) DEFAULT NULL,
  ADD COLUMN `history_activity_url` VARCHAR(1000) DEFAULT NULL;

--
-- Add an ignore conversion
--
INSERT INTO conversion (id, name, description, type, url, parameters, datecreated, createdby, lastupdatedon, lastupdatedby, isactive, uuid)
VALUES (4, 'Ignore', null, '', '', null, '2018-09-10 11:34:33', 1, null, null, 1, '66bdc4e8-532f-4481-9093-b10906adea54');

--
-- Additional fields for File watcher
--
ALTER TABLE `filewatcher`
  ADD COLUMN `templateid` bigint(20) DEFAULT NULL,
  ADD COLUMN `simulationid` bigint(20) DEFAULT NULL,
  ADD COLUMN `schedule` mediumtext DEFAULT NULL,
  ADD COLUMN `securitypolicy` mediumtext DEFAULT NULL;

--
-- SNS topics
--
ALTER TABLE `account`
  ADD COLUMN `snstopic` VARCHAR(255) NOT NULL DEFAULT '';
ALTER TABLE `app_user`
  ADD COLUMN `snstopic` VARCHAR(255) NOT NULL DEFAULT '';


/*!40101 SET SQL_MODE = @OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT = @OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS = @OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION = @OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES = @OLD_SQL_NOTES */;/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Add an email address for each user then add a unique constraint to the column
--
ALTER TABLE `app_user` CHANGE `emailaddress` `credential_email` VARCHAR(255) NOT NULL;
UPDATE `app_user` SET `credential_email` = CONCAT(credential_nickname, '@oncloudtime.com') WHERE `credential_email` IS NULL OR `credential_email` = '';
ALTER TABLE app_user ADD CONSTRAINT `unique_app_user_credential_email` UNIQUE KEY(`credential_email`);

/*!40101 SET SQL_MODE = @OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT = @OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS = @OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION = @OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES = @OLD_SQL_NOTES */;/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Add missing columns to the app user table
--
ALTER TABLE `app_user`
ADD COLUMN `usertype` varchar(255) DEFAULT NULL,
ADD COLUMN `employeecategory` varchar(255) DEFAULT NULL,
ADD COLUMN `onvacation` varchar(255) DEFAULT NULL,
  ADD COLUMN `mobilenumber` varchar(255) DEFAULT NULL,
  ADD COLUMN `homephone` varchar(255) DEFAULT NULL,
ADD COLUMN   `tsgbadgenumber` varchar(255) DEFAULT NULL,
ADD COLUMN   `officeline1` varchar(50) DEFAULT NULL,
ADD COLUMN   `officeline2` varchar(50) DEFAULT NULL,
ADD COLUMN   `faxnumber` varchar(50) DEFAULT NULL,
ADD COLUMN   `address1` varchar(255) DEFAULT NULL,
ADD COLUMN   `address2` varchar(255) DEFAULT NULL,
ADD COLUMN   `stateorprovince` varchar(255) DEFAULT NULL,
ADD COLUMN   `postalcode` varchar(50) DEFAULT NULL,
ADD COLUMN   `country` varchar(255) DEFAULT NULL,
ADD COLUMN   `city` varchar(255) DEFAULT NULL,
ADD COLUMN   `companyname` varchar(255) DEFAULT '',
ADD COLUMN   `companyaddress` varchar(255) DEFAULT '',
ADD COLUMN   `ssn` varchar(20) DEFAULT NULL,
ADD COLUMN   `ein` varchar(20) DEFAULT NULL,
ADD COLUMN   `birthdate` datetime DEFAULT NULL,
ADD COLUMN   `hiredate` datetime DEFAULT NULL,
ADD COLUMN   `employeestartdate` datetime DEFAULT NULL,
ADD COLUMN   `employeeenddate` datetime DEFAULT NULL,
ADD COLUMN   `releasedate` datetime DEFAULT NULL,
ADD COLUMN   `lastreviewdate` datetime DEFAULT NULL,
ADD COLUMN   `nextreviewdate` datetime DEFAULT NULL,
ADD COLUMN   `supervisorname` varchar(255) DEFAULT NULL,
ADD COLUMN   `supervisoremail` varchar(255) DEFAULT NULL,
ADD COLUMN   `supervisorofficeline` varchar(255) DEFAULT NULL,
ADD COLUMN `approver` varchar(255) DEFAULT NULL, 
ADD COLUMN `approveremail` varchar(255) DEFAULT NULL, 
ADD COLUMN `invoiceapprover` varchar(255) DEFAULT NULL, 
ADD COLUMN `invoiceapproveremail` varchar(255) DEFAULT NULL, 
ADD COLUMN `businessmeetingapprover` varchar(255) DEFAULT NULL, 
ADD COLUMN `businessmeetingapproveremail` varchar(255) DEFAULT NULL, 
ADD COLUMN `travelexpenseapprover` varchar(255) DEFAULT NULL, 
ADD COLUMN `travelexpenseapproveremail` varchar(255) DEFAULT NULL, 
ADD COLUMN `odcapprover` varchar(255) DEFAULT NULL, 
ADD COLUMN `odcapproveremail` varchar(255) DEFAULT NULL, 
ADD COLUMN `billsapprover` varchar(255) DEFAULT NULL, 
ADD COLUMN `billsapproveremail` varchar(255) DEFAULT NULL, 
ADD COLUMN   `payrollfrequency` varchar(50) DEFAULT NULL,
ADD COLUMN   `paycode` varchar(10) DEFAULT NULL,
ADD COLUMN   `regularrate` decimal(10,2) NOT NULL DEFAULT '0.00',
ADD COLUMN   `regularratecode` varchar(10) DEFAULT NULL,
ADD COLUMN   `maximumregularhours` decimal(10,1) NOT NULL DEFAULT '8.0',
ADD COLUMN   `overtimeallowed` enum('Y','N') NOT NULL DEFAULT 'N',
ADD COLUMN   `overtimerate` decimal(10,2) DEFAULT NULL,
ADD COLUMN   `overtimeratecode` varchar(10) DEFAULT NULL,
ADD COLUMN   `maximumovertimehoursperday` decimal(10,1) DEFAULT NULL,
ADD COLUMN   `maximumhoursperday` decimal(10,0) NOT NULL DEFAULT '8',
ADD COLUMN   `maximumhoursperweek` decimal(10,0) NOT NULL DEFAULT '40',
ADD COLUMN   `maximumovertimehours` decimal(10,1) DEFAULT NULL DEFAULT '0.0',
ADD COLUMN   `vacationdaysallowed` enum('Y','N') NOT NULL DEFAULT 'N',
ADD COLUMN   `maximumsocialsecurity` decimal(10,0) DEFAULT '0',
ADD COLUMN   `maximumvacationdays` decimal(10,2) DEFAULT '0.00',
ADD COLUMN   `personaldaysallowed` enum('Y','N') NOT NULL DEFAULT 'N',
ADD COLUMN   `maximumpersonaldays` decimal(10,2) DEFAULT '0.00' ,
ADD COLUMN   `paidholidaysallowed` enum('Y','N') NOT NULL DEFAULT 'N',
ADD COLUMN   `maximumpaidholidays` decimal(10,2) DEFAULT '0.00',
ADD COLUMN   `sickdaysallowed` enum('Y','N') NOT NULL DEFAULT 'N',
ADD COLUMN   `maximumsickdays` decimal(10,2) DEFAULT '0.00',
ADD COLUMN   `saturdayworkallowed` enum('Y','N') NOT NULL DEFAULT 'N',
ADD COLUMN   `sundayworkallowed` enum('Y','N') NOT NULL DEFAULT 'N',
ADD COLUMN   `publicholidayworkallowed` enum('Y','N') NOT NULL DEFAULT 'N',
ADD COLUMN   `employeebenefitsbillable` enum('N','Y') NOT NULL DEFAULT 'N',
ADD COLUMN   `invoicecategory` varchar(50) DEFAULT NULL,
ADD COLUMN   `employeejobs` varchar(240) DEFAULT NULL,
ADD COLUMN   `status` varchar(255) DEFAULT NULL,
ADD COLUMN   `createdby` bigint(20) NOT NULL DEFAULT '0',
ADD COLUMN   `datecreated` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
ADD COLUMN   `changedpassword` enum('Y','N') NOT NULL DEFAULT 'N',
ADD COLUMN   `lastupdatedby` varchar(20) DEFAULT NULL,
ADD COLUMN   `lastupdatedate` datetime DEFAULT NULL,
ADD COLUMN   `securityquestion` varchar(255) DEFAULT NULL,
ADD COLUMN   `answer` varchar(255) DEFAULT NULL,
ADD COLUMN   `disabledaily` enum('Y','N') NOT NULL DEFAULT 'N',
ADD COLUMN   `passwordexpirydate` datetime DEFAULT NULL,
ADD COLUMN   `canviewemployeeresources` enum('Y','N') DEFAULT 'N',
ADD COLUMN   `canviewpublicholidays` enum('Y','N') DEFAULT 'N',
ADD COLUMN   `canviewpayrolldates` enum('Y','N') DEFAULT 'N',
ADD COLUMN   `canviewtravelpolicy` enum('Y','N') DEFAULT 'N',
ADD COLUMN   `canview401kinformation` enum('Y','N') DEFAULT 'N',
ADD COLUMN   `canviewreferenceinformation` enum('Y','N') DEFAULT 'N',
ADD COLUMN   `ec1_firstname` varchar(255) DEFAULT NULL,
ADD COLUMN   `ec1_lastname` varchar(255) DEFAULT NULL,
ADD COLUMN   `ec1_streetaddress` varchar(255) DEFAULT NULL,
ADD COLUMN   `ec1_city` varchar(255) DEFAULT NULL,
ADD COLUMN   `ec1_state` varchar(255) DEFAULT NULL,
ADD COLUMN   `ec1_zipcode` varchar(255) DEFAULT NULL,
ADD COLUMN   `ec1_homephone` varchar(255) DEFAULT NULL,
ADD COLUMN   `ec1_workphone` varchar(255) DEFAULT NULL,
ADD COLUMN   `ec1_cellphone` varchar(255) DEFAULT NULL,
ADD COLUMN   `ec1_relationship` varchar(255) DEFAULT NULL,
ADD COLUMN   `ec2_firstname` varchar(255) DEFAULT NULL,
ADD COLUMN   `ec2_lastname` varchar(255) DEFAULT NULL,
ADD COLUMN   `ec2_streetaddress` varchar(255) DEFAULT NULL,
ADD COLUMN   `ec2_city` varchar(255) DEFAULT NULL,
ADD COLUMN   `ec2_state` varchar(255) DEFAULT NULL,
ADD COLUMN   `ec2_zipcode` varchar(255) DEFAULT NULL,
ADD COLUMN   `ec2_homephone` varchar(255) DEFAULT NULL,
ADD COLUMN   `ec2_workphone` varchar(255) DEFAULT NULL,
ADD COLUMN   `ec2_cellphone` varchar(255) DEFAULT NULL,
ADD COLUMN   `ec2_relationship` varchar(255) DEFAULT NULL,
ADD COLUMN   `ec3_firstname` varchar(255) DEFAULT NULL,
ADD COLUMN   `ec3_lastname` varchar(255) DEFAULT NULL,
ADD COLUMN   `ec3_streetaddress` varchar(255) DEFAULT NULL,
ADD COLUMN   `ec3_city` varchar(255) DEFAULT NULL,
ADD COLUMN   `ec3_state` varchar(255) DEFAULT NULL,
ADD COLUMN   `ec3_zipcode` varchar(255) DEFAULT NULL,
ADD COLUMN   `ec3_homephone` varchar(255) DEFAULT NULL,
ADD COLUMN   `ec3_workphone` varchar(255) DEFAULT NULL,
ADD COLUMN   `ec3_cellphone` varchar(255) DEFAULT NULL,
ADD COLUMN   `ec3_relationship` varchar(255) DEFAULT NULL,
ADD COLUMN   `permissiontemplate` varchar(255) DEFAULT NULL,
ADD COLUMN   `categoryuser` enum('HRMS','Legal','Healthcare') NOT NULL DEFAULT 'HRMS',
ADD COLUMN   `uniqueid` int(15) DEFAULT NULL,
ADD COLUMN   `week_start` varchar(20) NOT NULL,
ADD COLUMN   `hourly_wage` varchar(8) NOT NULL,
ADD COLUMN   `photo` varchar(250) NOT NULL DEFAULT 'None';

/*!40101 SET SQL_MODE = @OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT = @OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS = @OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION = @OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES = @OLD_SQL_NOTES */;/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Sample data fix to ensure usernames match the conventions firstname-lastname-uuid
--
UPDATE `app_user` SET `credential_nickname` = CONCAT_WS("-", LOWER(firstname), LOWER(lastname), LOWER (uuid));
--
-- Timesheets Module
--
-- roles
--
REPLACE INTO `role`(`name`) VALUES ('ROLE_PROJECT'), ('ROLE_TASK'), ('ROLE_TIMESHEET_ASSIGNMENT'), ('ROLE_TIMESHEET_SUBMISSION'), ('ROLE_PROJECT_RATE'), ('ROLE_TASK_QUEUE'), ('ROLE_TASK_CATEGORY'), ('ROLE_TASK_TEMPLATE');

REPLACE INTO `user_role`(`user_id`, `role_name`) VALUES (1, 'ROLE_PROJECT'), (1, 'ROLE_TIMESHEET_ASSIGNMENT'), (1, 'ROLE_TASK'), (1, 'ROLE_TASK_QUEUE'), (1, 'ROLE_TASK_CATEGORY'), (1, 'ROLE_TASK_TEMPLATE'), (1, 'ROLE_PROJECT_RATE'), (2, 'ROLE_TIMESHEET_SUBMISSION'),(2, 'ROLE_TASK'), (2, 'ROLE_TASK_QUEUE'), (2, 'ROLE_TASK_CATEGORY'), (2, 'ROLE_TASK_TEMPLATE'),(3, 'ROLE_TASK'), (3, 'ROLE_TASK_QUEUE'), (3, 'ROLE_PROJECT'), (3, 'ROLE_TIMESHEET_ASSIGNMENT'), (3, 'ROLE_TIMESHEET_SUBMISSION'), (3, 'ROLE_TASK_TEMPLATE'), (3, 'ROLE_TASK_CATEGORY'),(3, 'ROLE_PROJECT_RATE'),(4, 'ROLE_TIMESHEET_SUBMISSION'), (4, 'ROLE_TASK_QUEUE');
--
-- Add structure and data for projects
--
DROP TABLE IF EXISTS `project`;

CREATE TABLE IF NOT EXISTS `project`
(
  `id`                       BIGINT(20) AUTO_INCREMENT PRIMARY KEY,
  `effectivedate`            DATETIME,
  projectid                VARCHAR(50)  NOT NULL,
  title                    VARCHAR(50)  NOT NULL,
  projectcategory          VARCHAR(255),
  sponsor                  VARCHAR(255),
  projectexecutive         VARCHAR(255),
  projectmanager           VARCHAR(255),
  jobcode                  VARCHAR(255),
  costcentercode           VARCHAR(255) DEFAULT '',
  activity                 VARCHAR(255) DEFAULT '',
  laborpoline              VARCHAR(255) DEFAULT '',
  odcpoline                VARCHAR(255) DEFAULT '',
  travelpoline             VARCHAR(255) DEFAULT '',
  mailinglist              VARCHAR(255),
  priority                 VARCHAR(255),
  estimatedstartdate       DATE,
  estimatedenddate         DATE,
  actualstartdate          DATE,
  actualenddate            DATE,
  status                   VARCHAR(255),
  immediatesupervisorname  VARCHAR(255),
  immediatesupervisorphone VARCHAR(255),
  immediatesupervisoremail VARCHAR(255),
  supervisorname           VARCHAR(255),
  supervisorphone          VARCHAR(255),
  supervisoremail          VARCHAR(255),
  `budget` decimal(10,2) NOT NULL DEFAULT '0.00',
  notes                    TEXT,
  createdby                BIGINT       NOT NULL,
  datecreated              DATE,
  lastupdatedby            BIGINT,
  lastupdatedate           DATETIME,
  ponumber                 VARCHAR(10),
  taskcode                 VARCHAR(15),
  expirydate               DATETIME,
  currentflag              TINYINT(1),
  companyid                INT,
  `type`          VARCHAR(255) NOT NULL DEFAULT 'Waterfall',
  sprintcount                INT,
  sprintduration               INT,
  `builtin` TINYINT(1) NOT NULL DEFAULT 0,
  `uuid` char(38) NOT NULL,
  `accountid` BIGINT(20) NOT NULL,
  UNIQUE KEY `project_title_account` (`accountid`, `title`),
  KEY idx_project_currentflag (currentflag),
  KEY idx_project_projectcategory (projectcategory),
  KEY idx_project_projectid (projectid),
  KEY idx_project_title (title, jobcode),
  KEY idx_project_ponumber (ponumber),
  KEY idx_project_id (id),
  KEY idx_project_taskcode (taskcode)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

ALTER TABLE `project`
  ADD CONSTRAINT `fk_project_account` FOREIGN KEY (`accountid`) REFERENCES account (`id`);

--
-- PTO Project which includes Public Holiday, Vacation, Sick which are built in and cannot be deleted or removed
--
INSERT INTO `project` (`id`,`projectid`, `title`, `accountid`, `uuid`, `createdby`, `datecreated`, `builtin`) VALUES (1, 'Employee PTO', 'PTO', 1, UUID(), 1, NOW(), 1), (2, 'Employee PTO', 'PTO', 2, UUID(), 1, NOW(), 1);

--
-- Sample projects
--
INSERT INTO `project` (`id`, `projectid`, `title`, `accountid`, `uuid`, `createdby`, `datecreated`, `builtin`,  `budget`) VALUES (3, 'FDI Development', 'FDI-Dev', 2, UUID(), 1, NOW(), 0, 15000), (4, 'ACME ERP Rollout', 'ACMEERP', 2, UUID(), 1, NOW(),0, 50000);
--
-- Tasks
--

DROP TABLE IF EXISTS `task`;

CREATE TABLE IF NOT EXISTS `task` (
      `id` bigint(20) AUTO_INCREMENT PRIMARY KEY,
      `accountid` BIGINT(20) NOT NULL,
      `assigneeid` BIGINT(20),
      `projectid` BIGINT(20),
      `parentid` BIGINT(20),
      `startdate` datetime  NOT NULL,
      `enddate` datetime,
      `uuid` char(38) NOT NULL,
      `status` VARCHAR(255) NOT NULL DEFAULT 'Pending',
      `title` VARCHAR(255) NOT NULL,
      `istimesheettask` TINYINT(1) NOT NULL DEFAULT 0,
      createdby                BIGINT       NOT NULL,
      datecreated              DATETIME,
      lastupdatedby            BIGINT,
      lastupdatedate           DATETIME,
      UNIQUE KEY `task_title_account` (`accountid`, `title`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

ALTER TABLE `task`
  ADD CONSTRAINT `fk_task_account` FOREIGN KEY (`accountid`) REFERENCES account (`id`),
  ADD CONSTRAINT `fk_task_assignee` FOREIGN KEY (`assigneeid`) REFERENCES app_user (`id`),
  ADD CONSTRAINT `fk_task_project` FOREIGN KEY (`projectid`) REFERENCES project (`id`),
  ADD CONSTRAINT `fk_task_parent` FOREIGN KEY (`parentid`) REFERENCES task (`id`),
  ADD CONSTRAINT `fk_task_creator` FOREIGN KEY (`createdby`) REFERENCES app_user (`id`),
  ADD CONSTRAINT `fk_task_updator` FOREIGN KEY (`lastupdatedby`) REFERENCES app_user (`id`);

--
-- Sample data
--

--
-- PTO project tasks - Public Holiday, Vacation, Sick which are built in but cannot be deleted or removed
--
insert into task (id, accountid, assigneeid, projectid, parentid, startdate, enddate, uuid, status, title, istimesheettask, createdby, datecreated, lastupdatedby, lastupdatedate) values (1, 2, null, 2, null, '2019-01-25 17:31:33', null, '0ef880be-20c7-11e9-bba0-19cdb72ebe32', 'Pending', 'Vacation', 1, 1, '2019-01-25 17:31:33', null, null);
insert into task (id, accountid, assigneeid, projectid, parentid, startdate, enddate, uuid, status, title, istimesheettask, createdby, datecreated, lastupdatedby, lastupdatedate) values (2, 2, null, 2, null, '2019-01-25 17:31:33', null, '0ef88528-20c7-11e9-bba0-19cdb72ebe32', 'Pending', 'Sick', 1, 1, '2019-01-25 17:31:33', null, null);
insert into task (id, accountid, assigneeid, projectid, parentid, startdate, enddate, uuid, status, title, istimesheettask, createdby, datecreated, lastupdatedby, lastupdatedate) values (3, 2, null, 2, null, '2019-01-25 17:31:33', null, '0ef88686-20c7-11e9-bba0-19cdb72ebe32', 'Pending', 'Public Holiday', 1, 1, '2019-01-25 17:31:33', null, null);
insert into task (id, accountid, assigneeid, projectid, parentid, startdate, enddate, uuid, status, title, istimesheettask, createdby, datecreated, lastupdatedby, lastupdatedate) values (4, 2, null, 4, null, '2019-01-25 17:31:33', null, '0ef8c6be-20c7-11e9-bba0-19cdb72ebe32', 'Pending', 'Default', 1, 1, '2019-01-25 17:31:33', null, null);
insert into task (id, accountid, assigneeid, projectid, parentid, startdate, enddate, uuid, status, title, istimesheettask, createdby, datecreated, lastupdatedby, lastupdatedate) values (5, 2, null, null, null, '2019-01-06 17:41:09', null, '1225982e-1e7b-11e9-a197-1cfda13112c7', 'Pending', 'PRESENTATION-LEGAL-PresentationTemplates', 2, 1, '2019-01-25 17:40:58', null, null);
insert into task (id, accountid, assigneeid, projectid, parentid, startdate, enddate, uuid, status, title, istimesheettask, createdby, datecreated, lastupdatedby, lastupdatedate) values (6, 2, 2, null, null, '2019-01-02 17:41:33', '2019-01-17 17:41:43', '1225982e-1e7b-11e9-a197-1cfda13112c8', 'Pending', 'Default General', 2, 1, '2019-01-25 17:42:11', null, null);
insert into task (id, accountid, assigneeid, projectid, parentid, startdate, enddate, uuid, status, title, istimesheettask, createdby, datecreated, lastupdatedby, lastupdatedate) values (7, 2, 3, null, null, '2019-01-02 17:41:33', '2019-01-17 17:41:43', '1225982e-1e7b-11e9-a197-1cfda13112c9', 'Pending', 'Testing Tasks', 2, 1, '2019-01-25 17:42:11', null, null);

--
-- Add structure and data for project assignments
--
DROP TABLE IF EXISTS project_assignment;

CREATE TABLE IF NOT EXISTS `project_assignment` (
  `id` bigint(20) AUTO_INCREMENT PRIMARY KEY,
  `userid` BIGINT(20) NOT NULL,
  `projectid` BIGINT(20),
  `taskid` BIGINT(20),
  `description` VARCHAR(255) NOT NULL DEFAULT '',
  `startdate` date  NOT NULL,
  `enddate` date,
  `saturdayworkallowed` TINYINT(1) NOT NULL DEFAULT 0,
  `sundayworkallowed` TINYINT(1) NOT NULL DEFAULT 0,
  `publicholidayworkallowed` TINYINT(1) NOT NULL DEFAULT 0,
  `overtimeallowed` TINYINT(1) NOT NULL DEFAULT 0,
  `maximumhoursperday` DECIMAL(2,1) NOT NULL DEFAULT 8.0,
  `maximumhoursperweek` DECIMAL(3,1) NOT NULL DEFAULT 40.0,
  `regularrate` decimal(10,2) NOT NULL DEFAULT '1.00',
  `overtimerate` decimal(10,2) NOT NULL DEFAULT '1.00',
  `approvername` VARCHAR(255) NOT NULL,
  `approveremail` VARCHAR(255) NOT NULL,
  `uuid` char(38) NOT NULL,
  `accountid` BIGINT(20) NOT NULL,
  `notes` VARCHAR(1000),
  createdby                BIGINT       NOT NULL,
  datecreated              DATE,
  lastupdatedby            BIGINT,
  lastupdatedate           DATETIME,
  UNIQUE KEY `project_assignment` (`userid`, `projectid`, `taskid`, `startdate`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

ALTER TABLE `project_assignment`
  ADD CONSTRAINT `fk_project_assignment_account` FOREIGN KEY (`accountid`) REFERENCES account (`id`),
  ADD CONSTRAINT `fk_project_assignment_project` FOREIGN KEY (`projectid`) REFERENCES project (`id`),
  ADD CONSTRAINT `fk_project_assignment_task` FOREIGN KEY (`taskid`) REFERENCES task (`id`),
  ADD CONSTRAINT `fk_project_assignment_user` FOREIGN KEY (`userid`) REFERENCES app_user (`id`);

--
-- Assign the built in PTO projects for each user
--
INSERT INTO `project_assignment` (`userid`, `projectid`, `startdate`, `uuid`, `accountid`) SELECT u.id as `userid`, t.id as `projectid`, u.datecreated, UUID(), u.account_id FROM app_user u, project t WHERE u.account_id = t.accountid;


--
-- Rates charged for projects
--
DROP TABLE IF EXISTS `projectrate`;

CREATE TABLE IF NOT EXISTS `projectrate` (
    `id` bigint(20) AUTO_INCREMENT PRIMARY KEY,
    `accountid` BIGINT(20) NOT NULL,
    `userid` BIGINT(20),
    `projectid` BIGINT(20),
    `startdate` datetime  NOT NULL,
    `enddate` datetime,
    `uuid` char(38) NOT NULL,
    `clientrate` decimal(10,2) NOT NULL DEFAULT '1.00',
    `contractorrate` decimal(10,2) NOT NULL DEFAULT '1.00',
    `agencyrate` decimal(10,2) NOT NULL DEFAULT '1.00',
    `overtimerate` decimal(10,2) NOT NULL DEFAULT '1.00',
    `premiumrate` decimal(10,2) NOT NULL DEFAULT '1.00',
    `doublerate` decimal(10,2) NOT NULL DEFAULT '1.00',
    `triplerate` decimal(10,2) NOT NULL DEFAULT '1.00',
    `dailyrate` decimal(10,2) NOT NULL DEFAULT '1.00',
    `weeklyrate` decimal(10,2) NOT NULL DEFAULT '1.00',
    `monthlyrate` decimal(10,2) NOT NULL DEFAULT '1.00',
    `notes` VARCHAR(1000),
    createdby                BIGINT(20)       NOT NULL,
    datecreated              DATETIME,
    lastupdatedby            BIGINT,
    lastupdatedate           DATETIME,
    UNIQUE KEY `projectrate_start` (`accountid`, `projectid`, `userid`, `startdate`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

ALTER TABLE `projectrate`
  ADD CONSTRAINT `fk_projectrate_account` FOREIGN KEY (`accountid`) REFERENCES account (`id`),
  ADD CONSTRAINT `fk_projectrate_user` FOREIGN KEY (`userid`) REFERENCES app_user (`id`),
  ADD CONSTRAINT `fk_projectrate_project` FOREIGN KEY (`projectid`) REFERENCES project (`id`),
  ADD CONSTRAINT `fk_projectrate_creator` FOREIGN KEY (`createdby`) REFERENCES app_user (`id`),
  ADD CONSTRAINT `fk_projectrate_updator` FOREIGN KEY (`lastupdatedby`) REFERENCES app_user (`id`);

--
-- Sample data
--
INSERT INTO projectrate(accountid, userid, projectid, startdate, enddate, uuid, createdby) SELECT accountid, userid, projectid, startdate, enddate, UUID(), createdby FROM project_assignment;

--
-- Add structure and data for timesheet submissions
--
DROP TABLE IF EXISTS `timesheet`;

CREATE TABLE IF NOT EXISTS `timesheet` (
  `id` bigint(20) AUTO_INCREMENT PRIMARY KEY,
  `userid` BIGINT(20) NOT NULL,
  `accountid` BIGINT(20) NOT NULL,
  `startdate` datetime  NOT NULL,
  `enddate` datetime  NOT NULL,
  `uuid` char(38) NOT NULL,
  `datecreated` DATETIME,
  `approved` TINYINT(1) NOT NULL DEFAULT 0,
  `approvaldate` DATETIME,
  `approvaldetails` VARCHAR(1000),
  `comments` mediumtext,
  UNIQUE KEY `timesheet` (`userid`, `startdate`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

ALTER TABLE `timesheet`
  ADD CONSTRAINT `fk_timesheet_account` FOREIGN KEY (`accountid`) REFERENCES account (`id`),
  ADD CONSTRAINT `fk_timesheet_user` FOREIGN KEY (`userid`) REFERENCES app_user (`id`);

DROP TABLE IF EXISTS `timesheet_detail`;

CREATE TABLE IF NOT EXISTS `timesheet_detail` (
  `id` bigint(20) AUTO_INCREMENT PRIMARY KEY,
  `userid` BIGINT(20) NOT NULL,
  `accountid` BIGINT(20) NOT NULL,
  `projectid` BIGINT(20) NOT NULL,
  `taskid` BIGINT(20) NOT NULL,
  `timesheetid` BIGINT(20) NOT NULL,
  `projectassignmentid` BIGINT(20) NOT NULL,
  `workday` date  NOT NULL,
  `hours` DECIMAL(2,1) NOT NULL,
  UNIQUE KEY `timesheet_detail` (`userid`, `taskid`, `timesheetid`, `workday`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

ALTER TABLE `timesheet_detail`
  ADD CONSTRAINT `fk_timesheet_detail_account` FOREIGN KEY (`accountid`) REFERENCES account (`id`),
  ADD CONSTRAINT `fk_timesheet_detail_project` FOREIGN KEY (`projectid`) REFERENCES project (`id`),
  ADD CONSTRAINT `fk_timesheet_detail_task` FOREIGN KEY (`taskid`) REFERENCES task (`id`),
  ADD CONSTRAINT `fk_timesheet_detail_project_assignment` FOREIGN KEY (`projectassignmentid`) REFERENCES project_assignment (`id`),
  ADD CONSTRAINT `fk_timesheet_detail_user` FOREIGN KEY (`userid`) REFERENCES app_user (`id`);

--
-- Task category
--

DROP TABLE IF EXISTS `taskcategory`;

CREATE TABLE IF NOT EXISTS `taskcategory` (
      `id` bigint(20) AUTO_INCREMENT PRIMARY KEY,
      `accountid` BIGINT(20) NOT NULL,
      `title` VARCHAR(255) NOT NULL ,
      `description` VARCHAR(1000),
      `uuid` char(38) NOT NULL,
      `datecreated` DATETIME,
      createdby                BIGINT       NOT NULL,
      lastupdatedby            BIGINT,
      lastupdatedate           DATETIME,
      UNIQUE KEY `task_category_title` (`accountid`, `title`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Sample data
--
INSERT INTO `taskcategory` (id, accountid, title, uuid, datecreated, createdby) VALUES(1, 2, 'CLIENT PRESENTATION', UUID(), NOW(), 1),  (2, 2, 'TECHSOFT GENERAL', UUID(), NOW(), 1), (3, 2, 'DEFAULT TASK', UUID(), NOW(), 1);

--
-- Companies
--
--
-- Task category
--

DROP TABLE IF EXISTS `taskidentifier`;

CREATE TABLE IF NOT EXISTS `taskidentifier` (
    `id` bigint(20) AUTO_INCREMENT PRIMARY KEY,
    `accountid` BIGINT(20) NOT NULL,
    `taskid` BIGINT(20) NOT NULL,
    `identifier` VARCHAR(255) NOT NULL ,
    `description` VARCHAR(1000),
    `uuid` char(38) NOT NULL,
    `datecreated` DATETIME,
    createdby                BIGINT       NOT NULL,
    lastupdatedby            BIGINT,
    lastupdatedate           DATETIME
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
--                                                                                     --
-- Task Queue
--

DROP TABLE IF EXISTS `taskqueue`;

CREATE TABLE IF NOT EXISTS `taskqueue` (
  `id` BIGINT(20) NOT NULL PRIMARY KEY ,
  `categoryid` BIGINT(20),
  `taskidenifierid` BIGINT(20)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

ALTER TABLE `taskqueue`
  ADD CONSTRAINT `fk_taskqueue_task` FOREIGN KEY (`id`) REFERENCES task (`id`),
  ADD CONSTRAINT `fk_taskqueue_category` FOREIGN KEY (`categoryid`) REFERENCES taskcategory (`id`);

--
-- Sample data
-- 
insert into taskqueue (id, categoryid, taskidenifierid) values (5, 3, null);
insert into taskqueue (id, categoryid, taskidenifierid) values (6, 1, null);
insert into taskqueue (id, categoryid, taskidenifierid) values (7, 2, null);

--                                                                                     --
-- Task Template
--

DROP TABLE IF EXISTS `tasktemplate`;

CREATE TABLE IF NOT EXISTS `tasktemplate` (
     `id` bigint(20) AUTO_INCREMENT PRIMARY KEY,
     `accountid` BIGINT(20) NOT NULL,
     `name` VARCHAR(255) NOT NULL ,
     `code` VARCHAR(255) NOT NULL ,
     `notes` VARCHAR(1000),
     `uuid` char(38) NOT NULL,
     `datecreated` DATETIME,
     createdby                BIGINT       NOT NULL,
     lastupdatedby            BIGINT,
     lastupdatedate           DATETIME,
     UNIQUE KEY `task_template_name` (`accountid`, `name`),
     UNIQUE KEY `task_template_code` (`accountid`, `code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

ALTER TABLE `tasktemplate`
  ADD CONSTRAINT `fk_tasktemplate_account` FOREIGN KEY (`accountid`) REFERENCES account (`id`),
  ADD CONSTRAINT `fk_tasktemplate_createdby` FOREIGN KEY (`createdby`) REFERENCES app_user (`id`);


DROP TABLE IF EXISTS `tasktemplatedetail`;

CREATE TABLE IF NOT EXISTS `tasktemplatedetail` (
    `id` bigint(20) AUTO_INCREMENT PRIMARY KEY,
    `accountid` BIGINT(20) NOT NULL,
    `tasktemplateid` BIGINT(20) NOT NULL,
    `name` VARCHAR(255) NOT NULL ,
    `description` VARCHAR(1000) NOT NULL,
    `assigneeid` BIGINT(20),
    `duration` INT(20) NOT NULL DEFAULT 1,
    `notes` VARCHAR(1000),
    `uuid` char(38) NOT NULL,
    `datecreated` DATETIME,
    createdby                BIGINT       NOT NULL,
    lastupdatedby            BIGINT,
    lastupdatedate           DATETIME
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*!40101 SET SQL_MODE = @OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT = @OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS = @OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION = @OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES = @OLD_SQL_NOTES */;/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;


--
-- Add a file_upload_location field to the user account
--
ALTER TABLE `app_user` ADD COLUMN `file_upload_location` VARCHAR(10) NOT NULL DEFAULT 'UserHome';
--
-- Nexus Module
--
-- roles
--
REPLACE INTO `role`(`name`) VALUES ('ROLE_NEXUS_ADMIN'), ('ROLE_NEXUS_ANALYSIS'), ('ROLE_NEXUS_FILE_UPLOAD'), ('ROLE_NEXUS_REPORT'), ('ROLE_ACTIVITY_CURRENT'), ('ROLE_ACTIVITY_HISTORY');

DROP TABLE IF EXISTS `state`;
CREATE TABLE `state` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `accountid` BIGINT(20) NOT NULL DEFAULT 1,
  `code` char(2) NOT NULL,
  `name` varchar(64) NOT NULL,
  createdby                BIGINT       NOT NULL,
  datecreated              DATETIME,
  lastupdatedby            BIGINT,
  lastupdatedate           DATETIME,
  PRIMARY KEY (`id`),
  UNIQUE KEY `state_code_account` (`accountid`, `code`)
) ENGINE=InnoDB AUTO_INCREMENT=60 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `state`
--

INSERT INTO `state` (`id`, `code`, `accountid`) VALUES (1,'AL','Alabama'),(2,'AK','Alaska'),(3,'AS','American Samoa'),(4,'AZ','Arizona'),(5,'AR','Arkansas'),(6,'CA','California'),(7,'CO','Colorado'),(8,'CT','Connecticut'),(9,'DE','Delaware'),(10,'DC','District of Columbia'),(11,'FM','Federated States of Micronesia'),(12,'FL','Florida'),(13,'GA','Georgia'),(14,'GU','Guam'),(15,'HI','Hawaii'),(16,'ID','Idaho'),(17,'IL','Illinois'),(18,'IN','Indiana'),(19,'IA','Iowa'),(20,'KS','Kansas'),(21,'KY','Kentucky'),(22,'LA','Louisiana'),(23,'ME','Maine'),(24,'MH','Marshall Islands'),(25,'MD','Maryland'),(26,'MA','Massachusetts'),(27,'MI','Michigan'),(28,'MN','Minnesota'),(29,'MS','Mississippi'),(30,'MO','Missouri'),(31,'MT','Montana'),(32,'NE','Nebraska'),(33,'NV','Nevada'),(34,'NH','New Hampshire'),(35,'NJ','New Jersey'),(36,'NM','New Mexico'),(37,'NY','New York'),(38,'NC','North Carolina'),(39,'ND','North Dakota'),(40,'MP','Northern Mariana Islands'),(41,'OH','Ohio'),(42,'OK','Oklahoma'),(43,'OR','Oregon'),(44,'PW','Palau'),(45,'PA','Pennsylvania'),(46,'PR','Puerto Rico'),(47,'RI','Rhode Island'),(48,'SC','South Carolina'),(49,'SD','South Dakota'),(50,'TN','Tennessee'),(51,'TX','Texas'),(52,'UT','Utah'),(53,'VT','Vermont'),(54,'VI','Virgin Islands'),(55,'VA','Virginia'),(56,'WA','Washington'),(57,'WV','West Virginia'),(58,'WI','Wisconsin'),(59,'WY','Wyoming');

--
-- Sample companies and users
--
REPLACE INTO account (`id`, `name`, `description`, `uuid`, `dashboard_url`) VALUES (3, 'Northrop', 'Demo account with access to Timesheet and Task Queue', '9da7561d-97b9-41aa-8efd-a165182b4a77', ''), (4, 'Walmart', 'Demo account with access to nexus module and Task queue', '589a7492-7361-4791-b9b2-d72287b25df8', 'https://app.powerbi.com/view?r=eyJrIjoiNTcwMTI1NWUtNjcyZS00MTU4LWFiYWEtZDA4MDgxMTNiMWU3IiwidCI6ImM3ZGZjNTk1LWU4OWUtNDQ4Ni1iNGM0LWI0NmRhZmFjMmU5NSIsImMiOjF9');

REPLACE INTO app_user (`id`, credential_nickname, credential_password, password_reset_token, password_requested_at, account_id, employeetemplateid, salutation, firstname, middlename, lastname, initials, gender, jobtitle, blccode, jobcategory, department, joblocation, employeetype, rateperhour, account, credential_email, personalemailaddress, uuid, snstopic, usertype, employeecategory, onvacation, mobilenumber, homephone, tsgbadgenumber, officeline1, officeline2, faxnumber, address1, address2, stateorprovince, postalcode, country, city, companyname, companyaddress, ssn, ein, birthdate, hiredate, employeestartdate, employeeenddate, releasedate, lastreviewdate, nextreviewdate, supervisorname, supervisoremail, supervisorofficeline, approver, approveremail, invoiceapprover, invoiceapproveremail, businessmeetingapprover, businessmeetingapproveremail, travelexpenseapprover, travelexpenseapproveremail, odcapprover, odcapproveremail, billsapprover, billsapproveremail, payrollfrequency, paycode, regularrate, regularratecode, maximumregularhours, overtimeallowed, overtimerate, overtimeratecode, maximumovertimehoursperday, maximumhoursperday, maximumhoursperweek, maximumovertimehours, vacationdaysallowed, maximumsocialsecurity, maximumvacationdays, personaldaysallowed, maximumpersonaldays, paidholidaysallowed, maximumpaidholidays, sickdaysallowed, maximumsickdays, saturdayworkallowed, sundayworkallowed, publicholidayworkallowed, employeebenefitsbillable, invoicecategory, employeejobs, status, createdby, datecreated, changedpassword, lastupdatedby, lastupdatedate, securityquestion, answer, disabledaily, passwordexpirydate, canviewemployeeresources, canviewpublicholidays, canviewpayrolldates, canviewtravelpolicy, canview401kinformation, canviewreferenceinformation, ec1_firstname, ec1_lastname, ec1_streetaddress, ec1_city, ec1_state, ec1_zipcode, ec1_homephone, ec1_workphone, ec1_cellphone, ec1_relationship, ec2_firstname, ec2_lastname, ec2_streetaddress, ec2_city, ec2_state, ec2_zipcode, ec2_homephone, ec2_workphone, ec2_cellphone, ec2_relationship, ec3_firstname, ec3_lastname, ec3_streetaddress, ec3_city, ec3_state, ec3_zipcode, ec3_homephone, ec3_workphone, ec3_cellphone, ec3_relationship, permissiontemplate, categoryuser, uniqueid, week_start, hourly_wage, photo, file_upload_location) VALUES (6, 'northrop-admin-ecf570f6-d7fd-4c54-8946-c3ec56b169ad', '$2y$13$2A.mwmtd1brc07i5W3e16Ol42keJ1ATtxmkf3KcCc16jZ9OGlBCp6', null, null, 3, null, '', 'Admin', '', 'Northorp', '', null, '', 'NP12345', '', '', '', '', '', '', 'northorp.admin@oncloudtime.com', '', 'ecf570f6-d7fd-4c54-8946-c3ec56b169ad', '', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '', '', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 0.00, null, 8.0, 'N', null, null, null, 0, 0, null, 'N', null, null, 'N', null, 'N', null, 'N', null, 'N', 'N', 'N', 'N', null, null, null, 1, '2019-04-27 10:00:34', 'N', null, null, null, null, 'N', null, 'N', 'N', 'N', 'N', 'N', 'N', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 'HRMS', null, '', '', 'None', 'UserHome'),(7, 'northrop-user-c67d1c88-0613-4890-89d6-f90879e96c87', '$2y$13$2A.mwmtd1brc07i5W3e16Ol42keJ1ATtxmkf3KcCc16jZ9OGlBCp6', null, null, 3, null, '', 'User', '', 'Northorp', '', null, '', 'NP1234', '', '', '', '', '', '', 'northorp.user@oncloudtime.com', '', 'c67d1c88-0613-4890-89d6-f90879e96c87', '', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '', '', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 0.00, null, 8.0, 'N', null, null, null, 0, 0, null, 'N', null, null, 'N', null, 'N', null, 'N', null, 'N', 'N', 'N', 'N', null, null, null, 1, '2019-04-27 10:00:34', 'N', null, null, null, null, 'N', null, 'N', 'N', 'N', 'N', 'N', 'N', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 'HRMS', null, '', '', 'None', 'UserHome'),(8, 'walmart-admin-01965cce-f45e-496c-8364-87998b2ff3bc', '$2y$13$2A.mwmtd1brc07i5W3e16Ol42keJ1ATtxmkf3KcCc16jZ9OGlBCp6', null, null, 4, null, '', 'Admin', '', 'Walmart', '', null, '', 'WL12345', '', '', '', '', '', '', 'walmart.admin@oncloudtime.com', '', '01965cce-f45e-496c-8364-87998b2ff3bc', '', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '', '', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 0.00, null, 8.0, 'N', null, null, null, 0, 0, null, 'N', null, null, 'N', null, 'N', null, 'N', null, 'N', 'N', 'N', 'N', null, null, null, 1, '2019-04-27 10:00:34', 'N', null, null, null, null, 'N', null, 'N', 'N', 'N', 'N', 'N', 'N', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 'HRMS', null, '', '', 'None', 'Shared'),(9, 'walmart-user-c31558bb-4215-4dd5-bc88-8f75e8716706', '$2y$13$2A.mwmtd1brc07i5W3e16Ol42keJ1ATtxmkf3KcCc16jZ9OGlBCp6', null, null, 4, null, '', 'User', '', 'Walmart', '', null, '', 'WL1234', '', '', '', '', '', '', 'walmart.user@oncloudtime.com', '', 'c31558bb-4215-4dd5-bc88-8f75e8716706', '', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, '', '', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 0.00, null, 8.0, 'N', null, null, null, 0, 0, null, 'N', null, null, 'N', null, 'N', null, 'N', null, 'N', 'N', 'N', 'N', null, null, null, 1, '2019-04-27 10:00:34', 'N', null, null, null, null, 'N', null, 'N', 'N', 'N', 'N', 'N', 'N', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 'HRMS', null, '', '', 'None', 'Shared');

--
-- User Roles
--
--
-- Sample data
--
REPLACE INTO `user_role`(`user_id`, `role_name`) VALUES (1, 'ROLE_TIMESHEET_SUBMISSION'), (6, 'ROLE_TASK'), (6, 'ROLE_TASK_QUEUE'), (6, 'ROLE_PROJECT'), (6, 'ROLE_TIMESHEET_ASSIGNMENT'), (6, 'ROLE_TIMESHEET_SUBMISSION'), (6, 'ROLE_TASK_TEMPLATE'), (6, 'ROLE_TASK_CATEGORY'),(6, 'ROLE_PROJECT_RATE'),(7, 'ROLE_TIMESHEET_SUBMISSION'), (7, 'ROLE_TASK_QUEUE'), (8, 'ROLE_TASK_TEMPLATE'), (8, 'ROLE_TASK_CATEGORY'),(8, 'ROLE_TASK_QUEUE');

--
-- Activities
--
REPLACE INTO `user_role`(`user_id`, `role_name`) VALUES (1, 'ROLE_ACTIVITY_CURRENT'), (1, 'ROLE_ACTIVITY_CURRENT'),(2, 'ROLE_ACTIVITY_CURRENT'), (2, 'ROLE_ACTIVITY_CURRENT'),(3, 'ROLE_ACTIVITY_CURRENT'), (3, 'ROLE_ACTIVITY_CURRENT'),(4, 'ROLE_ACTIVITY_CURRENT'), (4, 'ROLE_ACTIVITY_CURRENT'),(5, 'ROLE_ACTIVITY_CURRENT'), (5, 'ROLE_ACTIVITY_CURRENT'),(6, 'ROLE_ACTIVITY_CURRENT'), (6, 'ROLE_ACTIVITY_CURRENT'),(7, 'ROLE_ACTIVITY_CURRENT'), (7, 'ROLE_ACTIVITY_CURRENT'), (8, 'ROLE_ADMIN');
--
-- Nexus module roles
--
REPLACE INTO `user_role`(`user_id`, `role_name`) VALUES (1, 'ROLE_NEXUS_ADMIN'), (1, 'ROLE_NEXUS_FILE_UPLOAD'), (1, 'ROLE_NEXUS_REPORT'), (1, 'ROLE_NEXUS_ANALYSIS'), (2, 'ROLE_NEXUS_FILE_UPLOAD'), (2, 'ROLE_NEXUS_REPORT'),(3, 'ROLE_NEXUS_ADMIN'), (3, 'ROLE_NEXUS_ANALYSIS'),(3, 'ROLE_NEXUS_FILE_UPLOAD'), (3, 'ROLE_NEXUS_REPORT'),(4, 'ROLE_NEXUS_ANALYSIS'),(4, 'ROLE_NEXUS_FILE_UPLOAD'), (4, 'ROLE_NEXUS_REPORT'),(5, 'ROLE_NEXUS_ANALYSIS'), (5, 'ROLE_NEXUS_FILE_UPLOAD'), (5, 'ROLE_NEXUS_REPORT'),(8, 'ROLE_NEXUS_ADMIN'), (8, 'ROLE_NEXUS_ANALYSIS'), (8, 'ROLE_NEXUS_FILE_UPLOAD'), (8, 'ROLE_NEXUS_REPORT'),(9, 'ROLE_NEXUS_ANALYSIS'), (9, 'ROLE_NEXUS_FILE_UPLOAD'), (9, 'ROLE_NEXUS_REPORT'),(9, 'ROLE_NEXUS_ADMIN');

--
-- Table structure for table `state_guide`
--

DROP TABLE IF EXISTS `state_guide`;
CREATE TABLE `state_guide` (
   `id` bigint(20) NOT NULL AUTO_INCREMENT,
   `accountid` bigint(20) NOT NULL,
   `state` varchar(100) DEFAULT NULL,
   `code` char(2) NOT NULL,
   `effectivedate` varchar(100) DEFAULT NULL,
   `salestransactionsthreshold` int(11) DEFAULT NULL,
   `salesdollarsthreshold` decimal(10,2) DEFAULT NULL,
   `nearingtransactioncountthreshold` int(11) DEFAULT NULL,
   `nearingsalesthreshold` decimal(10,2) DEFAULT NULL,
   `createdby` bigint(20) NOT NULL,
   `datecreated` datetime NOT NULL,
   `lastupdatedby` bigint(20) DEFAULT NULL,
   `lastupdatedate` datetime DEFAULT NULL,
   `uuid` char(38) NOT NULL,
   PRIMARY KEY (`id`),
   UNIQUE KEY `state_guide_state_code_account` (`accountid`,`code`),
   UNIQUE KEY `state_guide_state_account` (`accountid`,`state`),
   KEY `idx_state_guide_state` (`state`),
   KEY `idx_state_guide_code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=51 DEFAULT CHARSET=utf8;

--
-- Dumping data for table `state_guide`
--

INSERT INTO `state_guide` (`id`, `accountid`, `state`, `code`, `effectivedate`, `salestransactionsthreshold`, `salesdollarsthreshold`, `nearingtransactioncountthreshold`, `nearingsalesthreshold`, `createdby`, `datecreated`, `lastupdatedby`, `lastupdatedate`, `uuid`) VALUES (1,1,'Alabama','AL','2018-10-01',NULL,250000.00,NULL,200000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f341ef54-69d7-11e9-bcc6-1fa5dd6563c1'),(2,1,'Alaska','AK',NULL,NULL,NULL,NULL,NULL,1,'2019-04-27 19:50:15',NULL,NULL,'f341f5b2-69d7-11e9-bcc6-1fa5dd6563c1'),(3,1,'Arizona','AZ',NULL,200,100000.00,160,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f341f652-69d7-11e9-bcc6-1fa5dd6563c1'),(4,1,'Arkansas','AR',NULL,200,100000.00,160,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f341f6ca-69d7-11e9-bcc6-1fa5dd6563c1'),(5,1,'California','CA','2019-04-01',200,100000.00,160,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f341f72e-69d7-11e9-bcc6-1fa5dd6563c1'),(6,1,'Colorado','CO','2018-12-01',200,100000.00,160,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f341f792-69d7-11e9-bcc6-1fa5dd6563c1'),(7,1,'Connecticut','CT','2018-12-01',200,250000.00,160,200000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f341f800-69d7-11e9-bcc6-1fa5dd6563c1'),(8,1,'Delaware','DE',NULL,NULL,NULL,NULL,NULL,1,'2019-04-27 19:50:15',NULL,NULL,'f341f86e-69d7-11e9-bcc6-1fa5dd6563c1'),(9,1,'District of Columbia','DC','2019-01-01',200,100000.00,160,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f341f8d2-69d7-11e9-bcc6-1fa5dd6563c1'),(10,1,'Florida','FL','2019-07-01',200,100000.00,160,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f341f9a4-69d7-11e9-bcc6-1fa5dd6563c1'),(11,1,'Georgia','GA','2019-01-01',200,250000.00,160,200000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f341fa12-69d7-11e9-bcc6-1fa5dd6563c1'),(12,1,'Hawaii','HI','2018-07-01',NULL,10000.00,NULL,8000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f341fa76-69d7-11e9-bcc6-1fa5dd6563c1'),(13,1,'Idaho','ID','2018-07-01',200,100000.00,160,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f341fada-69d7-11e9-bcc6-1fa5dd6563c1'),(14,1,'Illinois','IL','2018-10-01',200,100000.00,160,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f341fb3e-69d7-11e9-bcc6-1fa5dd6563c1'),(15,1,'Indiana','IN','2018-10-01',200,100000.00,160,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f341fba2-69d7-11e9-bcc6-1fa5dd6563c1'),(16,1,'Kansas','KS',NULL,NULL,NULL,NULL,NULL,1,'2019-04-27 19:50:15',NULL,NULL,'f341fc06-69d7-11e9-bcc6-1fa5dd6563c1'),(17,1,'Iowa','IA','2019-01-01',200,100000.00,160,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f341fc6a-69d7-11e9-bcc6-1fa5dd6563c1'),(18,1,'Kentucky','KY','2018-10-01',200,100000.00,160,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f341fcce-69d7-11e9-bcc6-1fa5dd6563c1'),(19,1,'Louisiana','LA','2019-01-01',200,100000.00,160,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f341fd28-69d7-11e9-bcc6-1fa5dd6563c1'),(20,1,'Maine','ME','2018-07-01',200,100000.00,160,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f341fda0-69d7-11e9-bcc6-1fa5dd6563c1'),(21,1,'Maryland','MD','2018-10-01',100,500000.00,80,400000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f341fddc-69d7-11e9-bcc6-1fa5dd6563c1'),(22,1,'Massachusetts','MA','2017-10-01',200,100000.00,160,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f341fe18-69d7-11e9-bcc6-1fa5dd6563c1'),(23,1,'Michigan','MI','2018-10-01',100,100000.00,80,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f341fe5e-69d7-11e9-bcc6-1fa5dd6563c1'),(24,1,'Minnesota','MN','2018-10-01',NULL,NULL,NULL,NULL,1,'2019-04-27 19:50:15',NULL,NULL,'f341fe9a-69d7-11e9-bcc6-1fa5dd6563c1'),(25,1,'Mississippi','MS','2018-09-01',200,100000.00,160,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f341fed6-69d7-11e9-bcc6-1fa5dd6563c1'),(26,1,'Missouri','MO',NULL,NULL,NULL,NULL,NULL,1,'2019-04-27 19:50:15',NULL,NULL,'f341ff58-69d7-11e9-bcc6-1fa5dd6563c1'),(27,1,'Montana','MT',NULL,200,100000.00,160,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f341ff9e-69d7-11e9-bcc6-1fa5dd6563c1'),(28,1,'Nebraska','NE','2019-01-01',200,100000.00,160,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f341ffe4-69d7-11e9-bcc6-1fa5dd6563c1'),(29,1,'Nevada','NV','2018-10-01',NULL,NULL,NULL,NULL,1,'2019-04-27 19:50:15',NULL,NULL,'f3420020-69d7-11e9-bcc6-1fa5dd6563c1'),(30,1,'New Hampshire','NH',NULL,200,100000.00,160,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f34200c0-69d7-11e9-bcc6-1fa5dd6563c1'),(31,1,'New Mexico','NM',NULL,NULL,NULL,NULL,NULL,1,'2019-04-27 19:50:15',NULL,NULL,'f342021e-69d7-11e9-bcc6-1fa5dd6563c1'),(32,1,'New Jersey','NJ','2018-11-01',200,100000.00,160,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f34202be-69d7-11e9-bcc6-1fa5dd6563c1'),(33,1,'New York','NY','2019-01-15',100,300000.00,80,240000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f3420340-69d7-11e9-bcc6-1fa5dd6563c1'),(34,1,'North Carolina','NC','2018-11-01',200,100000.00,160,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f34203ae-69d7-11e9-bcc6-1fa5dd6563c1'),(35,1,'North Dakota','ND','2019-10-01',200,100000.00,160,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f3420412-69d7-11e9-bcc6-1fa5dd6563c1'),(36,1,'Ohio','OH',NULL,NULL,100000.00,NULL,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f3420480-69d7-11e9-bcc6-1fa5dd6563c1'),(37,1,'Oregon','OR',NULL,NULL,NULL,NULL,NULL,1,'2019-04-27 19:50:15',NULL,NULL,'f34204e4-69d7-11e9-bcc6-1fa5dd6563c1'),(38,1,'Oklahoma','OK','2019-07-01',NULL,100000.00,NULL,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f3420552-69d7-11e9-bcc6-1fa5dd6563c1'),(39,1,'Pennsylvania','PA','2019-07-01',NULL,100000.00,NULL,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f34205ac-69d7-11e9-bcc6-1fa5dd6563c1'),(40,1,'Rhode Island','RI','2017-08-17',200,100000.00,160,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f342061a-69d7-11e9-bcc6-1fa5dd6563c1'),(41,1,'South Carolina','SC','2018-11-01',200,100000.00,160,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f3420688-69d7-11e9-bcc6-1fa5dd6563c1'),(42,1,'South Dakota','SD','2018-11-01',200,100000.00,160,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f342076e-69d7-11e9-bcc6-1fa5dd6563c1'),(43,1,'Tennessee','TN',NULL,NULL,NULL,NULL,NULL,1,'2019-04-27 19:50:15',NULL,NULL,'f34207dc-69d7-11e9-bcc6-1fa5dd6563c1'),(44,1,'Texas','TX','2019-10-01',NULL,500000.00,NULL,400000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f342084a-69d7-11e9-bcc6-1fa5dd6563c1'),(45,1,'Utah','UT','2019-01-01',200,100000.00,160,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f34208b8-69d7-11e9-bcc6-1fa5dd6563c1'),(46,1,'Vermont','VT','2018-07-01',200,100000.00,160,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f3420976-69d7-11e9-bcc6-1fa5dd6563c1'),(47,1,'Virginia','VA',NULL,200,100000.00,160,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f34209da-69d7-11e9-bcc6-1fa5dd6563c1'),(48,1,'Washington','WA','2018-10-01',200,100000.00,160,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f3420a48-69d7-11e9-bcc6-1fa5dd6563c1'),(49,1,'West Virginia','WV','2019-01-01',200,100000.00,160,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f3420ab6-69d7-11e9-bcc6-1fa5dd6563c1'),(50,1,'Wisconsin','WI','2018-10-01',200,100000.00,160,80000.00,1,'2019-04-27 19:50:15',NULL,NULL,'f3420b1a-69d7-11e9-bcc6-1fa5dd6563c1');

--
--  Add nexus report to the account table
--
ALTER TABLE `account`
    ADD COLUMN `nexus_report_url` VARCHAR(1000) DEFAULT NULL;


/*!40101 SET SQL_MODE = @OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT = @OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS = @OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION = @OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES = @OLD_SQL_NOTES */;