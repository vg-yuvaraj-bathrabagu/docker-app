{% if is_granted('IS_AUTHENTICATED_FULLY') %}
{% else %}
<footer class="footer">
    <div class="row">
        <div class="copyright center-block">
            &copy; {{ "now" | date("Y") }} {{ company_name }}. All Rights Reserved
        </div>
    </div>
</footer>
{% endif %}
    <!--   Core JS Files. Extra: TouchPunch for touch library inside jquery-ui.min.js   -->
    <script src="{{ asset('js/jquery-3.1.1.min.js') }}" type="text/javascript"></script>
    <script src="{{ asset('js/jquery-ui.min.js') }}" type="text/javascript"></script>
    <script src="{{ asset('js/perfect-scrollbar.min.js') }}" type="text/javascript"></script>
    <script src="{{ asset('js/bootstrap.min.js') }}" type="text/javascript"></script>

    <!--  Forms Validations Plugin -->
    <script src="{{ asset('js/jquery.validate.min.js') }}"></script>

    <!-- Promise Library for SweetAlert2 working on IE -->
    <script src="{{ asset('js/es6-promise-auto.min.js') }}"></script>

    <!--  Plugin for Date Time Picker and Full Calendar Plugin-->
    <script src="{{ asset('js/moment.min.js') }}"></script>

    <!--  Date Time Picker Plugin is included in this js file -->
    <script src="{{ asset('js/bootstrap-datetimepicker.js') }}"></script>

    <!--  Select Picker Plugin -->
    <script src="{{ asset('js/bootstrap-selectpicker.js') }}"></script>

    <!--  Checkbox, Radio, Switch and Tags Input Plugins -->
    <script src="{{ asset('js/bootstrap-switch-tags.js') }}"></script>

    <!--  Notifications Plugin    -->
    <script src="{{ asset('js/bootstrap-notify.js') }}"></script>

    <!-- Sweet Alert 2 plugin -->
    <script src="{{ asset('js/sweetalert2.js') }}"></script>

    <!-- Wizard Plugin    -->
    <script src="{{ asset('js/jquery.bootstrap.wizard.min.js') }}"></script>

    <!--  Plugin for DataTables.net  -->
    <script src="{{ asset('js/jquery.datatables.js') }}"></script>

    <!-- Calendar display library -->
    <script src="{{ asset('js/fullcalendar.min.js') }}"></script>

    <script src="{{ asset('js/paper-dashboard.js?v=1.2.1') }}"></script>


    <!-- Paper Dashboard PRO DEMO methods, don't include it in your project! -->
    <script src="{{ asset('js/demo.js')}}"></script>

    <!--   Sharrre Library    -->
    <script src="{{ asset('js/jquery.sharrre.js') }}"></script>

    <!--   JQuery CSV reading library    -->
    <script src="{{ asset('js/jquery.csv.min.js') }}"></script>

    <!--   JQuery File Download library    -->
    <script src="{{ asset('js/jquery.file.download.js') }}"></script>

    <!-- Custom Project specific javascript -->
    <script src="{{ asset('js/oncloudtime.js') }}"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $('li').removeClass('active');
        $('div').removeClass('in').removeClass('active');
        var activeClass = window.location.href.substr(window.location.href.lastIndexOf('/') + 1);
        $('.' + activeClass).parents('li').addClass('active');
        if ($('.' + activeClass).parent('li').closest('div')) {
            $('.' + activeClass).parent('li').closest('div').addClass('in').addClass('active');
        }

        /* hide all inactive collapsed sections, but not the current one */
        $('.sidebar-wrapper a').click( function(e) {
            $('.collapse:not(.active)').collapse('hide');
        });
        // Setup the DataTables where used
        setupDataTable();

        // setup all links in containers with the new-window-link class to open in a new window
        $('.new-window-link a').attr('target', '_blank');

        {% if is_granted('IS_AUTHENTICATED_FULLY') %}
            // show notificaitons only when the user is logged in
            $.ajax({
                url: "notifications",
                // the formData function is available in almost all new browsers.
                type: "GET",
                dataType: "json",
                error: function (err) {
                    error = true;
                },
                success: function (data) {

                },
                complete: function (data) {
                    showNotifications(data);
                }
            });
        {% endif %}
    });

    // close button on forms and the x closing modals should clear when clicked
    $(document).on('click', '.btn-secondary, .btn-secondary.cls, .close', function() {
        $('.btn-secondary').closest("form").clearForm();
        $(".create").html('Create');
        // empty the error contents too
        $('#error_contents').html("");
    });

    // mark a notification as read
    $(document).on('click', '.notification-row', function () {
        var readUrl = $(this).attr('data-location');

        var isread = $(this).attr('data-isread');
        if (isread === '0') {
            error = false;
            $.ajax({
                url: readUrl,
                type: "get",
                error: function (err) {
                    console.error(err);
                    error = true;
                },
                success: function (data) {
                    var read_count = $('#notification-count').data('count');
                    // reduce the count of read notifications
                    changeNotificationCount(read_count -1);
                }
            });
            if (!error) {
                // no error has occured
                $(this).attr('data-isread', 1);
                $(this).find("i").removeClass("fa-envelope").addClass("fa-envelope-open-o");
            }
        }
    });

    /**
     * Setup Datatables configuration since tables are reloaded via AJAX
     */
    function setupDataTable(selector = '.table:not(.no-datatable)') {
        /* Data Table plugin integration - the no-datatable class stops this styling from being applied*/
        var table = $(selector).DataTable({
            'dom': '<"top">tp',
            "pagingType" : "simple_numbers",
            "pageLength": {{ tables_rows_per_page }},
            "order": [],
            language: {
                paginate: {
                    next: '&gt;', // or '>'
                    previous: '&lt;' // or '<'
                }
            }
        });

        $('.search').on('keyup', function(){
            table.search(this.value).draw();
        });
        // This is copied as is from the paper-dashboard.js library as part of trying to remove its functionality
        // We put modals out of wrapper to working properly
        $('.modal').appendTo("body");
        // setup all links in containers with the new-window-link class to open in a new window
        $('.new-window-link a').attr('target', '_blank');
    }

    /**
     * Setup Datatables configuration for the Upload page which includes a filter on the folder column
     */
    function setupUploadDataTable(selector = '.table:not(.no-datatable)') {
        /* Data Table plugin integration - the no-datatable class stops this styling from being applied*/
        var table = $(selector).DataTable({
            'dom': '<"top">tp',
            "pagingType" : "simple_numbers",
            "pageLength": {{ tables_rows_per_page }},
            "order": [],
            language: {
                paginate: {
                    next: '&gt;', // or '>'
                    previous: '&lt;' // or '<'
                }
            },
            initComplete: function () {
                // columns use a 0 based column index
                this.api().columns(2).every( function () {
                    var column = this;
                    var select = $('<select id="folder-filter" class="form-control"><option value="">Filter by Folder</option></select>')
                        .on( 'change', function () {
                            var val = $.fn.dataTable.util.escapeRegex(
                                $(this).val()
                            );

                            column
                                .search( val ? '^'+val+'$' : '', true, false )
                                .draw();
                        } );

                    column.data().unique().sort().each( function ( d, j ) {
                        select.append( '<option value="'+d+'">'+d+'</option>' )
                    } );
                    // add the select to the span
                    $('#folder-filter-container').html(select);
                } );
            }
        });

        $('.search').on('keyup', function(){
            table.search(this.value).draw();
        });
        // This is copied as is from the paper-dashboard.js library as part of trying to remove its functionality
        // We put modals out of wrapper to working properly
        $('.modal').appendTo("body");
        // setup all links in containers with the new-window-link class to open in a new window
        $('.new-window-link a').attr('target', '_blank');
    }

    function pushNotification(message, notification, notifyType, stage) {
        $.notify({
            icon: 'ti-bell',
            message: message

        }, {
            type: notifyType,
            timer: 5000
        });
        var cls = "success";
        var color = "{{ notification_success_color }}";
        if (notifyType === "info") {
            color = "{{ notification_info_color }}";
        }
        if (notification.indexOf('failed') >= 0) {
            cls = "danger";
            color = "{{ notification_failed_color }}";
        }
        $.ajax({
            url: "pushnotification",
            type: "POST",
            dataType: "json",
            data: {'message': message, "category": notifyType, "color": color},
            error: function (err) {
                error = true;
            },
            success: function (data) {

            },
            complete: function (data) {
                showNotifications(data);
            }
        });
    }

    function showNotifications(data) {
        var unread_count = 0;
        var content = "";
        for (i in data.responseJSON) {
            content += "<li data-isread='"+data.responseJSON[i].isread +"' data-location='markread?id=" + data.responseJSON[i].id + "' style='background-color: " + data.responseJSON[i].color + "' class='bg-" + data.responseJSON[i].category + " notification-row'> <a href='javascript:void(0);'>";
                if (data.responseJSON[i].isread === 0) {
                    unread_count++;
                    // add open envelope icon
                    content += '<i class="fa fa-envelope"></i>&nbsp;';
                } else {
                    // add closed envelope icon
                    content += '<i class="fa fa-envelope-open-o"></i>&nbsp;';
                }
            content += data.responseJSON[i].action + "</a></li>";
        }
        $(".notify").html(content);
        // change the notification value by leveraging the after property
        changeNotificationCount(unread_count);
    }

    /**
     *
     *  Update the notification cout
     * @param unread_count Number of undread notifications
     */
    function changeNotificationCount(unread_count) {
        $('head').append('<style>i.notification-icon:after{ content: "' + unread_count + '"} </style>');
        $('#notification-count').data('count', unread_count);
    }

    /**
     * Initialize the date picker in popup windows
     */
    function initDatePicker() {
        $('.datepicker').datetimepicker({
            format: 'YYYY-MM-DD',    //use this format if you want the 12hours timpiecker with AM/PM toggle
            icons: {
                time: "fa fa-clock-o",
                date: "fa fa-calendar",
                up: "fa fa-chevron-up",
                down: "fa fa-chevron-down",
                previous: 'fa fa-chevron-left',
                next: 'fa fa-chevron-right',
                today: 'fa fa-screenshot',
                clear: 'fa fa-trash',
                close: 'fa fa-remove'
            }
        });

    }


</script>