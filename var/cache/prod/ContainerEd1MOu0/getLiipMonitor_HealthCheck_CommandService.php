<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'liip_monitor.health_check.command' shared service.

include_once $this->targetDirs[3].'/vendor/symfony/console/Command/Command.php';
include_once $this->targetDirs[3].'/vendor/liip/monitor-bundle/Command/HealthCheckCommand.php';
include_once $this->targetDirs[3].'/vendor/zendframework/zenddiagnostics/src/Runner/Reporter/ReporterInterface.php';
include_once $this->targetDirs[3].'/vendor/liip/monitor-bundle/Helper/ConsoleReporter.php';
include_once $this->targetDirs[3].'/vendor/liip/monitor-bundle/Helper/RawConsoleReporter.php';
include_once $this->targetDirs[3].'/vendor/liip/monitor-bundle/Helper/RunnerManager.php';

$this->services['liip_monitor.health_check.command'] = $instance = new \Liip\MonitorBundle\Command\HealthCheckCommand(($this->services['liip_monitor.helper.console_reporter'] ?? ($this->services['liip_monitor.helper.console_reporter'] = new \Liip\MonitorBundle\Helper\ConsoleReporter())), ($this->services['liip_monitor.helper.raw_console_reporter'] ?? ($this->services['liip_monitor.helper.raw_console_reporter'] = new \Liip\MonitorBundle\Helper\RawConsoleReporter())), ($this->services['liip_monitor.helper.runner_manager'] ?? ($this->services['liip_monitor.helper.runner_manager'] = new \Liip\MonitorBundle\Helper\RunnerManager($this))));

$instance->setName('monitor:health');

return $instance;
