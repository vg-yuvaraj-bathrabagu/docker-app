<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.root_dir">/data/personal/docker-app/src</parameter>
    <parameter key="kernel.project_dir">/data/personal/docker-app</parameter>
    <parameter key="kernel.environment">prod</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.name">src</parameter>
    <parameter key="kernel.cache_dir">/data/personal/docker-app/var/cache/prod</parameter>
    <parameter key="kernel.logs_dir">/data/personal/docker-app/var/log</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</parameter>
      <parameter key="DoctrineCacheBundle">Doctrine\Bundle\DoctrineCacheBundle\DoctrineCacheBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="MsgPhpUserBundle">MsgPhp\UserBundle\MsgPhpUserBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="AwsBundle">Aws\Symfony\AwsBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="LiipMonitorBundle">Liip\MonitorBundle\LiipMonitorBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="path">/data/personal/docker-app/vendor/symfony/framework-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="TwigBundle" type="collection">
        <parameter key="path">/data/personal/docker-app/vendor/symfony/twig-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\TwigBundle</parameter>
      </parameter>
      <parameter key="SensioFrameworkExtraBundle" type="collection">
        <parameter key="path">/data/personal/docker-app/vendor/sensio/framework-extra-bundle</parameter>
        <parameter key="namespace">Sensio\Bundle\FrameworkExtraBundle</parameter>
      </parameter>
      <parameter key="DoctrineCacheBundle" type="collection">
        <parameter key="path">/data/personal/docker-app/vendor/doctrine/doctrine-cache-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineCacheBundle</parameter>
      </parameter>
      <parameter key="DoctrineBundle" type="collection">
        <parameter key="path">/data/personal/docker-app/vendor/doctrine/doctrine-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineBundle</parameter>
      </parameter>
      <parameter key="MsgPhpUserBundle" type="collection">
        <parameter key="path">/data/personal/docker-app/vendor/msgphp/user-bundle</parameter>
        <parameter key="namespace">MsgPhp\UserBundle</parameter>
      </parameter>
      <parameter key="SecurityBundle" type="collection">
        <parameter key="path">/data/personal/docker-app/vendor/symfony/security-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SecurityBundle</parameter>
      </parameter>
      <parameter key="AwsBundle" type="collection">
        <parameter key="path">/data/personal/docker-app/vendor/aws/aws-sdk-php-symfony/src</parameter>
        <parameter key="namespace">Aws\Symfony</parameter>
      </parameter>
      <parameter key="MonologBundle" type="collection">
        <parameter key="path">/data/personal/docker-app/vendor/symfony/monolog-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\MonologBundle</parameter>
      </parameter>
      <parameter key="LiipMonitorBundle" type="collection">
        <parameter key="path">/data/personal/docker-app/vendor/liip/monitor-bundle</parameter>
        <parameter key="namespace">Liip\MonitorBundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">srcProdDebugProjectContainer</parameter>
    <parameter key="container.autowiring.strict_mode">true</parameter>
    <parameter key="container.dumper.inline_class_loader">true</parameter>
    <parameter key="env(DATABASE_URL)"></parameter>
    <parameter key="activity.current.dashboardUrl">&lt;iframe id="powerbi_dashboard" width="800" height="600" src="https://app.powerbi.com/view?r=eyJrIjoiZWQ0OGQ3NDktNDllMy00NDVlLTgwNjItYzYxZWE0ZDc1ZDdjIiwidCI6ImM3ZGZjNTk1LWU4OWUtNDQ4Ni1iNGM0LWI0NmRhZmFjMmU5NSIsImMiOjF9" frameborder="0" allowFullScreen="true"&gt;&lt;/iframe&gt;</parameter>
    <parameter key="activity.history.dashboardUrl">&lt;iframe id="powerbi_dashboard" width="800" height="600" src="https://app.powerbi.com/view?r=eyJrIjoiZWQ0OGQ3NDktNDllMy00NDVlLTgwNjItYzYxZWE0ZDc1ZDdjIiwidCI6ImM3ZGZjNTk1LWU4OWUtNDQ4Ni1iNGM0LWI0NmRhZmFjMmU5NSIsImMiOjF9" frameborder="0" allowFullScreen="true"&gt;&lt;/iframe&gt;</parameter>
    <parameter key="company.name">OnCloudTime</parameter>
    <parameter key="rdbms.port">3306</parameter>
    <parameter key="rdbms.driver">pdo_mysql</parameter>
    <parameter key="rdbms.server_version">5.6</parameter>
    <parameter key="dashboard.powerbiUrl">&lt;iframe id="powerbi_dashboard" width="800" height="600" src="https://app.powerbi.com/view?r=eyJrIjoiZWQ0OGQ3NDktNDllMy00NDVlLTgwNjItYzYxZWE0ZDc1ZDdjIiwidCI6ImM3ZGZjNTk1LWU4OWUtNDQ4Ni1iNGM0LWI0NmRhZmFjMmU5NSIsImMiOjF9" frameborder="0" allowFullScreen="true"&gt;&lt;/iframe&gt;</parameter>
    <parameter key="nexus.powerbiUrl">&lt;iframe id="powerbi_dashboard" width="800" height="600" src="https://app.powerbi.com/view?r=eyJrIjoiNTcwMTI1NWUtNjcyZS00MTU4LWFiYWEtZDA4MDgxMTNiMWU3IiwidCI6ImM3ZGZjNTk1LWU4OWUtNDQ4Ni1iNGM0LWI0NmRhZmFjMmU5NSIsImMiOjF9" frameborder="0" allowFullScreen="true"&gt;&lt;/iframe&gt;</parameter>
    <parameter key="aws.region">us-east-1</parameter>
    <parameter key="aws.version">latest</parameter>
    <parameter key="log.level">info</parameter>
    <parameter key="s3.version">latest</parameter>
    <parameter key="s3.region">us-east-1</parameter>
    <parameter key="s3.presignduration">7890000</parameter>
    <parameter key="session.lifetime.seconds">3600</parameter>
    <parameter key="date.format">m/d/Y</parameter>
    <parameter key="shell" type="collection">
      <parameter key="accountCreateFile">admin/createaccount.sh</parameter>
      <parameter key="accountDeleteFile">admin/deleteaccount.sh</parameter>
      <parameter key="accountUpdateFile">admin/updateaccount.sh</parameter>
      <parameter key="adminResetFile">admin/reset.sh</parameter>
      <parameter key="appSetupFile">admin/setup.sh</parameter>
      <parameter key="athenaTableCreateFile">createathenatable.sh</parameter>
      <parameter key="athenaTableUpdateFile">updateathenatable.sh</parameter>
      <parameter key="conversionActivateFile">admin/activateconversion.sh</parameter>
      <parameter key="conversionCreateFile">admin/createconversion.sh</parameter>
      <parameter key="conversionDeleteFile">admin/deleteconversion.sh</parameter>
      <parameter key="conversionUpdateFile">admin/updateconversion.sh</parameter>
      <parameter key="fileuploadCreateFile">createfileupload.sh</parameter>
      <parameter key="fileuploadCopyToTemplate">copyfiletotemplatefolder.sh</parameter>
      <parameter key="fileuploadDelete">deletefileupload.sh</parameter>
      <parameter key="fileuploadRestore">restorefileupload.sh</parameter>
      <parameter key="filewatcherCreateFile">createfilewatcher.sh</parameter>
      <parameter key="filewatcherDeleteFile">deletefilewatcher.sh</parameter>
      <parameter key="filewatcherRunFile">runfilewatcher.sh</parameter>
      <parameter key="filewatcherUpdateFile">updatefilewatcher.sh</parameter>
      <parameter key="hadoopCreateFile">createhadoop.sh</parameter>
      <parameter key="hadoopStartFile">starthadoop.sh</parameter>
      <parameter key="hadoopStopFile">stophadoop.sh</parameter>
      <parameter key="mppCreateFile">creatempp.sh</parameter>
      <parameter key="mppStartFile">startmpp.sh</parameter>
      <parameter key="mppStopFile">stopmpp.sh</parameter>
      <parameter key="orcConversion">orcConversion.sh</parameter>
      <parameter key="parquetConversion">parquetConversion.sh</parameter>
      <parameter key="permissionsUpdateFile">admin/updatepermission.sh</parameter>
      <parameter key="projectAssignmentCreateFile">createprojectassignment.sh</parameter>
      <parameter key="projectAssignmentDeleteFile">deleteprojectassignment.sh</parameter>
      <parameter key="projectAssignmentUpdateFile">updateprojectassignment.sh</parameter>
      <parameter key="projectCreateFile">createproject.sh</parameter>
      <parameter key="projectDeleteFile">deleteproject.sh</parameter>
      <parameter key="projectUpdateFile">updateproject.sh</parameter>
      <parameter key="queryCreateFile">createquery.sh</parameter>
      <parameter key="queryDeleteFile">deletequery.sh</parameter>
      <parameter key="queryRunFile">runQuery.sh</parameter>
      <parameter key="queryUpdateFile">updatequery.sh</parameter>
      <parameter key="runNexusAnalysisFile">runNexusAnalysis.sh</parameter>
      <parameter key="getNexusAnalysisDates">getNexusAnalysisDates.sh</parameter>
      <parameter key="runNexusDataPreviewFile">runNexusDataPreview.sh</parameter>
      <parameter key="simulationCreateFile">createsimulation.sh</parameter>
      <parameter key="simulationDeleteFile">deletesimulation.sh</parameter>
      <parameter key="simulationRunFile">runsimulation.sh</parameter>
      <parameter key="simulationUpdateFile">updatesimulation.sh</parameter>
      <parameter key="tableSearchFile">tablesearchfiles.sh</parameter>
      <parameter key="taskCreateFile">createtask.sh</parameter>
      <parameter key="taskDeleteFile">deletetask.sh</parameter>
      <parameter key="taskUpdateFile">updatetask.sh</parameter>
      <parameter key="templateCreateFile">createtemplate.sh</parameter>
      <parameter key="templateDeleteFile">deletetemplate.sh</parameter>
      <parameter key="templateSyncFile">synctemplate.sh</parameter>
      <parameter key="templateUpdateFile">updatetemplate.sh</parameter>
      <parameter key="timesheetCreateFile">createtimesheet.sh</parameter>
      <parameter key="timesheetDeleteFile">deletetimesheet.sh</parameter>
      <parameter key="timesheetUpdateFile">updatetimesheet.sh</parameter>
      <parameter key="userChangePasswordFile">admin/changeuserpassword.sh</parameter>
      <parameter key="userCreateFile">admin/createuser.sh</parameter>
      <parameter key="userDeleteFile">admin/deleteuser.sh</parameter>
      <parameter key="userUpdateFile">admin/updateuser.sh</parameter>
      <parameter key="userForgotPasswordFile">admin/forgotpassword.sh</parameter>
    </parameter>
    <parameter key="sns_topic_prefix">oncloudtime-</parameter>
    <parameter key="tables.long_text_display_characters">20</parameter>
    <parameter key="tables.rows_per_page">7</parameter>
    <parameter key="tables.templates_rows_per_page">4</parameter>
    <parameter key="asset.image.login">logo-no-words.png</parameter>
    <parameter key="asset.image.sidebar">logo-no-words.png</parameter>
    <parameter key="nexus.template.samplerow">State,Sales Price,Document Number,Document Date,Posting Date Alabama,420.33,INV303030030,12-15-18,12-15-18</parameter>
    <parameter key="nexus.template.rules">{"columnname_4":"postingdate","datatype_4":"String","processing_4":"1","parameter_4":"","target_4":"postingdate","order_4":"4","columnname_0":"state","datatype_0":"String","processing_0":"1","parameter_0":"","target_0":"state","order_0":"0","columnname_1":"salesprice","datatype_1":"Double","processing_1":"1","parameter_1":"","target_1":"salesprice","order_1":"1","columnname_2":"documentnumber","datatype_2":"String","processing_2":"1","parameter_2":"","target_2":"documentnumber","order_2":"2","columnname_3":"documentdate","datatype_3":"String","processing_3":"1","parameter_3":"","target_3":"documentdate","order_3":"3"}</parameter>
    <parameter key="nexus.analysis.query">SELECT s.state, nn.transactions, nn.totalsales, (CASE WHEN nn.transactions &gt; salestransactionsthreshold THEN 'Yes' WHEN nn.transactions &gt; nearingtransactioncountthreshold THEN 'Close' ELSE 'No' END) AS transaction_thresholds_met,  (CASE WHEN nn.totalsales &gt; salesdollarsthreshold THEN 'Yes' WHEN nn.totalsales &gt; nearingsalesthreshold THEN 'Close' ELSE 'No' END) as sales_thresholds_met, s.salestransactionsthreshold, s.salesdollarsthreshold, s.nearingtransactioncountthreshold, s.nearingsalesthreshold FROM stateguide s INNER JOIN (SELECT n.state, count(n.salesprice) as transactions, SUM(n.salesprice) AS totalsales FROM #table_name# n #date_filter_string# GROUP BY n.state) AS nn ON s.state = nn.state #state_filter_string#</parameter>
    <parameter key="nexus.dataprofile.query">SELECT state, COUNT(state) as transaction_count, SUM(salesprice) AS total_sales, date_format(date_parse(documentdate, '%m/%d/%Y'), '%m') as month, date_format(date_parse(documentdate, '%m/%d/%Y'), '%Y') as year_value FROM #table_name# #filter_string# GROUP BY state, date_format(date_parse(documentdate, '%m/%d/%Y'), '%m'), date_format(date_parse(documentdate, '%m/%d/%Y'), '%Y') ORDER BY state</parameter>
    <parameter key="nexus.dropdowndates.query">SELECT DISTINCT date_format(date_trunc('month', date_parse(documentdate, '%m/%d/%Y')), '%Y-%m-%d') as startdate, date_format(date_add('day', -1, date_add('month', 1, date_trunc('month', date_parse(documentdate, '%m/%d/%Y')))), '%Y-%m-%d') as enddate FROM #table_name# ORDER BY startdate</parameter>
    <parameter key="sidebar.activetext.color">#df4e71</parameter>
    <parameter key="notification.success.color">green</parameter>
    <parameter key="notification.failed.color">#df4e71</parameter>
    <parameter key="notification.info.color">blue</parameter>
    <parameter key="cognito.userpool.groupname">oncloudtimePoolGroup</parameter>
    <parameter key="cognito.userpool.name">oncloudtime-user-pool-dev</parameter>
    <parameter key="cognito.userpool.iamrolename">oncloudtime-iam-role-dev</parameter>
    <parameter key="cognito.userpool.clientname">oncloudtime-client-app</parameter>
    <parameter key="cognito.userpool.defaultuserpassword">oc-APP-001</parameter>
    <parameter key="rdbms_user">root</parameter>
    <parameter key="rdbms_password">mysql</parameter>
    <parameter key="rdbms_dbname">oncloudtime</parameter>
    <parameter key="rdbms_host">localhost</parameter>
    <parameter key="aws_credentials_key">AKIAIZ6ENRM52CQMFSTA</parameter>
    <parameter key="aws_credentials_secret">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</parameter>
    <parameter key="athena_directory">test</parameter>
    <parameter key="athena_database">test</parameter>
    <parameter key="athena_input">s3://yuva-bucket/</parameter>
    <parameter key="athena_output">s3://yuva-bucket/athena-output/</parameter>
    <parameter key="sqs_notificationQueue">https://sqs.us-east-1.amazonaws.com/590297375119/test-yuva</parameter>
    <parameter key="s3_bucket">yuva-bucket</parameter>
    <parameter key="need_update">no</parameter>
    <parameter key="sns_general_topic">arn:aws:sns:us-east-1:590297375119:test-sns</parameter>
    <parameter key="cognito_pool_id">us-east-1_f2elqUMPV</parameter>
    <parameter key="cognito_pool_client_id">1ncuuvnku3u4hku6p11dnqiqgv</parameter>
    <parameter key="locale">en</parameter>
    <parameter key="install_config_file">install.yaml</parameter>
    <parameter key="msgphp.doctrine.type_config" type="collection">
      <parameter key="msgphp_user_id" type="collection">
        <parameter key="class">MsgPhp\User\UserId</parameter>
        <parameter key="type">integer</parameter>
        <parameter key="type_class">MsgPhp\User\Infra\Doctrine\Type\UserIdType</parameter>
      </parameter>
    </parameter>
    <parameter key="msgphp.doctrine.mapping_files" type="collection">
      <parameter>/data/personal/docker-app/vendor/msgphp/user/Infra/Doctrine/Resources/dist-mapping/User.Entity.Credential.Email.orm.xml</parameter>
      <parameter>/data/personal/docker-app/vendor/msgphp/user/Infra/Doctrine/Resources/dist-mapping/User.Entity.Credential.EmailPassword.orm.xml</parameter>
      <parameter>/data/personal/docker-app/vendor/msgphp/user/Infra/Doctrine/Resources/dist-mapping/User.Entity.Credential.EmailSaltedPassword.orm.xml</parameter>
      <parameter>/data/personal/docker-app/vendor/msgphp/user/Infra/Doctrine/Resources/dist-mapping/User.Entity.Credential.Nickname.orm.xml</parameter>
      <parameter>/data/personal/docker-app/vendor/msgphp/user/Infra/Doctrine/Resources/dist-mapping/User.Entity.Credential.NicknamePassword.orm.xml</parameter>
      <parameter>/data/personal/docker-app/vendor/msgphp/user/Infra/Doctrine/Resources/dist-mapping/User.Entity.Credential.NicknameSaltedPassword.orm.xml</parameter>
      <parameter>/data/personal/docker-app/vendor/msgphp/user/Infra/Doctrine/Resources/dist-mapping/User.Entity.Credential.Token.orm.xml</parameter>
      <parameter>/data/personal/docker-app/vendor/msgphp/user/Infra/Doctrine/Resources/dist-mapping/User.Entity.Role.orm.xml</parameter>
      <parameter>/data/personal/docker-app/vendor/msgphp/user/Infra/Doctrine/Resources/dist-mapping/User.Entity.User.orm.xml</parameter>
      <parameter>/data/personal/docker-app/vendor/msgphp/user/Infra/Doctrine/Resources/dist-mapping/User.Entity.UserRole.orm.xml</parameter>
    </parameter>
    <parameter key="fragment.renderer.hinclude.global_template"></parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">%env(APP_SECRET)%</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.default_locale">en</parameter>
    <parameter key="templating.helper.code.file_link_format">null</parameter>
    <parameter key="debug.file_link_format">null</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cache_limiter">0</parameter>
      <parameter key="cookie_lifetime">3600</parameter>
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="gc_maxlifetime">3600</parameter>
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">/data/personal/docker-app/var/sessions/prod</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="asset.request_context.base_path"></parameter>
    <parameter key="asset.request_context.secure">false</parameter>
    <parameter key="validator.mapping.cache.prefix"></parameter>
    <parameter key="validator.mapping.cache.file">/data/personal/docker-app/var/cache/prod/validation.php</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="translator.logging">false</parameter>
    <parameter key="translator.default_path">/data/personal/docker-app/translations</parameter>
    <parameter key="data_collector.templates" type="collection"/>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">/data/personal/docker-app/var/cache/prod/srcProdDebugProjectContainer.xml</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">kernel::loadRoutes</parameter>
    <parameter key="router.cache_class_prefix">srcProdDebugProjectContainer</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="twig.exception_listener.controller">twig.controller.exception::showAction</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>form_div_layout.html.twig</parameter>
      <parameter>bootstrap_3_layout.html.twig</parameter>
    </parameter>
    <parameter key="twig.default_path">/data/personal/docker-app/templates</parameter>
    <parameter key="doctrine_cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine_cache.apcu.class">Doctrine\Common\Cache\ApcuCache</parameter>
    <parameter key="doctrine_cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine_cache.chain.class">Doctrine\Common\Cache\ChainCache</parameter>
    <parameter key="doctrine_cache.couchbase.class">Doctrine\Common\Cache\CouchbaseCache</parameter>
    <parameter key="doctrine_cache.couchbase.connection.class">Couchbase</parameter>
    <parameter key="doctrine_cache.couchbase.hostnames">localhost:8091</parameter>
    <parameter key="doctrine_cache.file_system.class">Doctrine\Common\Cache\FilesystemCache</parameter>
    <parameter key="doctrine_cache.php_file.class">Doctrine\Common\Cache\PhpFileCache</parameter>
    <parameter key="doctrine_cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine_cache.memcache.connection.class">Memcache</parameter>
    <parameter key="doctrine_cache.memcache.host">localhost</parameter>
    <parameter key="doctrine_cache.memcache.port">11211</parameter>
    <parameter key="doctrine_cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine_cache.memcached.connection.class">Memcached</parameter>
    <parameter key="doctrine_cache.memcached.host">localhost</parameter>
    <parameter key="doctrine_cache.memcached.port">11211</parameter>
    <parameter key="doctrine_cache.mongodb.class">Doctrine\Common\Cache\MongoDBCache</parameter>
    <parameter key="doctrine_cache.mongodb.collection.class">MongoCollection</parameter>
    <parameter key="doctrine_cache.mongodb.connection.class">MongoClient</parameter>
    <parameter key="doctrine_cache.mongodb.server">localhost:27017</parameter>
    <parameter key="doctrine_cache.predis.client.class">Predis\Client</parameter>
    <parameter key="doctrine_cache.predis.scheme">tcp</parameter>
    <parameter key="doctrine_cache.predis.host">localhost</parameter>
    <parameter key="doctrine_cache.predis.port">6379</parameter>
    <parameter key="doctrine_cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine_cache.redis.connection.class">Redis</parameter>
    <parameter key="doctrine_cache.redis.host">localhost</parameter>
    <parameter key="doctrine_cache.redis.port">6379</parameter>
    <parameter key="doctrine_cache.riak.class">Doctrine\Common\Cache\RiakCache</parameter>
    <parameter key="doctrine_cache.riak.bucket.class">Riak\Bucket</parameter>
    <parameter key="doctrine_cache.riak.connection.class">Riak\Connection</parameter>
    <parameter key="doctrine_cache.riak.bucket_property_list.class">Riak\BucketPropertyList</parameter>
    <parameter key="doctrine_cache.riak.host">localhost</parameter>
    <parameter key="doctrine_cache.riak.port">8087</parameter>
    <parameter key="doctrine_cache.sqlite3.class">Doctrine\Common\Cache\SQLite3Cache</parameter>
    <parameter key="doctrine_cache.sqlite3.connection.class">SQLite3</parameter>
    <parameter key="doctrine_cache.void.class">Doctrine\Common\Cache\VoidCache</parameter>
    <parameter key="doctrine_cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine_cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine_cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine_cache.security.acl.cache.class">Doctrine\Bundle\DoctrineCacheBundle\Acl\Model\AclCache</parameter>
    <parameter key="doctrine.dbal.logger.chain.class">Doctrine\DBAL\Logging\LoggerChain</parameter>
    <parameter key="doctrine.dbal.logger.profiling.class">Doctrine\DBAL\Logging\DebugStack</parameter>
    <parameter key="doctrine.dbal.logger.class">Symfony\Bridge\Doctrine\Logger\DbalLogger</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection">
      <parameter key="msgphp_user_id" type="collection">
        <parameter key="class">MsgPhp\User\Infra\Doctrine\Type\UserIdType</parameter>
        <parameter key="commented">null</parameter>
      </parameter>
    </parameter>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.proxy_dir">/data/personal/docker-app/var/cache/prod/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="msgphp.domain.class_mapping" type="collection">
      <parameter key="MsgPhp\User\Entity\Role">App\Entity\User\Role</parameter>
      <parameter key="MsgPhp\User\Entity\UserRole">App\Entity\User\UserRole</parameter>
      <parameter key="MsgPhp\User\Entity\User">App\Entity\User\AppUser</parameter>
      <parameter key="MsgPhp\User\UserIdInterface">MsgPhp\User\UserId</parameter>
      <parameter key="MsgPhp\User\CredentialInterface">MsgPhp\User\Entity\Credential\EmailPassword</parameter>
    </parameter>
    <parameter key="msgphp.domain.id_class_mapping" type="collection">
      <parameter key="MsgPhp\User\Entity\User">MsgPhp\User\UserIdInterface</parameter>
      <parameter key="App\Entity\User\AppUser">MsgPhp\User\UserIdInterface</parameter>
    </parameter>
    <parameter key="msgphp.domain.identity_mapping" type="collection">
      <parameter key="MsgPhp\User\Entity\Role" type="collection">
        <parameter>name</parameter>
      </parameter>
      <parameter key="MsgPhp\User\Entity\UserAttributeValue" type="collection">
        <parameter>attributeValue</parameter>
      </parameter>
      <parameter key="MsgPhp\User\Entity\User" type="collection">
        <parameter>id</parameter>
      </parameter>
      <parameter key="MsgPhp\User\Entity\Username" type="collection">
        <parameter>username</parameter>
      </parameter>
      <parameter key="MsgPhp\User\Entity\UserRole" type="collection">
        <parameter>user</parameter>
        <parameter>role</parameter>
      </parameter>
      <parameter key="MsgPhp\User\Entity\UserEmail" type="collection">
        <parameter>email</parameter>
      </parameter>
      <parameter key="App\Entity\User\Role" type="collection">
        <parameter>name</parameter>
      </parameter>
      <parameter key="App\Entity\User\AppUser" type="collection">
        <parameter>id</parameter>
      </parameter>
      <parameter key="App\Entity\User\UserRole" type="collection">
        <parameter>user</parameter>
        <parameter>role</parameter>
      </parameter>
    </parameter>
    <parameter key="msgphp.domain.events" type="collection">
      <parameter>MsgPhp\User\Event\UserAttributeValueAddedEvent</parameter>
      <parameter>MsgPhp\User\Event\UserAttributeValueChangedEvent</parameter>
      <parameter>MsgPhp\User\Event\UserAttributeValueDeletedEvent</parameter>
      <parameter>MsgPhp\User\Event\UserConfirmedEvent</parameter>
      <parameter>MsgPhp\User\Event\UserCreatedEvent</parameter>
      <parameter>MsgPhp\User\Event\UserCredentialChangedEvent</parameter>
      <parameter>MsgPhp\User\Event\UserDeletedEvent</parameter>
      <parameter>MsgPhp\User\Event\UserDisabledEvent</parameter>
      <parameter>MsgPhp\User\Event\UserEmailAddedEvent</parameter>
      <parameter>MsgPhp\User\Event\UserEmailConfirmedEvent</parameter>
      <parameter>MsgPhp\User\Event\UserEmailDeletedEvent</parameter>
      <parameter>MsgPhp\User\Event\UserEnabledEvent</parameter>
      <parameter>MsgPhp\User\Event\UserPasswordRequestedEvent</parameter>
      <parameter>MsgPhp\User\Event\UserRoleAddedEvent</parameter>
      <parameter>MsgPhp\User\Event\UserRoleDeletedEvent</parameter>
      <parameter>MsgPhp\Domain\Event\ProjectionDocumentDeletedEvent</parameter>
      <parameter>MsgPhp\Domain\Event\ProjectionDocumentSavedEvent</parameter>
    </parameter>
    <parameter key="security.authentication.trust_resolver.anonymous_class">Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</parameter>
    <parameter key="security.authentication.trust_resolver.rememberme_class">Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</parameter>
    <parameter key="security.role_hierarchy.roles" type="collection">
      <parameter key="ROLE_SUPER_ADMIN" type="collection">
        <parameter>ROLE_ADMIN</parameter>
      </parameter>
      <parameter key="ROLE_ADMIN" type="collection">
        <parameter>ROLE_USER</parameter>
      </parameter>
    </parameter>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.access.always_authenticate_before_granting">false</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="aws_sdk.class">Aws\Sdk</parameter>
    <parameter key="monolog.use_microseconds">true</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.cloudwatch">null</parameter>
      <parameter key="monolog.handler.console" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
          <parameter>doctrine</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.container_logs">null</parameter>
      <parameter key="monolog.handler.main">null</parameter>
      <parameter key="monolog.handler.app" type="collection">
        <parameter key="type">inclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>app</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="liip_monitor.runner.class">r</parameter>
    <parameter key="liip_monitor.view_template">/data/personal/docker-app/vendor/liip/monitor-bundle/DependencyInjection/../Resources/views/health/index.html.php</parameter>
    <parameter key="liip_monitor.default_group">default</parameter>
    <parameter key="liip_monitor.check.php_extensions.default" type="collection">
      <parameter>mysqlnd</parameter>
    </parameter>
    <parameter key="liip_monitor.check.php_extensions.0.default">mysqlnd</parameter>
    <parameter key="liip_monitor.checks" type="collection">
      <parameter key="groups" type="collection">
        <parameter key="default" type="collection">
          <parameter key="php_extensions" type="collection">
            <parameter>mysqlnd</parameter>
          </parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="liip_monitor.runners" type="collection">
      <parameter>liip_monitor.runner_default</parameter>
    </parameter>
    <parameter key="console.command.ids" type="collection">
      <parameter>console.command.public_alias.doctrine_cache.contains_command</parameter>
      <parameter>console.command.public_alias.doctrine_cache.delete_command</parameter>
      <parameter>console.command.public_alias.doctrine_cache.flush_command</parameter>
      <parameter>console.command.public_alias.doctrine_cache.stats_command</parameter>
    </parameter>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" synthetic="true"/>
    <service id="MsgPhp\Domain\Infra\Doctrine\DomainIdentityMapping" class="MsgPhp\Domain\Infra\Doctrine\DomainIdentityMapping" public="false">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>%msgphp.domain.class_mapping%</argument>
    </service>
    <service id="MsgPhp\Domain\DomainIdentityHelper" class="MsgPhp\Domain\DomainIdentityHelper" public="false" autowire="true">
      <argument type="service" id="MsgPhp\Domain\Infra\Doctrine\DomainIdentityMapping"/>
    </service>
    <service id="MsgPhp\Domain\Factory\ClassMappingObjectFactory" class="MsgPhp\Domain\Factory\ClassMappingObjectFactory" public="false">
      <argument type="service" id="MsgPhp\Domain\Factory\ClassMappingObjectFactory.inner"/>
      <argument>%msgphp.domain.class_mapping%</argument>
    </service>
    <service id="MsgPhp\Domain\Infra\Doctrine\EntityAwareFactory" class="MsgPhp\Domain\Infra\Doctrine\EntityAwareFactory" public="false">
      <argument type="service" id="MsgPhp\Domain\Infra\Doctrine\EntityAwareFactory.inner"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>%msgphp.domain.class_mapping%</argument>
    </service>
    <service id="MsgPhp\Domain\Infra\Messenger\DomainMessageBus.fmphDKK" class="MsgPhp\Domain\Infra\Messenger\DomainMessageBus" public="false">
      <argument type="service" id="debug.traced.messenger.bus.default"/>
    </service>
    <service id="MsgPhp\Domain\Infra\Messenger\DomainMessageBus.Zg6VIkC" class="MsgPhp\Domain\Infra\Messenger\DomainMessageBus" public="false">
      <argument type="service" id="debug.traced.messenger.bus.default"/>
    </service>
    <service id="msgphp.messenger.console_message_receiver" class="MsgPhp\Domain\Infra\Messenger\Middleware\ConsoleMessageReceiverMiddleware" public="false" autowire="true">
      <argument type="service" id="MsgPhp\Domain\Infra\Console\MessageReceiver"/>
    </service>
    <service id="MsgPhp\Domain\Message\DomainMessageBus" class="MsgPhp\Domain\Message\DomainMessageBus" public="false">
      <argument type="service">
        <service class="MsgPhp\Domain\Infra\Messenger\DomainMessageBus" public="false">
          <argument type="service" id="debug.traced.messenger.bus.default"/>
        </service>
      </argument>
      <argument type="service">
        <service class="MsgPhp\Domain\Infra\Messenger\DomainMessageBus" public="false">
          <argument type="service" id="debug.traced.messenger.bus.default"/>
        </service>
      </argument>
      <argument>%msgphp.domain.events%</argument>
    </service>
    <service id="MsgPhp\Domain\Infra\Doctrine\ObjectFieldMappings" class="MsgPhp\Domain\Infra\Doctrine\ObjectFieldMappings" public="false">
      <tag name="msgphp.doctrine.object_field_mappings" priority="-100"/>
    </service>
    <service id="MsgPhp\Domain\Infra\Doctrine\Event\ObjectFieldMappingListener" class="MsgPhp\Domain\Infra\Doctrine\Event\ObjectFieldMappingListener" public="false">
      <tag name="doctrine.event_listener" event="loadClassMetadata"/>
      <argument type="collection">
        <argument key="MsgPhp\Domain\Entity\Features\CanBeConfirmed" type="collection">
          <argument key="confirmationToken" type="collection">
            <argument key="type">string</argument>
            <argument key="unique">true</argument>
            <argument key="nullable">true</argument>
          </argument>
          <argument key="confirmedAt" type="collection">
            <argument key="type">datetime</argument>
            <argument key="nullable">true</argument>
          </argument>
        </argument>
        <argument key="MsgPhp\Domain\Entity\Fields\CreatedAtField" type="collection">
          <argument key="createdAt" type="collection">
            <argument key="type">datetime</argument>
          </argument>
        </argument>
        <argument key="MsgPhp\Domain\Entity\Fields\EnabledField" type="collection">
          <argument key="enabled" type="collection">
            <argument key="type">boolean</argument>
          </argument>
        </argument>
        <argument key="MsgPhp\Domain\Entity\Fields\LastUpdatedAtField" type="collection">
          <argument key="lastUpdatedAt" type="collection">
            <argument key="type">datetime</argument>
          </argument>
        </argument>
        <argument key="MsgPhp\User\Entity\Features\EmailCredential" type="collection">
          <argument key="credential" type="collection">
            <argument key="type">embedded</argument>
            <argument key="class">MsgPhp\User\Entity\Credential\Email</argument>
            <argument key="columnPrefix">null</argument>
          </argument>
        </argument>
        <argument key="MsgPhp\User\Entity\Features\EmailPasswordCredential" type="collection">
          <argument key="credential" type="collection">
            <argument key="type">embedded</argument>
            <argument key="class">MsgPhp\User\Entity\Credential\EmailPassword</argument>
            <argument key="columnPrefix">null</argument>
          </argument>
        </argument>
        <argument key="MsgPhp\User\Entity\Features\EmailSaltedPasswordCredential" type="collection">
          <argument key="credential" type="collection">
            <argument key="type">embedded</argument>
            <argument key="class">MsgPhp\User\Entity\Credential\EmailSaltedPassword</argument>
            <argument key="columnPrefix">null</argument>
          </argument>
        </argument>
        <argument key="MsgPhp\User\Entity\Features\NicknameCredential" type="collection">
          <argument key="credential" type="collection">
            <argument key="type">embedded</argument>
            <argument key="class">MsgPhp\User\Entity\Credential\Nickname</argument>
            <argument key="columnPrefix">null</argument>
          </argument>
        </argument>
        <argument key="MsgPhp\User\Entity\Features\NicknamePasswordCredential" type="collection">
          <argument key="credential" type="collection">
            <argument key="type">embedded</argument>
            <argument key="class">MsgPhp\User\Entity\Credential\NicknamePassword</argument>
            <argument key="columnPrefix">null</argument>
          </argument>
        </argument>
        <argument key="MsgPhp\User\Entity\Features\NicknameSaltedPasswordCredential" type="collection">
          <argument key="credential" type="collection">
            <argument key="type">embedded</argument>
            <argument key="class">MsgPhp\User\Entity\Credential\NicknameSaltedPassword</argument>
            <argument key="columnPrefix">null</argument>
          </argument>
        </argument>
        <argument key="MsgPhp\User\Entity\Features\TokenCredential" type="collection">
          <argument key="credential" type="collection">
            <argument key="type">embedded</argument>
            <argument key="class">MsgPhp\User\Entity\Credential\Token</argument>
            <argument key="columnPrefix">null</argument>
          </argument>
        </argument>
        <argument key="MsgPhp\User\Entity\Features\ResettablePassword" type="collection">
          <argument key="passwordResetToken" type="collection">
            <argument key="type">string</argument>
            <argument key="unique">true</argument>
            <argument key="nullable">true</argument>
          </argument>
          <argument key="passwordRequestedAt" type="collection">
            <argument key="type">datetime</argument>
            <argument key="nullable">true</argument>
          </argument>
        </argument>
        <argument key="MsgPhp\User\Entity\Fields\AttributeValuesField" type="collection">
          <argument key="attributeValues" type="collection">
            <argument key="type">oneToMany</argument>
            <argument key="targetEntity">MsgPhp\User\Entity\UserAttributeValue</argument>
            <argument key="mappedBy">user</argument>
          </argument>
        </argument>
        <argument key="MsgPhp\User\Entity\Fields\EmailsField" type="collection">
          <argument key="emails" type="collection">
            <argument key="type">oneToMany</argument>
            <argument key="targetEntity">MsgPhp\User\Entity\UserEmail</argument>
            <argument key="mappedBy">user</argument>
            <argument key="indexBy">email</argument>
          </argument>
        </argument>
        <argument key="MsgPhp\User\Entity\Fields\RoleField" type="collection">
          <argument key="role" type="collection">
            <argument key="type">manyToOne</argument>
            <argument key="targetEntity">App\Entity\User\Role</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="referencedColumnName">name</argument>
                <argument key="nullable">false</argument>
              </argument>
            </argument>
          </argument>
        </argument>
        <argument key="MsgPhp\User\Entity\Fields\RolesField" type="collection">
          <argument key="roles" type="collection">
            <argument key="type">oneToMany</argument>
            <argument key="targetEntity">App\Entity\User\UserRole</argument>
            <argument key="mappedBy">user</argument>
          </argument>
        </argument>
        <argument key="MsgPhp\User\Entity\Fields\UserField" type="collection">
          <argument key="user" type="collection">
            <argument key="type">manyToOne</argument>
            <argument key="targetEntity">App\Entity\User\AppUser</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="nullable">false</argument>
              </argument>
            </argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="MsgPhp\Domain\Infra\Doctrine\MappingCacheWarmer" class="MsgPhp\Domain\Infra\Doctrine\MappingCacheWarmer" public="false">
      <tag name="kernel.cache_warmer" priority="100"/>
      <argument>msgphp/doctrine-mapping</argument>
      <argument>%msgphp.doctrine.mapping_files%</argument>
    </service>
    <service id="MsgPhp\Domain\Infra\Console\Context\ClassContextFactory" class="MsgPhp\Domain\Infra\Console\Context\ClassContextFactory" public="false" autowire="true" abstract="true">
      <argument key="1">__construct</argument>
      <argument key="2">%msgphp.domain.class_mapping%</argument>
    </service>
    <service id="MsgPhp\Domain\Infra\Console\Context\ClassContextElementFactory" class="MsgPhp\Domain\Infra\Console\Context\ClassContextElementFactory" public="false"/>
    <service id="MsgPhp\Domain\Infra\Console\MessageReceiver" class="MsgPhp\Domain\Infra\Console\MessageReceiver" public="false">
      <tag name="kernel.event_listener" event="console.command" method="onCommand"/>
      <tag name="kernel.event_listener" event="console.terminate" method="onTerminate"/>
    </service>
    <service id="App\Security\UserRolesProvider" class="App\Security\UserRolesProvider" public="false" autowire="true" autoconfigure="true"/>
    <service id="app.console.class_context_element_factory" class="App\Console\ClassContextElementFactory" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="MsgPhp\Domain\Infra\Console\Context\ClassContextElementFactory"/>
      <argument type="service" id="MsgPhp\User\Infra\Security\PasswordHashing"/>
    </service>
    <service id="Twig\Extensions\TextExtension" class="Twig\Extensions\TextExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
    </service>
    <service id="doctrine.result_cache_provider" class="Symfony\Component\Cache\DoctrineProvider" public="false">
      <argument type="service" id="doctrine.result_cache_pool"/>
    </service>
    <service id="doctrine.system_cache_provider" class="Symfony\Component\Cache\DoctrineProvider" public="false">
      <argument type="service" id="doctrine.system_cache_pool"/>
    </service>
    <service id="App\Bridge\AwsCognitoClient" class="App\Bridge\AwsCognitoClient" public="false" autowire="true" autoconfigure="true">
      <argument>us-east-1_f2elqUMPV</argument>
      <argument>1ncuuvnku3u4hku6p11dnqiqgv</argument>
      <argument>us-east-1</argument>
      <argument>latest</argument>
      <argument>AKIAIZ6ENRM52CQMFSTA</argument>
      <argument>q4ShyCPF38sccLYwnb0hcmKtMl820Rx/jo5naFCA</argument>
    </service>
    <service id="App\Console\ClassContextElementFactory" class="App\Console\ClassContextElementFactory" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="app.console.class_context_element_factory"/>
      <argument type="service" id="MsgPhp\User\Infra\Security\PasswordHashing"/>
    </service>
    <service id="App\Controller\AccountController" class="App\Controller\AccountController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\AppConfigurationController" class="App\Controller\AppConfigurationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\BaseController" class="App\Controller\BaseController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\ConversionController" class="App\Controller\ConversionController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\DefaultController" class="App\Controller\DefaultController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\FileUploadController" class="App\Controller\FileUploadController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\FileWatcherController" class="App\Controller\FileWatcherController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\HadoopStatusController" class="App\Controller\HadoopStatusController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\MPPStatusController" class="App\Controller\MPPStatusController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\NexusController" class="App\Controller\NexusController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\NotificationController" class="App\Controller\NotificationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\ProjectAssignmentController" class="App\Controller\ProjectAssignmentController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\ProjectController" class="App\Controller\ProjectController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\ProjectRateController" class="App\Controller\ProjectRateController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\QueryController" class="App\Controller\QueryController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\SimulationController" class="App\Controller\SimulationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\SqsController" class="App\Controller\SqsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\TableController" class="App\Controller\TableController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\TaskCategoryController" class="App\Controller\TaskCategoryController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\TaskController" class="App\Controller\TaskController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\TaskQueueController" class="App\Controller\TaskQueueController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\TaskTemplateController" class="App\Controller\TaskTemplateController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\TemplateController" class="App\Controller\TemplateController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\TimesheetController" class="App\Controller\TimesheetController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\User\AppUserController" class="App\Controller\User\AppUserController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\User\ForgotPasswordController" class="App\Controller\User\ForgotPasswordController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\User\LoginController" class="App\Controller\User\LoginController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\User\ProfileController" class="App\Controller\User\ProfileController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\User\ResetPasswordController" class="App\Controller\User\ResetPasswordController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\EventListener\LoginListener" class="App\EventListener\LoginListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_listener" event="security.interactive_login"/>
      <argument type="service" id="aws.sqs"/>
      <argument type="service" id="App\Repository\AppUserRepository"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="App\Form\FileWatcherType" class="App\Form\FileWatcherType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\LookupValuesType" class="App\Form\LookupValuesType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\NexusAnalysisType" class="App\Form\NexusAnalysisType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\ProjectAssignmentType" class="App\Form\ProjectAssignmentType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\ProjectRateType" class="App\Form\ProjectRateType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\ProjectType" class="App\Form\ProjectType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\QueryType" class="App\Form\QueryType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\TaskCategoryType" class="App\Form\TaskCategoryType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\TaskQueueType" class="App\Form\TaskQueueType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\TaskTemplateDetailType" class="App\Form\TaskTemplateDetailType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\TaskType" class="App\Form\TaskType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\TemplateType" class="App\Form\TemplateType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\User\ForgotPasswordType" class="App\Form\User\ForgotPasswordType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\User\LoginType" class="App\Form\User\LoginType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\User\ResetPasswordType" class="App\Form\User\ResetPasswordType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Repository\AccountRepository" class="App\Repository\AccountRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="security.helper"/>
    </service>
    <service id="App\Repository\AppUserRepository" class="App\Repository\AppUserRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="MsgPhp\User\Infra\Doctrine\Repository\UserRepository"/>
    </service>
    <service id="App\Repository\ConversionRepository" class="App\Repository\ConversionRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\CustomReportRepository" class="App\Repository\CustomReportRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="security.helper"/>
    </service>
    <service id="App\Repository\EmployeeRelationshipRepository" class="App\Repository\EmployeeRelationshipRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\EmployeeRepository" class="App\Repository\EmployeeRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\FileUploadRepository" class="App\Repository\FileUploadRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="security.helper"/>
    </service>
    <service id="App\Repository\FileWatcherRepository" class="App\Repository\FileWatcherRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\HadoopStatusRepository" class="App\Repository\HadoopStatusRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\MPPStatusRepository" class="App\Repository\MPPStatusRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\NotificationRepository" class="App\Repository\NotificationRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ProjectAssignmentRepository" class="App\Repository\ProjectAssignmentRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="security.helper"/>
    </service>
    <service id="App\Repository\ProjectRateRepository" class="App\Repository\ProjectRateRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ProjectRepository" class="App\Repository\ProjectRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\SimulationRepository" class="App\Repository\SimulationRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\StateGuideRepository" class="App\Repository\StateGuideRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\TaskCategoryRepository" class="App\Repository\TaskCategoryRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\TaskQueueRepository" class="App\Repository\TaskQueueRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\TaskRepository" class="App\Repository\TaskRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\TaskTemplateRepository" class="App\Repository\TaskTemplateRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\TemplateRepository" class="App\Repository\TemplateRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\TimesheetDetailRepository" class="App\Repository\TimesheetDetailRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\TimesheetRepository" class="App\Repository\TimesheetRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Security\CognitoAuthenticator" class="App\Security\CognitoAuthenticator" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="router.default"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument type="service" id="App\Bridge\AwsCognitoClient"/>
    </service>
    <service id="App\Security\CognitoUserProvider" class="App\Security\CognitoUserProvider" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="App\Bridge\AwsCognitoClient"/>
      <argument type="service" id="MsgPhp\User\Infra\Doctrine\Repository\UserRepository"/>
      <argument type="service" id="MsgPhp\Domain\Infra\Doctrine\EntityAwareFactory"/>
      <argument type="service" id="App\Security\UserRolesProvider"/>
    </service>
    <service id="App\Twig\OncloudTimeTwigExtension" class="App\Twig\OncloudTimeTwigExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
    </service>
    <service id="cloudwatch_client" class="Aws\CloudWatchLogs\CloudWatchLogsClient" public="false" autowire="true" autoconfigure="true">
      <argument type="collection">
        <argument key="credentials" type="collection">
          <argument key="key">AKIAIZ6ENRM52CQMFSTA</argument>
          <argument key="secret">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</argument>
        </argument>
        <argument key="region">us-east-1</argument>
        <argument key="version">latest</argument>
      </argument>
    </service>
    <service id="cloudwatch_handler" class="Maxbanton\Cwh\Handler\CloudWatch" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="cloudwatch_client"/>
      <argument>oncloudtime</argument>
      <argument>prod</argument>
      <argument>30</argument>
      <argument>10000</argument>
      <argument type="collection">
        <argument key="mytag">oncloudtime</argument>
      </argument>
      <argument>DEBUG</argument>
    </service>
    <service id="controller_name_converter" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="controller_resolver" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
    </service>
    <service id="argument_metadata_factory" class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory" public="false"/>
    <service id="argument_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver" public="false">
      <argument type="service" id="argument_metadata_factory"/>
      <argument type="iterator">
        <argument type="service" id="argument_resolver.request_attribute"/>
        <argument type="service" id="argument_resolver.request"/>
        <argument type="service" id="argument_resolver.session"/>
        <argument type="service" id="security.user_value_resolver"/>
        <argument type="service" id="MsgPhp\User\Infra\Security\UserArgumentValueResolver"/>
        <argument type="service" id="argument_resolver.service"/>
        <argument type="service" id="argument_resolver.default"/>
        <argument type="service" id="argument_resolver.variadic"/>
      </argument>
    </service>
    <service id="argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="100"/>
    </service>
    <service id="argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="50"/>
    </service>
    <service id="argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="50"/>
    </service>
    <service id="argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="-50"/>
      <argument type="service" id=".service_locator.M57YtTF"/>
    </service>
    <service id="argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="-100"/>
    </service>
    <service id="argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="-150"/>
    </service>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack"/>
      <argument>en</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="resolve_controller_name_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\ResolveControllerNameSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="controller_name_converter"/>
    </service>
    <service id="parameter_bag" class="Symfony\Component\DependencyInjection\ParameterBag\ContainerBag" public="false">
      <argument type="service" id="service_container"/>
    </service>
    <service id="event_dispatcher" class="Symfony\Component\EventDispatcher\EventDispatcher" public="true">
      <tag name="container.hot_path"/>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="MsgPhp\Domain\Infra\Console\MessageReceiver"/>
          <argument>onCommand</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="MsgPhp\Domain\Infra\Console\MessageReceiver"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument type="service" id="App\EventListener\LoginListener"/>
          <argument>onSecurityInteractivelogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="streamed_response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="validate_request_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="resolve_controller_name_subscriber"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>24</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="translator_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="translator_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="twig.exception_listener"/>
          <argument>logKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="twig.exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.controller.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.converter.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.security.listener"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="framework_extra_bundle.event.is_granted"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="security.rememberme.response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="monolog.handler.console"/>
          <argument>onCommand</argument>
        </argument>
        <argument>255</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="monolog.handler.console"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>-255</argument>
      </call>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel" public="true">
      <tag name="container.hot_path"/>
      <argument type="service" id="event_dispatcher"/>
      <argument type="service" id="controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="argument_resolver"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack" public="true"/>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate" public="true">
      <argument type="tagged" tag="kernel.cache_warmer"/>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer" public="true">
      <argument type="tagged" tag="kernel.cache_clearer"/>
    </service>
    <service id="kernel" public="true" synthetic="true"/>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem" public="true"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator" public="false">
      <argument type="service" id="kernel"/>
      <argument>/data/personal/docker-app/src/Resources</argument>
      <argument type="collection">
        <argument>/data/personal/docker-app/src</argument>
      </argument>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner" public="false">
      <argument>%env(APP_SECRET)%</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory" public="false">
      <argument type="tagged" tag="config_cache.resource_checker"/>
    </service>
    <service id="dependency_injection.config.container_parameters_resource_checker" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="config.resource.self_checking_resource_checker" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="services_resetter" class="Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter" public="true">
      <argument type="iterator">
        <argument key="form.type.entity" type="service" id="form.type.entity" on-invalid="ignore_uninitialized"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore_uninitialized"/>
      </argument>
      <argument type="collection">
        <argument key="form.type.entity">reset</argument>
        <argument key="security.token_storage">setToken</argument>
      </argument>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler" public="false">
      <argument type="service" id=".service_locator.gmwRZ3h"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer" public="false">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="console.error_listener" class="Symfony\Component\Console\EventListener\ErrorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="console"/>
      <argument type="service" id="monolog.logger.console" on-invalid="null"/>
    </service>
    <service id="console.command.about" class="Symfony\Bundle\FrameworkBundle\Command\AboutCommand" public="false">
      <tag name="console.command" command="about"/>
      <call method="setName">
        <argument>about</argument>
      </call>
    </service>
    <service id="console.command.assets_install" class="Symfony\Bundle\FrameworkBundle\Command\AssetsInstallCommand" public="false">
      <tag name="console.command" command="assets:install"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>assets:install</argument>
      </call>
    </service>
    <service id="console.command.cache_clear" class="Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand" public="false">
      <tag name="console.command" command="cache:clear"/>
      <argument type="service" id="cache_clearer"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>cache:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_clear" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand" public="false">
      <tag name="console.command" command="cache:pool:clear"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_prune" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand" public="false">
      <tag name="console.command" command="cache:pool:prune"/>
      <argument type="iterator"/>
      <call method="setName">
        <argument>cache:pool:prune</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_delete" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolDeleteCommand" public="false">
      <tag name="console.command" command="cache:pool:delete"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:delete</argument>
      </call>
    </service>
    <service id="console.command.cache_warmup" class="Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand" public="false">
      <tag name="console.command" command="cache:warmup"/>
      <argument type="service" id="cache_warmer"/>
      <call method="setName">
        <argument>cache:warmup</argument>
      </call>
    </service>
    <service id="console.command.config_debug" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand" public="false">
      <tag name="console.command" command="debug:config"/>
      <call method="setName">
        <argument>debug:config</argument>
      </call>
    </service>
    <service id="console.command.config_dump_reference" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand" public="false">
      <tag name="console.command" command="config:dump-reference"/>
      <call method="setName">
        <argument>config:dump-reference</argument>
      </call>
    </service>
    <service id="console.command.container_debug" class="Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand" public="false">
      <tag name="console.command" command="debug:container"/>
      <call method="setName">
        <argument>debug:container</argument>
      </call>
    </service>
    <service id="console.command.debug_autowiring" class="Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand" public="false">
      <tag name="console.command" command="debug:autowiring"/>
      <call method="setName">
        <argument>debug:autowiring</argument>
      </call>
    </service>
    <service id="console.command.event_dispatcher_debug" class="Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand" public="false">
      <tag name="console.command" command="debug:event-dispatcher"/>
      <argument type="service" id="event_dispatcher"/>
      <call method="setName">
        <argument>debug:event-dispatcher</argument>
      </call>
    </service>
    <service id="console.command.messenger_consume_messages" class="Symfony\Component\Messenger\Command\ConsumeMessagesCommand" public="false">
      <tag name="console.command" command="messenger:consume-messages"/>
      <argument type="service" id="debug.traced.messenger.bus.default"/>
      <argument type="service" id="messenger.receiver_locator"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>messenger:consume-messages</argument>
      </call>
    </service>
    <service id="console.command.messenger_debug" class="Symfony\Component\Messenger\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:messenger"/>
      <argument type="collection">
        <argument key="messenger.bus.default" type="collection">
          <argument key="MsgPhp\User\Command\AddUserRoleCommand" type="collection">
            <argument>MsgPhp\User\Command\Handler\AddUserRoleHandler</argument>
          </argument>
          <argument key="MsgPhp\User\Command\ChangeUserCredentialCommand" type="collection">
            <argument>MsgPhp\User\Command\Handler\ChangeUserCredentialHandler</argument>
          </argument>
          <argument key="MsgPhp\User\Command\CreateUserCommand" type="collection">
            <argument>MsgPhp\User\Command\Handler\CreateUserHandler</argument>
          </argument>
          <argument key="MsgPhp\User\Command\DeleteUserCommand" type="collection">
            <argument>MsgPhp\User\Command\Handler\DeleteUserHandler</argument>
          </argument>
          <argument key="MsgPhp\User\Command\DeleteUserRoleCommand" type="collection">
            <argument>MsgPhp\User\Command\Handler\DeleteUserRoleHandler</argument>
          </argument>
          <argument key="MsgPhp\User\Command\RequestUserPasswordCommand" type="collection">
            <argument>MsgPhp\User\Command\Handler\RequestUserPasswordHandler</argument>
          </argument>
        </argument>
      </argument>
      <call method="setName">
        <argument>debug:messenger</argument>
      </call>
    </service>
    <service id="console.command.router_debug" class="Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand" public="false">
      <tag name="console.command" command="debug:router"/>
      <argument type="service" id="router.default"/>
      <call method="setName">
        <argument>debug:router</argument>
      </call>
    </service>
    <service id="console.command.router_match" class="Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand" public="false">
      <tag name="console.command" command="router:match"/>
      <argument type="service" id="router.default"/>
      <call method="setName">
        <argument>router:match</argument>
      </call>
    </service>
    <service id="console.command.translation_debug" class="Symfony\Bundle\FrameworkBundle\Command\TranslationDebugCommand" public="false">
      <tag name="console.command" command="debug:translation"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>/data/personal/docker-app/translations</argument>
      <argument>/data/personal/docker-app/templates</argument>
      <call method="setName">
        <argument>debug:translation</argument>
      </call>
    </service>
    <service id="console.command.translation_update" class="Symfony\Bundle\FrameworkBundle\Command\TranslationUpdateCommand" public="false">
      <tag name="console.command" command="translation:update"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>en</argument>
      <argument>/data/personal/docker-app/translations</argument>
      <argument>/data/personal/docker-app/templates</argument>
      <call method="setName">
        <argument>translation:update</argument>
      </call>
    </service>
    <service id="console.command.xliff_lint" class="Symfony\Bundle\FrameworkBundle\Command\XliffLintCommand" public="false">
      <tag name="console.command" command="lint:xliff"/>
      <call method="setName">
        <argument>lint:xliff</argument>
      </call>
    </service>
    <service id="console.command.yaml_lint" class="Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand" public="false">
      <tag name="console.command" command="lint:yaml"/>
      <call method="setName">
        <argument>lint:yaml</argument>
      </call>
    </service>
    <service id="console.command.form_debug" class="Symfony\Component\Form\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:form"/>
      <argument type="service" id="form.registry"/>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type</argument>
        <argument>App\Form</argument>
        <argument>App\Form\User</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type</argument>
        <argument>MsgPhp\User\Infra\Form\Type</argument>
      </argument>
      <argument type="collection">
        <argument>App\Form\FileWatcherType</argument>
        <argument>App\Form\LookupValuesType</argument>
        <argument>App\Form\NexusAnalysisType</argument>
        <argument>App\Form\ProjectAssignmentType</argument>
        <argument>App\Form\ProjectRateType</argument>
        <argument>App\Form\ProjectType</argument>
        <argument>App\Form\QueryType</argument>
        <argument>App\Form\TaskCategoryType</argument>
        <argument>App\Form\TaskQueueType</argument>
        <argument>App\Form\TaskTemplateDetailType</argument>
        <argument>App\Form\TaskType</argument>
        <argument>App\Form\TemplateType</argument>
        <argument>App\Form\User\ForgotPasswordType</argument>
        <argument>App\Form\User\LoginType</argument>
        <argument>App\Form\User\ResetPasswordType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FormType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ChoiceType</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type\EntityType</argument>
        <argument>MsgPhp\User\Infra\Form\Type\HashedPasswordType</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser</argument>
        <argument>Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</argument>
      </argument>
      <call method="setName">
        <argument>debug:form</argument>
      </call>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="true">
      <tag name="cache.pool"/>
      <argument>Vm4hA+QIU9</argument>
      <argument>0</argument>
      <argument>/data/personal/docker-app/var/cache/prod/pools</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.app.simple" class="Symfony\Component\Cache\Simple\Psr6Cache" public="false">
      <argument type="service" id="cache.app"/>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="true">
      <tag name="cache.pool"/>
      <argument>32mRf0YMQ+</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/data/personal/docker-app/var/cache/prod/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <argument>ZxyhXhKKnG</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/data/personal/docker-app/var/cache/prod/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <argument>eZYSbrQctW</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/data/personal/docker-app/var/cache/prod/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.annotations" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <argument>PSQOCgxVId</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/data/personal/docker-app/var/cache/prod/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.system_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/data/personal/docker-app/var/cache/prod/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine" class="Symfony\Component\Cache\Adapter\DoctrineAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_provider" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>/data/personal/docker-app/var/cache/prod/pools</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.psr6" class="Symfony\Component\Cache\Adapter\ProxyAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_psr6_provider" clearer="cache.default_clearer"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
    </service>
    <service id="cache.adapter.redis" class="Symfony\Component\Cache\Adapter\RedisAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.memcached" class="Symfony\Component\Cache\Adapter\MemcachedAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_memcached_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.array" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="false">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.result_cache_pool" type="service" id="doctrine.result_cache_pool" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.system_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <tag name="kernel.cache_clearer"/>
      <argument type="collection">
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.system_cache_pool" type="service" id="doctrine.system_cache_pool" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.result_cache_pool" type="service" id="doctrine.result_cache_pool" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.system_cache_pool" type="service" id="doctrine.system_cache_pool" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="translator.selector" class="Symfony\Component\Translation\MessageSelector" public="false"/>
    <service id=".2_ServiceLocator~H3bU72x" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="initialized_session" type="service" id="session" on-invalid="ignore_uninitialized"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".1_NativeFileSessionHandler~H3bU72x" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler" public="false">
      <argument>/data/personal/docker-app/var/sessions/prod</argument>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session" public="true">
      <argument type="service" id="session.storage.native"/>
      <argument type="service" id="session.attribute_bag"/>
      <argument type="service" id="session.flash_bag"/>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" public="false">
      <argument>_sf2_meta</argument>
      <argument>0</argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage" public="false">
      <argument>%session.storage.options%</argument>
      <argument type="service" id="session.handler.native_file"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage" public="false">
      <argument type="service" id="session.handler.native_file"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.flash_bag" class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag" public="false"/>
    <service id="session.attribute_bag" class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag" public="false"/>
    <service id="session.storage.mock_file" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage" public="false">
      <argument>/data/personal/docker-app/var/cache/prod/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.handler.native_file" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler" public="false">
      <argument type="service" id=".1_NativeFileSessionHandler~H3bU72x"/>
    </service>
    <service id="session_listener" class="Symfony\Component\HttpKernel\EventListener\SessionListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".2_ServiceLocator~H3bU72x"/>
    </service>
    <service id="session.save_listener" class="Symfony\Component\HttpKernel\EventListener\SaveSessionListener" public="false">
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.1. Use the "session_listener" service instead.</deprecated>
    </service>
    <service id="security.csrf.token_generator" class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator" public="false"/>
    <service id="security.csrf.token_storage" class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage" public="false">
      <argument type="service" id="session"/>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager" public="true">
      <argument type="service" id="security.csrf.token_generator"/>
      <argument type="service" id="security.csrf.token_storage"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="twig.runtime.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfRuntime" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="twig.extension.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\ResolvedFormTypeFactory" public="false"/>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry" public="false">
      <argument type="collection">
        <argument type="service" id="form.extension"/>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory" public="true">
      <argument type="service" id="form.registry"/>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.extension" class="Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension" public="false">
      <argument type="service" id=".service_locator..tgOPQs"/>
      <argument type="collection">
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="iterator">
          <argument type="service" id="form.type_extension.form.http_foundation"/>
          <argument type="service" id="form.type_extension.form.validator"/>
          <argument type="service" id="form.type_extension.upload.validator"/>
          <argument type="service" id="form.type_extension.csrf"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RepeatedType" type="iterator">
          <argument type="service" id="form.type_extension.repeated.validator"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SubmitType" type="iterator">
          <argument type="service" id="form.type_extension.submit.validator"/>
        </argument>
      </argument>
      <argument type="iterator">
        <argument type="service" id="form.type_guesser.validator"/>
        <argument type="service" id="form.type_guesser.doctrine"/>
      </argument>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser" public="false">
      <tag name="form.type_guesser"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.choice_list_factory.default" class="Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory" public="false"/>
    <service id="form.choice_list_factory.property_access" class="Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator" public="false">
      <argument type="service" id="form.choice_list_factory.default"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.choice_list_factory.cached" class="Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator" public="false">
      <argument type="service" id="form.choice_list_factory.property_access"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType" public="false">
      <tag name="form.type"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType" public="false">
      <tag name="form.type"/>
      <argument type="service" id="form.choice_list_factory.cached"/>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="form.type_extension.form.request_handler"/>
    </service>
    <service id="form.type_extension.form.request_handler" class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler" public="false">
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="form.server_params" class="Symfony\Component\Form\Util\ServerParams" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\RepeatedType" extended-type="Symfony\Component\Form\Extension\Core\Type\RepeatedType"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\SubmitType" extended-type="Symfony\Component\Form\Extension\Core\Type\SubmitType"/>
    </service>
    <service id="form.type_extension.upload.validator" class="Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="translator.default"/>
      <argument>validators</argument>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument type="service" id="translator.default" on-invalid="null"/>
      <argument>validators</argument>
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages" public="false">
      <argument type="service" id="assets._default_package"/>
      <argument type="collection"/>
    </service>
    <service id="assets.empty_package" class="Symfony\Component\Asset\Package" public="false">
      <argument type="service" id="assets.empty_version_strategy"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext" public="false">
      <argument type="service" id="request_stack"/>
      <argument></argument>
      <argument>false</argument>
    </service>
    <service id="assets.path_package" class="Symfony\Component\Asset\PathPackage" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.url_package" class="Symfony\Component\Asset\UrlPackage" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.static_version_strategy" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="assets.empty_version_strategy" class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy" public="false"/>
    <service id="assets.json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="assets._default_package" class="Symfony\Component\Asset\PathPackage" public="false">
      <argument></argument>
      <argument type="service" id="assets.empty_version_strategy"/>
      <argument type="service" id="assets.context"/>
    </service>
    <service id=".1_PhpArrayAdapter~ojehDGE" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>/data/personal/docker-app/var/cache/prod/validation.php</argument>
      <argument type="service" id="cache.validator"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="validator" class="Symfony\Component\Validator\Validator\ValidatorInterface" public="true">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilderInterface" public="false">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.default"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>/data/personal/docker-app/vendor/symfony/form/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
        </argument>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="validator.builder"/>
      <argument>/data/personal/docker-app/var/cache/prod/validation.php</argument>
      <argument type="service" id="cache.validator"/>
    </service>
    <service id="validator.mapping.cache.symfony" class="Symfony\Component\Validator\Mapping\Cache\Psr6Cache" public="false">
      <argument type="service" id=".1_PhpArrayAdapter~ojehDGE"/>
    </service>
    <service id="validator.validator_factory" class="Symfony\Component\Validator\ContainerConstraintValidatorFactory" public="false">
      <argument type="service" id=".service_locator.bvXv01Y"/>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator" public="false">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator" public="false">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\EmailValidator"/>
      <argument>loose</argument>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator" public="false">
      <argument type="service" id=".service_locator.yQVjGlt"/>
      <argument type="service" id="translator.formatter.default"/>
      <argument>en</argument>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yaml</argument>
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">/data/personal/docker-app/var/cache/prod/translations</argument>
        <argument key="debug">true</argument>
        <argument key="resource_files" type="collection">
          <argument key="af" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.af.xlf</argument>
          </argument>
          <argument key="ar" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.ar.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.ar.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.ar.xlf</argument>
          </argument>
          <argument key="az" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.az.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.az.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.az.xlf</argument>
          </argument>
          <argument key="bg" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.bg.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.bg.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.bg.xlf</argument>
          </argument>
          <argument key="ca" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.ca.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.ca.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.ca.xlf</argument>
          </argument>
          <argument key="cs" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.cs.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.cs.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.cs.xlf</argument>
          </argument>
          <argument key="cy" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.cy.xlf</argument>
          </argument>
          <argument key="da" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.da.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.da.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.da.xlf</argument>
          </argument>
          <argument key="de" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.de.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.de.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.de.xlf</argument>
          </argument>
          <argument key="el" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.el.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.el.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.el.xlf</argument>
          </argument>
          <argument key="en" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.en.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.en.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.en.xlf</argument>
            <argument>/data/personal/docker-app/translations/messages.en.yaml</argument>
            <argument>/data/personal/docker-app/translations/messages.en.yaml</argument>
          </argument>
          <argument key="es" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.es.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.es.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.es.xlf</argument>
          </argument>
          <argument key="et" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.et.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.et.xlf</argument>
          </argument>
          <argument key="eu" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.eu.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.eu.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.eu.xlf</argument>
          </argument>
          <argument key="fa" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.fa.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.fa.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.fa.xlf</argument>
          </argument>
          <argument key="fi" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.fi.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.fi.xlf</argument>
          </argument>
          <argument key="fr" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.fr.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.fr.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.fr.xlf</argument>
          </argument>
          <argument key="gl" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.gl.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.gl.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.gl.xlf</argument>
          </argument>
          <argument key="he" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.he.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.he.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.he.xlf</argument>
          </argument>
          <argument key="hr" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.hr.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.hr.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.hr.xlf</argument>
          </argument>
          <argument key="hu" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.hu.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.hu.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.hu.xlf</argument>
          </argument>
          <argument key="hy" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.hy.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.hy.xlf</argument>
          </argument>
          <argument key="id" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.id.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.id.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.id.xlf</argument>
          </argument>
          <argument key="it" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.it.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.it.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.it.xlf</argument>
          </argument>
          <argument key="ja" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.ja.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.ja.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.ja.xlf</argument>
          </argument>
          <argument key="lb" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.lb.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.lb.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.lb.xlf</argument>
          </argument>
          <argument key="lt" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.lt.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.lt.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.lt.xlf</argument>
          </argument>
          <argument key="lv" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.lv.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.lv.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.lv.xlf</argument>
          </argument>
          <argument key="mn" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.mn.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.mn.xlf</argument>
          </argument>
          <argument key="nb" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.nb.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.nb.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.nb.xlf</argument>
          </argument>
          <argument key="nl" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.nl.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.nl.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.nl.xlf</argument>
          </argument>
          <argument key="nn" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.nn.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.nn.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.nn.xlf</argument>
          </argument>
          <argument key="no" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.no.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.no.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.no.xlf</argument>
          </argument>
          <argument key="pl" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.pl.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.pl.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.pl.xlf</argument>
          </argument>
          <argument key="pt" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.pt.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.pt.xlf</argument>
          </argument>
          <argument key="pt_BR" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.pt_BR.xlf</argument>
          </argument>
          <argument key="ro" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.ro.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.ro.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.ro.xlf</argument>
          </argument>
          <argument key="ru" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.ru.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.ru.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.ru.xlf</argument>
          </argument>
          <argument key="sk" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.sk.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.sk.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.sk.xlf</argument>
          </argument>
          <argument key="sl" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.sl.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.sl.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.sl.xlf</argument>
          </argument>
          <argument key="sq" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.sq.xlf</argument>
          </argument>
          <argument key="sr_Cyrl" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.sr_Cyrl.xlf</argument>
          </argument>
          <argument key="sr_Latn" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.sr_Latn.xlf</argument>
          </argument>
          <argument key="sv" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.sv.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.sv.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.sv.xlf</argument>
          </argument>
          <argument key="th" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.th.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.th.xlf</argument>
          </argument>
          <argument key="tl" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.tl.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.tl.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.tl.xlf</argument>
          </argument>
          <argument key="tr" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.tr.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.tr.xlf</argument>
          </argument>
          <argument key="uk" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.uk.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.uk.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.uk.xlf</argument>
          </argument>
          <argument key="vi" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.vi.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.vi.xlf</argument>
          </argument>
          <argument key="zh_CN" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/form/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.zh_CN.xlf</argument>
          </argument>
          <argument key="zh_TW" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/validator/Resources/translations/validators.zh_TW.xlf</argument>
          </argument>
          <argument key="be" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.be.xlf</argument>
          </argument>
          <argument key="pt_PT" type="collection">
            <argument>/data/personal/docker-app/vendor/symfony/security/Core/Resources/translations/security.pt_PT.xlf</argument>
          </argument>
        </argument>
      </argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>en</argument>
        </argument>
      </call>
    </service>
    <service id="translator.logging" class="Symfony\Component\Translation\LoggingTranslator" public="false">
      <tag name="monolog.logger" channel="translation"/>
      <argument type="service" id="translator.logging.inner"/>
      <argument type="service" id="monolog.logger.translation"/>
    </service>
    <service id="translator.formatter.default" class="Symfony\Component\Translation\Formatter\MessageFormatter" public="false">
      <argument type="service" id="translator.selector"/>
    </service>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader" public="false">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader" public="false">
      <tag name="translation.loader" alias="yaml" legacy_alias="yml" legacy-alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader" public="false">
      <tag name="translation.loader" alias="xlf" legacy_alias="xliff" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader" public="false">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader" public="false">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader" public="false">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader" public="false">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader" public="false">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader" public="false">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader" public="false">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader" public="false">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper" public="false">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper" public="false">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper" public="false">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper" public="false">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper" public="false">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.yaml" class="Symfony\Component\Translation\Dumper\YamlFileDumper" public="false">
      <tag name="translation.dumper" alias="yaml"/>
      <argument>yaml</argument>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper" public="false">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper" public="false">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper" public="false">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper" public="false">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper" public="false">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php" class="Symfony\Component\Translation\Extractor\PhpExtractor" public="false">
      <tag name="translation.extractor" alias="php"/>
    </service>
    <service id="translation.reader" class="Symfony\Component\Translation\Reader\TranslationReader" public="false">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yaml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor" public="false">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter" public="false">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>yaml</argument>
        <argument type="service" id="translation.dumper.yaml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="translation.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer" public="false">
      <tag name="container.service_subscriber" id="translator"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.3nNxzEJ.translation.warmer"/>
    </service>
    <service id="translator_listener" class="Symfony\Component\HttpKernel\EventListener\TranslatorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id=".cache_connection.GD_MSZC" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>redis://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id=".cache_connection.JKE6keX" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>memcached://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id="doctrine.result_cache_pool" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="false">
      <tag name="cache.pool"/>
      <argument>GeLLaTQBqJ</argument>
      <argument>0</argument>
      <argument>/data/personal/docker-app/var/cache/prod/pools</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="doctrine.system_cache_pool" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <argument>5QPg7qCRk4</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/data/personal/docker-app/var/cache/prod/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.property_access" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false">
      <argument>0</argument>
      <argument>false</argument>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <tag name="container.hot_path"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.php" on-invalid="null"/>
      <argument>null</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument type="service" id="debug.file_link_formatter"/>
      <argument>true</argument>
    </service>
    <service id="debug.file_link_formatter" class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" public="false">
      <argument>null</argument>
    </service>
    <service id="debug.log_processor" class="Symfony\Bridge\Monolog\Processor\DebugProcessor" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
      <call method="addLoader">
        <argument type="service" id="routing.loader.xml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.php"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.glob"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.service"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="sensio_framework_extra.routing.loader.annot_class"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="sensio_framework_extra.routing.loader.annot_dir"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="sensio_framework_extra.routing.loader.annot_file"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.file"/>
      </call>
    </service>
    <service id="routing.loader.xml" class="Symfony\Component\Routing\Loader\XmlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.php" class="Symfony\Component\Routing\Loader\PhpFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.glob" class="Symfony\Component\Routing\Loader\GlobFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.directory" class="Symfony\Component\Routing\Loader\DirectoryLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.service" class="Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader" public="true">
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="routing.resolver"/>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router" public="false">
      <tag name="monolog.logger" channel="router"/>
      <tag name="container.service_subscriber" id="routing.loader"/>
      <argument type="service" id=".service_locator.oNnsU_h.router.default"/>
      <argument>kernel::loadRoutes</argument>
      <argument type="collection">
        <argument key="cache_dir">/data/personal/docker-app/var/cache/prod</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</argument>
        <argument key="generator_cache_class">srcProdDebugProjectContainerUrlGenerator</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</argument>
        <argument key="matcher_cache_class">srcProdDebugProjectContainerUrlMatcher</argument>
        <argument key="strict_requirements">null</argument>
        <argument key="resource_type">service</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="parameter_bag" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" public="false">
      <argument></argument>
      <argument>GET</argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="router.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer" public="false">
      <tag name="container.service_subscriber" id="router"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.tdKlFgs.router.cache_warmer"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument>/data/personal/docker-app</argument>
      <argument>true</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" class="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" public="true">
      <argument type="service" id="router.default"/>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" class="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" public="true">
      <argument type="service" id="twig" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="routing.loader.annotation" class="Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="routing.loader.annotation.directory" class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="routing.loader.annotation.file" class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id=".2_PhpArrayAdapter~w4t1OjN" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>/data/personal/docker-app/var/cache/prod/annotations.php</argument>
      <argument type="service" id="cache.annotations"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id=".1_ArrayCache~w4t1OjN" class="Doctrine\Common\Cache\ArrayCache" public="false"/>
    <service id="annotations.reader" class="Doctrine\Common\Annotations\AnnotationReader" public="false">
      <call method="addGlobalIgnoredName">
        <argument>required</argument>
        <argument type="service" id="annotations.dummy_registry"/>
      </call>
    </service>
    <service id="annotations.dummy_registry" class="Doctrine\Common\Annotations\AnnotationRegistry" public="false">
      <call method="registerUniqueLoader">
        <argument>class_exists</argument>
      </call>
    </service>
    <service id="annotations.cached_reader" class="Doctrine\Common\Annotations\CachedReader" public="false">
      <tag name="annotations.cached_reader"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="service" id=".1_ArrayCache~w4t1OjN"/>
      <argument>true</argument>
      <property name="cacheProviderBackup" type="service" id="annotations.cache"/>
    </service>
    <service id="annotations.filesystem_cache" class="Doctrine\Common\Cache\FilesystemCache" public="false">
      <argument></argument>
    </service>
    <service id="annotations.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="annotations.reader"/>
      <argument>/data/personal/docker-app/var/cache/prod/annotations.php</argument>
      <argument type="service" id="cache.annotations"/>
      <argument>#^Symfony\\(?:Component\\HttpKernel\\|Bundle\\FrameworkBundle\\Controller\\(?!AbstractController$|Controller$))#</argument>
      <argument>true</argument>
    </service>
    <service id="annotations.cache" class="Symfony\Component\Cache\DoctrineProvider" public="false">
      <argument type="service" id=".2_PhpArrayAdapter~w4t1OjN"/>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor" public="false">
      <argument>false</argument>
      <argument>false</argument>
      <argument type="service" id="cache.property_access" on-invalid="ignore"/>
    </service>
    <service id="messenger.asynchronous.routing.sender_locator" class="Symfony\Component\Messenger\Asynchronous\Routing\SenderLocator" public="false">
      <argument type="service" id="messenger.sender_locator"/>
      <argument type="collection"/>
    </service>
    <service id="messenger.middleware.route_messages" class="Symfony\Component\Messenger\Asynchronous\Middleware\SendMessageMiddleware" public="false">
      <argument type="service" id="messenger.asynchronous.routing.sender_locator"/>
      <argument type="collection"/>
    </service>
    <service id="messenger.middleware.allow_no_handler" class="Symfony\Component\Messenger\Middleware\AllowNoHandlerMiddleware" public="false" abstract="true"/>
    <service id="messenger.middleware.call_message_handler" class="Symfony\Component\Messenger\Middleware\HandleMessageMiddleware" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="messenger.middleware.validation" class="Symfony\Component\Messenger\Middleware\ValidationMiddleware" public="false" abstract="true">
      <argument type="service" id="validator"/>
    </service>
    <service id="messenger.middleware.logging" class="Symfony\Component\Messenger\Middleware\LoggingMiddleware" public="false" abstract="true">
      <tag name="monolog.logger" channel="messenger"/>
      <argument type="service" id="monolog.logger.messenger"/>
    </service>
    <service id="messenger.data_collector" class="Symfony\Component\Messenger\DataCollector\MessengerDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/messenger.html.twig" id="messenger" priority="100"/>
      <call method="registerBus">
        <argument>messenger.bus.default</argument>
        <argument type="service" id="debug.traced.messenger.bus.default"/>
      </call>
    </service>
    <service id="messenger.receiver_locator" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="messenger.sender_locator" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="messenger.transport_factory" class="Symfony\Component\Messenger\Transport\TransportFactory" public="false">
      <argument type="tagged" tag="messenger.transport_factory"/>
    </service>
    <service id="twig" class="Twig\Environment" public="true">
      <argument type="service" id="twig.loader.native_filesystem"/>
      <argument type="collection">
        <argument key="paths" type="collection">
          <argument key="/data/personal/docker-app/templates">null</argument>
        </argument>
        <argument key="debug">true</argument>
        <argument key="strict_variables">true</argument>
        <argument key="form_themes" type="collection">
          <argument>form_div_layout.html.twig</argument>
          <argument>bootstrap_3_layout.html.twig</argument>
        </argument>
        <argument key="exception_controller">twig.controller.exception::showAction</argument>
        <argument key="autoescape">name</argument>
        <argument key="cache">/data/personal/docker-app/var/cache/prod/twig</argument>
        <argument key="charset">UTF-8</argument>
        <argument key="default_path">/data/personal/docker-app/templates</argument>
        <argument key="date" type="collection">
          <argument key="format">F j, Y H:i</argument>
          <argument key="interval_format">%d days</argument>
          <argument key="timezone">null</argument>
        </argument>
        <argument key="number_format" type="collection">
          <argument key="decimals">0</argument>
          <argument key="decimal_point">.</argument>
          <argument key="thousands_separator">,</argument>
        </argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security_csrf"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.profiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.trans"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.assets"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.code"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.routing"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.yaml"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpkernel"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpfoundation"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.form"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.logout_url"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Twig\Extensions\TextExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="App\Twig\OncloudTimeTwigExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="doctrine.twig.doctrine_extension"/>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="twig.app_variable"/>
      </call>
      <call method="addRuntimeLoader">
        <argument type="service" id="twig.runtime_loader"/>
      </call>
      <call method="addGlobal">
        <argument>msgphp_user</argument>
        <argument type="service" id="MsgPhp\UserBundle\Twig\GlobalVariable"/>
      </call>
      <call method="addGlobal">
        <argument>activity_current_dashboardUrl</argument>
        <argument>&lt;iframe id="powerbi_dashboard" width="800" height="600" src="https://app.powerbi.com/view?r=eyJrIjoiZWQ0OGQ3NDktNDllMy00NDVlLTgwNjItYzYxZWE0ZDc1ZDdjIiwidCI6ImM3ZGZjNTk1LWU4OWUtNDQ4Ni1iNGM0LWI0NmRhZmFjMmU5NSIsImMiOjF9" frameborder="0" allowFullScreen="true"&gt;&lt;/iframe&gt;</argument>
      </call>
      <call method="addGlobal">
        <argument>activity_history_dashboardUrl</argument>
        <argument>&lt;iframe id="powerbi_dashboard" width="800" height="600" src="https://app.powerbi.com/view?r=eyJrIjoiZWQ0OGQ3NDktNDllMy00NDVlLTgwNjItYzYxZWE0ZDc1ZDdjIiwidCI6ImM3ZGZjNTk1LWU4OWUtNDQ4Ni1iNGM0LWI0NmRhZmFjMmU5NSIsImMiOjF9" frameborder="0" allowFullScreen="true"&gt;&lt;/iframe&gt;</argument>
      </call>
      <call method="addGlobal">
        <argument>athena_directory</argument>
        <argument>test</argument>
      </call>
      <call method="addGlobal">
        <argument>athena_database</argument>
        <argument>test</argument>
      </call>
      <call method="addGlobal">
        <argument>aws_credentials_key</argument>
        <argument>AKIAIZ6ENRM52CQMFSTA</argument>
      </call>
      <call method="addGlobal">
        <argument>aws_credentials_secret</argument>
        <argument>q4ShyCPF38sccLYwnb0hcmKtMl820Rx/jo5naFCA</argument>
      </call>
      <call method="addGlobal">
        <argument>company_name</argument>
        <argument>OnCloudTime</argument>
      </call>
      <call method="addGlobal">
        <argument>dashboard_powerbiUrl</argument>
        <argument>&lt;iframe id="powerbi_dashboard" width="800" height="600" src="https://app.powerbi.com/view?r=eyJrIjoiZWQ0OGQ3NDktNDllMy00NDVlLTgwNjItYzYxZWE0ZDc1ZDdjIiwidCI6ImM3ZGZjNTk1LWU4OWUtNDQ4Ni1iNGM0LWI0NmRhZmFjMmU5NSIsImMiOjF9" frameborder="0" allowFullScreen="true"&gt;&lt;/iframe&gt;</argument>
      </call>
      <call method="addGlobal">
        <argument>nexus_powerbiUrl</argument>
        <argument>&lt;iframe id="powerbi_dashboard" width="800" height="600" src="https://app.powerbi.com/view?r=eyJrIjoiNTcwMTI1NWUtNjcyZS00MTU4LWFiYWEtZDA4MDgxMTNiMWU3IiwidCI6ImM3ZGZjNTk1LWU4OWUtNDQ4Ni1iNGM0LWI0NmRhZmFjMmU5NSIsImMiOjF9" frameborder="0" allowFullScreen="true"&gt;&lt;/iframe&gt;</argument>
      </call>
      <call method="addGlobal">
        <argument>need_update</argument>
        <argument>no</argument>
      </call>
      <call method="addGlobal">
        <argument>rdbms_dbname</argument>
        <argument>oncloudtime</argument>
      </call>
      <call method="addGlobal">
        <argument>rdbms_host</argument>
        <argument>localhost</argument>
      </call>
      <call method="addGlobal">
        <argument>rdbms_user</argument>
        <argument>root</argument>
      </call>
      <call method="addGlobal">
        <argument>rdbms_password</argument>
        <argument>mysql</argument>
      </call>
      <call method="addGlobal">
        <argument>s3_bucket</argument>
        <argument>yuva-bucket</argument>
      </call>
      <call method="addGlobal">
        <argument>sns_general_topic</argument>
        <argument>arn:aws:sns:us-east-1:590297375119:test-sns</argument>
      </call>
      <call method="addGlobal">
        <argument>sqs_notificationQueue</argument>
        <argument>https://sqs.us-east-1.amazonaws.com/590297375119/test-yuva</argument>
      </call>
      <call method="addGlobal">
        <argument>tables_long_text_display_characters</argument>
        <argument>20</argument>
      </call>
      <call method="addGlobal">
        <argument>tables_rows_per_page</argument>
        <argument>7</argument>
      </call>
      <call method="addGlobal">
        <argument>tables_templates_rows_per_page</argument>
        <argument>4</argument>
      </call>
      <call method="addGlobal">
        <argument>date_format</argument>
        <argument>m/d/Y</argument>
      </call>
      <call method="addGlobal">
        <argument>asset_image_login</argument>
        <argument>logo-no-words.png</argument>
      </call>
      <call method="addGlobal">
        <argument>asset_image_sidebar</argument>
        <argument>logo-no-words.png</argument>
      </call>
      <call method="addGlobal">
        <argument>sidebar_activetext_color</argument>
        <argument>#df4e71</argument>
      </call>
      <call method="addGlobal">
        <argument>notification_success_color</argument>
        <argument>green</argument>
      </call>
      <call method="addGlobal">
        <argument>notification_info_color</argument>
        <argument>blue</argument>
      </call>
      <call method="addGlobal">
        <argument>notification_failed_color</argument>
        <argument>#df4e71</argument>
      </call>
      <configurator service="twig.configurator.environment" method="configure"/>
    </service>
    <service id="twig.app_variable" class="Symfony\Bridge\Twig\AppVariable" public="false">
      <call method="setEnvironment">
        <argument>prod</argument>
      </call>
      <call method="setDebug">
        <argument>true</argument>
      </call>
      <call method="setTokenStorage">
        <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      </call>
      <call method="setRequestStack">
        <argument type="service" id="request_stack" on-invalid="ignore"/>
      </call>
    </service>
    <service id="twig.cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <argument type="service" id=".service_locator.UEpceA5.twig.cache_warmer"/>
      <argument>null</argument>
      <argument type="collection">
        <argument key="/data/personal/docker-app/templates">null</argument>
        <argument key="/data/personal/docker-app/vendor/symfony/twig-bridge/Resources/views/Form">null</argument>
      </argument>
    </service>
    <service id="twig.template_iterator" class="Symfony\Bundle\TwigBundle\TemplateIterator" public="false">
      <argument type="service" id="kernel"/>
      <argument>/data/personal/docker-app/src</argument>
      <argument type="collection">
        <argument key="/data/personal/docker-app/templates">null</argument>
        <argument key="/data/personal/docker-app/vendor/symfony/twig-bridge/Resources/views/Form">null</argument>
      </argument>
    </service>
    <service id="twig.template_cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <argument type="service" id=".service_locator.UEpceA5.twig.template_cache_warmer"/>
      <argument type="service" id="twig.template_iterator"/>
    </service>
    <service id="twig.loader.native_filesystem" class="Twig\Loader\FilesystemLoader" public="false">
      <tag name="twig.loader"/>
      <argument type="collection"/>
      <argument>/data/personal/docker-app</argument>
      <call method="addPath">
        <argument>/data/personal/docker-app/templates</argument>
      </call>
      <call method="addPath">
        <argument>/data/personal/docker-app/vendor/symfony/framework-bundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>/data/personal/docker-app/vendor/symfony/framework-bundle/Resources/views</argument>
        <argument>!Framework</argument>
      </call>
      <call method="addPath">
        <argument>/data/personal/docker-app/vendor/symfony/twig-bundle/Resources/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/data/personal/docker-app/vendor/symfony/twig-bundle/Resources/views</argument>
        <argument>!Twig</argument>
      </call>
      <call method="addPath">
        <argument>/data/personal/docker-app/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/data/personal/docker-app/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>!Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/data/personal/docker-app/vendor/symfony/security-bundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/data/personal/docker-app/vendor/symfony/security-bundle/Resources/views</argument>
        <argument>!Security</argument>
      </call>
      <call method="addPath">
        <argument>/data/personal/docker-app/vendor/liip/monitor-bundle/Resources/views</argument>
        <argument>LiipMonitor</argument>
      </call>
      <call method="addPath">
        <argument>/data/personal/docker-app/vendor/liip/monitor-bundle/Resources/views</argument>
        <argument>!LiipMonitor</argument>
      </call>
      <call method="addPath">
        <argument>/data/personal/docker-app/templates</argument>
      </call>
      <call method="addPath">
        <argument>/data/personal/docker-app/vendor/symfony/twig-bridge/Resources/views/Form</argument>
      </call>
    </service>
    <service id="twig.loader.chain" class="Twig\Loader\ChainLoader" public="false"/>
    <service id="twig.extension.profiler" class="Symfony\Bridge\Twig\Extension\ProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.profile"/>
      <argument>null</argument>
    </service>
    <service id="twig.profile" class="Twig\Profiler\Profile" public="false"/>
    <service id="data_collector.twig" class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.extension.trans" class="Symfony\Bridge\Twig\Extension\TranslationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.default" on-invalid="null"/>
    </service>
    <service id="twig.extension.assets" class="Symfony\Bridge\Twig\Extension\AssetExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="assets.packages"/>
    </service>
    <service id="twig.extension.code" class="Symfony\Bridge\Twig\Extension\CodeExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>/data/personal/docker-app/src</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="twig.extension.routing" class="Symfony\Bridge\Twig\Extension\RoutingExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="twig.extension.yaml" class="Symfony\Bridge\Twig\Extension\YamlExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.debug.stopwatch" class="Symfony\Bridge\Twig\Extension\StopwatchExtension" public="false">
      <argument>null</argument>
      <argument>true</argument>
    </service>
    <service id="twig.extension.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.runtime.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="twig.extension.httpfoundation" class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
    </service>
    <service id="twig.extension.debug" class="Twig\Extension\DebugExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.weblink" class="Symfony\Bridge\Twig\Extension\WebLinkExtension" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor" public="false">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.exception_listener" class="Symfony\Component\HttpKernel\EventListener\ExceptionListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument>twig.controller.exception::showAction</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="twig.controller.exception" class="Symfony\Bundle\TwigBundle\Controller\ExceptionController" public="true">
      <argument type="service" id="twig"/>
      <argument>true</argument>
    </service>
    <service id="twig.controller.preview_error" class="Symfony\Bundle\TwigBundle\Controller\PreviewErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>twig.controller.exception::showAction</argument>
    </service>
    <service id="twig.configurator.environment" class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator" public="false">
      <argument>F j, Y H:i</argument>
      <argument>%d days</argument>
      <argument>null</argument>
      <argument>0</argument>
      <argument>.</argument>
      <argument>,</argument>
    </service>
    <service id="twig.runtime_loader" class="Twig\RuntimeLoader\ContainerRuntimeLoader" public="false">
      <argument type="service" id=".service_locator.uxa.tru"/>
    </service>
    <service id="twig.extension.form" class="Symfony\Bridge\Twig\Extension\FormExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="collection">
        <argument type="service" id="service_container"/>
        <argument>twig.form.renderer</argument>
      </argument>
    </service>
    <service id="twig.form.engine" class="Symfony\Bridge\Twig\Form\TwigRendererEngine" public="false">
      <argument>%twig.form.resources%</argument>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.form.renderer" class="Symfony\Component\Form\FormRenderer" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="twig.form.engine"/>
      <argument type="service" id="security.csrf.token_manager" on-invalid="null"/>
    </service>
    <service id="twig.command.debug" class="Symfony\Bridge\Twig\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:twig"/>
      <argument type="service" id="twig"/>
      <argument>/data/personal/docker-app</argument>
      <call method="setName">
        <argument>debug:twig</argument>
      </call>
    </service>
    <service id="twig.command.lint" class="Symfony\Bundle\TwigBundle\Command\LintCommand" public="false">
      <tag name="console.command" command="lint:twig"/>
      <argument type="service" id="twig"/>
      <call method="setName">
        <argument>lint:twig</argument>
      </call>
    </service>
    <service id="sensio_framework_extra.controller.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="sensio_framework_extra.routing.loader.annot_class" class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="sensio_framework_extra.routing.loader.annot_dir" class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="sensio_framework_extra.routing.loader.annot_class"/>
    </service>
    <service id="sensio_framework_extra.routing.loader.annot_file" class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="sensio_framework_extra.routing.loader.annot_class"/>
    </service>
    <service id="sensio_framework_extra.converter.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.converter.manager"/>
      <argument>true</argument>
    </service>
    <service id="sensio_framework_extra.converter.manager" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager">
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.doctrine.orm"/>
        <argument>0</argument>
        <argument>doctrine.orm</argument>
      </call>
      <call method="add">
        <argument type="service" id="framework_extra_bundle.date_time_param_converter"/>
        <argument>0</argument>
        <argument>datetime</argument>
      </call>
      <call method="add">
        <argument type="service" id="MsgPhp\User\Infra\Security\UserParamConverter"/>
        <argument>0</argument>
        <argument>msgphp.current_user</argument>
      </call>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter" public="false">
      <tag name="request.param_converter" converter="doctrine.orm"/>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="framework_extra_bundle.date_time_param_converter" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter" public="false">
      <tag name="request.param_converter" converter="datetime"/>
    </service>
    <service id="sensio_framework_extra.view.guesser" class="Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser" public="false">
      <argument type="service" id="kernel"/>
    </service>
    <service id="sensio_framework_extra.view.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.view.guesser"/>
      <argument type="service" id="twig" on-invalid="null"/>
    </service>
    <service id="sensio_framework_extra.cache.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="sensio_framework_extra.security.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument>null</argument>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.event.is_granted" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\IsGrantedListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.argument_name_convertor" class="Sensio\Bundle\FrameworkExtraBundle\Request\ArgumentNameConverter" public="false">
      <argument type="service" id="argument_metadata_factory"/>
    </service>
    <service id="doctrine_cache.abstract.apc" class="Doctrine\Common\Cache\ApcCache" abstract="true"/>
    <service id="doctrine_cache.abstract.apcu" class="Doctrine\Common\Cache\ApcuCache" abstract="true"/>
    <service id="doctrine_cache.abstract.array" class="Doctrine\Common\Cache\ArrayCache" abstract="true"/>
    <service id="doctrine_cache.abstract.chain" class="Doctrine\Common\Cache\ChainCache" abstract="true"/>
    <service id="doctrine_cache.abstract.couchbase" class="Doctrine\Common\Cache\CouchbaseCache" abstract="true"/>
    <service id="doctrine_cache.abstract.file_system" class="Doctrine\Common\Cache\FilesystemCache" abstract="true"/>
    <service id="doctrine_cache.abstract.php_file" class="Doctrine\Common\Cache\PhpFileCache" abstract="true"/>
    <service id="doctrine_cache.abstract.memcache" class="Doctrine\Common\Cache\MemcacheCache" abstract="true"/>
    <service id="doctrine_cache.abstract.memcached" class="Doctrine\Common\Cache\MemcachedCache" abstract="true"/>
    <service id="doctrine_cache.abstract.mongodb" class="Doctrine\Common\Cache\MongoDBCache" abstract="true"/>
    <service id="doctrine_cache.abstract.redis" class="Doctrine\Common\Cache\RedisCache" abstract="true"/>
    <service id="doctrine_cache.abstract.predis" class="Doctrine\Common\Cache\PredisCache" abstract="true"/>
    <service id="doctrine_cache.abstract.riak" class="Doctrine\Common\Cache\RiakCache" abstract="true"/>
    <service id="doctrine_cache.abstract.sqlite3" class="Doctrine\Common\Cache\SQLite3Cache" abstract="true"/>
    <service id="doctrine_cache.abstract.void" class="Doctrine\Common\Cache\VoidCache" abstract="true"/>
    <service id="doctrine_cache.abstract.wincache" class="Doctrine\Common\Cache\WinCacheCache" abstract="true"/>
    <service id="doctrine_cache.abstract.xcache" class="Doctrine\Common\Cache\XcacheCache" abstract="true"/>
    <service id="doctrine_cache.abstract.zenddata" class="Doctrine\Common\Cache\ZendDataCache" abstract="true"/>
    <service id="doctrine_cache.contains_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\ContainsCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_cache.delete_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\DeleteCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_cache.flush_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\FlushCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_cache.stats_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\StatsCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine.dbal.logger.chain" class="Doctrine\DBAL\Logging\LoggerChain" public="false" abstract="true">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling" class="Doctrine\DBAL\Logging\DebugStack" public="false" abstract="true"/>
    <service id="doctrine.dbal.logger.backtrace" class="Doctrine\Bundle\DoctrineBundle\Dbal\Logging\BacktraceLogger" public="false" abstract="true"/>
    <service id="doctrine.dbal.logger" class="Symfony\Bridge\Doctrine\Logger\DbalLogger" public="false">
      <tag name="monolog.logger" channel="doctrine"/>
      <argument type="service" id="monolog.logger.doctrine" on-invalid="null"/>
      <argument>null</argument>
    </service>
    <service id="data_collector.doctrine" class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector" public="false">
      <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db" priority="250"/>
      <argument type="service" id="doctrine"/>
      <call method="addLogger">
        <argument>default</argument>
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument>%doctrine.dbal.connection_factory.types%</argument>
    </service>
    <service id="doctrine.dbal.connection" class="Doctrine\DBAL\Connection" abstract="true">
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.dbal.connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false" abstract="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.dbal.connection.configuration" class="Doctrine\DBAL\Configuration" public="false" abstract="true"/>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
      <argument type="service" id="service_container"/>
      <argument>%doctrine.connections%</argument>
      <argument>%doctrine.entity_managers%</argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.twig.doctrine_extension" class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="doctrine.dbal.schema_asset_filter_manager" class="Doctrine\Bundle\DoctrineBundle\Dbal\SchemaAssetsFilterManager" public="false" abstract="true"/>
    <service id="doctrine.database_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\CreateDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:create"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:create</argument>
      </call>
    </service>
    <service id="doctrine.database_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\DropDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:drop"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:drop</argument>
      </call>
    </service>
    <service id="doctrine.generate_entities_command" class="Doctrine\Bundle\DoctrineBundle\Command\GenerateEntitiesDoctrineCommand">
      <tag name="console.command" command="doctrine:generate:entities"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:generate:entities</argument>
      </call>
    </service>
    <service id="doctrine.query_sql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunSqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:sql"/>
      <call method="setName">
        <argument>doctrine:query:sql</argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.configuration" class="Doctrine\DBAL\Configuration" public="false">
      <call method="setSQLLogger">
        <argument type="service" id="doctrine.dbal.logger.chain.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling.default" class="Doctrine\DBAL\Logging\DebugStack" public="false"/>
    <service id="doctrine.dbal.logger.chain.default" class="Doctrine\DBAL\Logging\LoggerChain" public="false">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false">
      <argument type="service" id="service_container"/>
      <call method="addEventSubscriber">
        <argument type="service" id="doctrine.orm.listeners.resolve_target_entity"/>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>loadClassMetadata</argument>
        </argument>
        <argument type="service" id="MsgPhp\Domain\Infra\Doctrine\Event\ObjectFieldMappingListener"/>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>loadClassMetadata</argument>
        </argument>
        <argument type="service" id="doctrine.orm.default_listeners.attach_entity_listeners"/>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection" public="true">
      <argument type="collection">
        <argument key="charset">utf8</argument>
        <argument key="url">mysql://root:mysql@localhost:3306/oncloudtime</argument>
        <argument key="driver">pdo_mysql</argument>
        <argument key="host">localhost</argument>
        <argument key="port">null</argument>
        <argument key="user">root</argument>
        <argument key="password">null</argument>
        <argument key="driverOptions" type="collection"/>
        <argument key="serverVersion">5.6</argument>
        <argument key="defaultTableOptions" type="collection">
          <argument key="charset">utf8</argument>
          <argument key="collate">utf8_unicode_ci</argument>
        </argument>
      </argument>
      <argument type="service" id="doctrine.dbal.default_connection.configuration"/>
      <argument type="service" id="doctrine.dbal.default_connection.event_manager"/>
      <argument type="collection">
        <argument key="enum">string</argument>
      </argument>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id=".1_ServiceLocator~VlV5WfU" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.proxy_cache_warmer" class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.configuration" class="Doctrine\ORM\Configuration" public="false" abstract="true"/>
    <service id="doctrine.orm.entity_manager.abstract" class="Doctrine\ORM\EntityManager" lazy="true" abstract="true">
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
    </service>
    <service id="doctrine.orm.container_repository_factory" class="Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory" public="false">
      <argument type="service" id=".service_locator.COXxLDU"/>
    </service>
    <service id="doctrine.orm.manager_configurator.abstract" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator" abstract="true">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.security.user.provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.listeners.resolve_target_entity" class="Doctrine\ORM\Tools\ResolveTargetEntityListener" public="false">
      <tag name="doctrine.event_subscriber"/>
      <call method="addResolveTargetEntity">
        <argument>MsgPhp\User\Entity\Role</argument>
        <argument>App\Entity\User\Role</argument>
        <argument type="collection"/>
      </call>
      <call method="addResolveTargetEntity">
        <argument>MsgPhp\User\Entity\UserRole</argument>
        <argument>App\Entity\User\UserRole</argument>
        <argument type="collection"/>
      </call>
      <call method="addResolveTargetEntity">
        <argument>MsgPhp\User\Entity\User</argument>
        <argument>App\Entity\User\AppUser</argument>
        <argument type="collection"/>
      </call>
      <call method="addResolveTargetEntity">
        <argument>MsgPhp\User\UserIdInterface</argument>
        <argument>MsgPhp\User\UserId</argument>
        <argument type="collection"/>
      </call>
      <call method="addResolveTargetEntity">
        <argument>MsgPhp\User\CredentialInterface</argument>
        <argument>MsgPhp\User\Entity\Credential\EmailPassword</argument>
        <argument type="collection"/>
      </call>
    </service>
    <service id="doctrine.orm.naming_strategy.default" class="Doctrine\ORM\Mapping\DefaultNamingStrategy" public="false"/>
    <service id="doctrine.orm.naming_strategy.underscore" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy" public="false"/>
    <service id="doctrine.orm.quote_strategy.default" class="Doctrine\ORM\Mapping\DefaultQuoteStrategy" public="false"/>
    <service id="doctrine.orm.quote_strategy.ansi" class="Doctrine\ORM\Mapping\AnsiQuoteStrategy" public="false"/>
    <service id="doctrine.cache_clear_metadata_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearMetadataCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-metadata"/>
      <call method="setName">
        <argument>doctrine:cache:clear-metadata</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_query_cache_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearQueryCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_result_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearResultCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-result"/>
      <call method="setName">
        <argument>doctrine:cache:clear-result</argument>
      </call>
    </service>
    <service id="doctrine.cache_collection_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CollectionRegionDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-collection-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-collection-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_convert_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ConvertMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:convert"/>
      <call method="setName">
        <argument>doctrine:mapping:convert</argument>
      </call>
    </service>
    <service id="doctrine.schema_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CreateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:create"/>
      <call method="setName">
        <argument>doctrine:schema:create</argument>
      </call>
    </service>
    <service id="doctrine.schema_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\DropSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:drop"/>
      <call method="setName">
        <argument>doctrine:schema:drop</argument>
      </call>
    </service>
    <service id="doctrine.ensure_production_settings_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EnsureProductionSettingsDoctrineCommand">
      <tag name="console.command" command="doctrine:ensure-production-settings"/>
      <call method="setName">
        <argument>doctrine:ensure-production-settings</argument>
      </call>
    </service>
    <service id="doctrine.clear_entity_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EntityRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-entity-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-entity-region</argument>
      </call>
    </service>
    <service id="doctrine.database_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ImportDoctrineCommand">
      <tag name="console.command" command="doctrine:database:import"/>
      <call method="setName">
        <argument>doctrine:database:import</argument>
      </call>
    </service>
    <service id="doctrine.mapping_info_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\InfoDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:info"/>
      <call method="setName">
        <argument>doctrine:mapping:info</argument>
      </call>
    </service>
    <service id="doctrine.clear_query_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\QueryRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query-region</argument>
      </call>
    </service>
    <service id="doctrine.query_dql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunDqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:dql"/>
      <call method="setName">
        <argument>doctrine:query:dql</argument>
      </call>
    </service>
    <service id="doctrine.schema_update_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\UpdateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:update"/>
      <call method="setName">
        <argument>doctrine:schema:update</argument>
      </call>
    </service>
    <service id="doctrine.schema_validate_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ValidateSchemaCommand">
      <tag name="console.command" command="doctrine:schema:validate"/>
      <call method="setName">
        <argument>doctrine:schema:validate</argument>
      </call>
    </service>
    <service id="doctrine.mapping_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\ImportMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:import"/>
      <argument type="service" id="doctrine"/>
      <argument>%kernel.bundles%</argument>
      <call method="setName">
        <argument>doctrine:mapping:import</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_configuration" class="Doctrine\ORM\Configuration" public="false">
      <call method="setEntityNamespaces">
        <argument type="collection">
          <argument key="msgphp">MsgPhp</argument>
          <argument key="App">App\Entity</argument>
        </argument>
      </call>
      <call method="setMetadataCacheImpl">
        <argument type="service" id="doctrine.system_cache_provider"/>
      </call>
      <call method="setQueryCacheImpl">
        <argument type="service" id="doctrine.system_cache_provider"/>
      </call>
      <call method="setResultCacheImpl">
        <argument type="service" id="doctrine.result_cache_provider"/>
      </call>
      <call method="setMetadataDriverImpl">
        <argument type="service" id="doctrine.orm.default_metadata_driver"/>
      </call>
      <call method="setProxyDir">
        <argument>/data/personal/docker-app/var/cache/prod/doctrine/orm/Proxies</argument>
      </call>
      <call method="setProxyNamespace">
        <argument>Proxies</argument>
      </call>
      <call method="setAutoGenerateProxyClasses">
        <argument>true</argument>
      </call>
      <call method="setClassMetadataFactoryName">
        <argument>Doctrine\ORM\Mapping\ClassMetadataFactory</argument>
      </call>
      <call method="setDefaultRepositoryClassName">
        <argument>Doctrine\ORM\EntityRepository</argument>
      </call>
      <call method="setNamingStrategy">
        <argument type="service" id="doctrine.orm.naming_strategy.underscore"/>
      </call>
      <call method="setQuoteStrategy">
        <argument type="service" id="doctrine.orm.quote_strategy.default"/>
      </call>
      <call method="setEntityListenerResolver">
        <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
      </call>
      <call method="setRepositoryFactory">
        <argument type="service" id="doctrine.orm.container_repository_factory"/>
      </call>
      <call method="addCustomHydrationMode">
        <argument>msgphp_scalar</argument>
        <argument>MsgPhp\Domain\Infra\Doctrine\Hydration\ScalarHydrator</argument>
      </call>
      <call method="addCustomHydrationMode">
        <argument>msgphp_single_scalar</argument>
        <argument>MsgPhp\Domain\Infra\Doctrine\Hydration\SingleScalarHydrator</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_xml_metadata_driver" class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
      <argument type="collection">
        <argument key="/data/personal/docker-app/var/cache/prod/msgphp/doctrine-mapping">MsgPhp</argument>
      </argument>
      <call method="setGlobalBasename">
        <argument>mapping</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_annotation_metadata_driver" class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="collection">
        <argument>/data/personal/docker-app/src/Entity</argument>
      </argument>
    </service>
    <service id="doctrine.orm.default_metadata_driver" class="Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain" public="false">
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_xml_metadata_driver"/>
        <argument>MsgPhp</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>App\Entity</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.orm.default_listeners.attach_entity_listeners" class="Doctrine\ORM\Tools\AttachEntityListenersListener">
      <tag name="doctrine.event_listener" event="loadClassMetadata"/>
    </service>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager" public="true" lazy="true">
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="doctrine.orm.default_configuration"/>
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="messenger.middleware.doctrine_transaction" class="Symfony\Bridge\Doctrine\Messenger\DoctrineTransactionMiddleware" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="messenger.middleware.doctrine_ping_connection" class="Symfony\Bridge\Doctrine\Messenger\DoctrinePingConnectionMiddleware" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="messenger.middleware.doctrine_close_connection" class="Symfony\Bridge\Doctrine\Messenger\DoctrineCloseConnectionMiddleware" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="messenger.transport.doctrine.factory" class="Symfony\Component\Messenger\Transport\Doctrine\DoctrineTransportFactory" public="false">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="MsgPhp\User\Password\PasswordHashing" class="MsgPhp\User\Password\PasswordHashing" public="false" autowire="true" autoconfigure="true"/>
    <service id="MsgPhp\UserBundle\Maker\UserMaker" class="MsgPhp\UserBundle\Maker\UserMaker" public="false" autowire="true" autoconfigure="true">
      <tag name="maker.command"/>
      <argument>%msgphp.domain.class_mapping%</argument>
      <argument>/data/personal/docker-app</argument>
    </service>
    <service id="MsgPhp\User\Command\Handler\AddUserRoleHandler" class="MsgPhp\User\Command\Handler\AddUserRoleHandler" public="false" autowire="true">
      <tag name="msgphp.domain.message_aware"/>
      <tag name="msgphp.domain.command_handler" handles="MsgPhp\User\Command\AddUserRoleCommand"/>
      <tag name="messenger.message_handler" handles="MsgPhp\User\Command\AddUserRoleCommand" bus="messenger.bus.default"/>
      <argument type="service" id="MsgPhp\Domain\Infra\Doctrine\EntityAwareFactory"/>
      <argument type="service" id="MsgPhp\Domain\Message\DomainMessageBus"/>
      <argument type="service" id="MsgPhp\User\Infra\Doctrine\Repository\UserRoleRepository"/>
    </service>
    <service id="MsgPhp\User\Command\Handler\ChangeUserCredentialHandler" class="MsgPhp\User\Command\Handler\ChangeUserCredentialHandler" public="false" autowire="true">
      <tag name="msgphp.domain.message_aware"/>
      <tag name="msgphp.domain.command_handler" handles="MsgPhp\User\Command\ChangeUserCredentialCommand"/>
      <tag name="messenger.message_handler" handles="MsgPhp\User\Command\ChangeUserCredentialCommand" bus="messenger.bus.default"/>
      <argument type="service" id="MsgPhp\Domain\Infra\Doctrine\EntityAwareFactory"/>
      <argument type="service" id="MsgPhp\Domain\Message\DomainMessageBus"/>
      <argument type="service" id="MsgPhp\User\Infra\Doctrine\Repository\UserRepository"/>
    </service>
    <service id="MsgPhp\User\Command\Handler\CreateUserHandler" class="MsgPhp\User\Command\Handler\CreateUserHandler" public="false" autowire="true">
      <tag name="msgphp.domain.message_aware"/>
      <tag name="msgphp.domain.command_handler" handles="MsgPhp\User\Command\CreateUserCommand"/>
      <tag name="messenger.message_handler" handles="MsgPhp\User\Command\CreateUserCommand" bus="messenger.bus.default"/>
      <argument type="service" id="MsgPhp\Domain\Infra\Doctrine\EntityAwareFactory"/>
      <argument type="service" id="MsgPhp\Domain\Message\DomainMessageBus"/>
      <argument type="service" id="MsgPhp\User\Infra\Doctrine\Repository\UserRepository"/>
    </service>
    <service id="MsgPhp\User\Command\Handler\DeleteUserHandler" class="MsgPhp\User\Command\Handler\DeleteUserHandler" public="false" autowire="true">
      <tag name="msgphp.domain.message_aware"/>
      <tag name="msgphp.domain.command_handler" handles="MsgPhp\User\Command\DeleteUserCommand"/>
      <tag name="messenger.message_handler" handles="MsgPhp\User\Command\DeleteUserCommand" bus="messenger.bus.default"/>
      <argument type="service" id="MsgPhp\Domain\Infra\Doctrine\EntityAwareFactory"/>
      <argument type="service" id="MsgPhp\Domain\Message\DomainMessageBus"/>
      <argument type="service" id="MsgPhp\User\Infra\Doctrine\Repository\UserRepository"/>
    </service>
    <service id="MsgPhp\User\Command\Handler\DeleteUserRoleHandler" class="MsgPhp\User\Command\Handler\DeleteUserRoleHandler" public="false" autowire="true">
      <tag name="msgphp.domain.message_aware"/>
      <tag name="msgphp.domain.command_handler" handles="MsgPhp\User\Command\DeleteUserRoleCommand"/>
      <tag name="messenger.message_handler" handles="MsgPhp\User\Command\DeleteUserRoleCommand" bus="messenger.bus.default"/>
      <argument type="service" id="MsgPhp\Domain\Infra\Doctrine\EntityAwareFactory"/>
      <argument type="service" id="MsgPhp\Domain\Message\DomainMessageBus"/>
      <argument type="service" id="MsgPhp\User\Infra\Doctrine\Repository\UserRoleRepository"/>
    </service>
    <service id="MsgPhp\User\Command\Handler\RequestUserPasswordHandler" class="MsgPhp\User\Command\Handler\RequestUserPasswordHandler" public="false" autowire="true">
      <tag name="msgphp.domain.message_aware"/>
      <tag name="msgphp.domain.command_handler" handles="MsgPhp\User\Command\RequestUserPasswordCommand"/>
      <tag name="messenger.message_handler" handles="MsgPhp\User\Command\RequestUserPasswordCommand" bus="messenger.bus.default"/>
      <argument type="service" id="MsgPhp\Domain\Infra\Doctrine\EntityAwareFactory"/>
      <argument type="service" id="MsgPhp\Domain\Message\DomainMessageBus"/>
      <argument type="service" id="MsgPhp\User\Infra\Doctrine\Repository\UserRepository"/>
    </service>
    <service id="MsgPhp\User\Infra\Doctrine\Repository\RoleRepository" class="MsgPhp\User\Infra\Doctrine\Repository\RoleRepository" public="false" autowire="true">
      <argument>App\Entity\User\Role</argument>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="MsgPhp\Domain\DomainIdentityHelper"/>
    </service>
    <service id="MsgPhp\User\Infra\Doctrine\Repository\UserRepository" class="MsgPhp\User\Infra\Doctrine\Repository\UserRepository" public="false" autowire="true">
      <argument>App\Entity\User\AppUser</argument>
      <argument>credential.email</argument>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="MsgPhp\Domain\DomainIdentityHelper"/>
    </service>
    <service id="MsgPhp\User\Infra\Doctrine\Repository\UserRoleRepository" class="MsgPhp\User\Infra\Doctrine\Repository\UserRoleRepository" public="false" autowire="true">
      <argument>App\Entity\User\UserRole</argument>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="MsgPhp\Domain\DomainIdentityHelper"/>
    </service>
    <service id="MsgPhp\User\Infra\Doctrine\ObjectFieldMappings" class="MsgPhp\User\Infra\Doctrine\ObjectFieldMappings" public="false" autowire="true">
      <tag name="msgphp.doctrine.object_field_mappings" priority="-100"/>
    </service>
    <service id="MsgPhp\User\Infra\Console\Command\AddUserRoleCommand" class="MsgPhp\User\Infra\Console\Command\AddUserRoleCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="msgphp.domain.message_aware"/>
      <tag name="console.command"/>
      <argument type="service" id="MsgPhp\Domain\Infra\Doctrine\EntityAwareFactory"/>
      <argument type="service" id="MsgPhp\Domain\Message\DomainMessageBus"/>
      <argument type="service" id="MsgPhp\User\Infra\Doctrine\Repository\UserRepository"/>
      <argument type="service" id="MsgPhp\User\Infra\Doctrine\Repository\RoleRepository"/>
      <argument type="service">
        <service class="MsgPhp\Domain\Infra\Console\Context\DoctrineEntityContextFactory" public="false">
          <argument type="service">
            <service class="MsgPhp\Domain\Infra\Console\Context\ClassContextFactory" public="false" autowire="true">
              <argument>App\Entity\User\UserRole</argument>
              <argument>__construct</argument>
              <argument>%msgphp.domain.class_mapping%</argument>
              <argument>4</argument>
              <argument type="service" id="app.console.class_context_element_factory"/>
            </service>
          </argument>
          <argument type="service" id="doctrine.orm.default_entity_manager"/>
          <argument>App\Entity\User\UserRole</argument>
        </service>
      </argument>
      <call method="setName">
        <argument>user:role:add</argument>
      </call>
    </service>
    <service id="MsgPhp\User\Infra\Console\Command\ChangeUserCredentialCommand" class="MsgPhp\User\Infra\Console\Command\ChangeUserCredentialCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="msgphp.domain.message_aware"/>
      <tag name="console.command"/>
      <argument type="service" id="MsgPhp\Domain\Infra\Doctrine\EntityAwareFactory"/>
      <argument type="service" id="MsgPhp\Domain\Message\DomainMessageBus"/>
      <argument type="service" id="MsgPhp\User\Infra\Doctrine\Repository\UserRepository"/>
      <argument type="service">
        <service class="MsgPhp\Domain\Infra\Console\Context\DoctrineEntityContextFactory" public="false">
          <argument type="service">
            <service class="MsgPhp\Domain\Infra\Console\Context\ClassContextFactory" public="false" autowire="true">
              <argument>MsgPhp\User\Entity\Credential\EmailPassword</argument>
              <argument>__construct</argument>
              <argument>%msgphp.domain.class_mapping%</argument>
              <argument>3</argument>
              <argument type="service" id="app.console.class_context_element_factory"/>
            </service>
          </argument>
          <argument type="service" id="doctrine.orm.default_entity_manager"/>
          <argument>MsgPhp\User\Entity\Credential\EmailPassword</argument>
        </service>
      </argument>
      <call method="setName">
        <argument>user:change-credential</argument>
      </call>
    </service>
    <service id="MsgPhp\User\Infra\Console\Command\CreateUserCommand" class="MsgPhp\User\Infra\Console\Command\CreateUserCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="msgphp.domain.message_aware"/>
      <tag name="console.command"/>
      <argument type="service" id="MsgPhp\Domain\Factory\ClassMappingObjectFactory"/>
      <argument type="service" id="MsgPhp\Domain\Message\DomainMessageBus"/>
      <argument type="service">
        <service class="MsgPhp\Domain\Infra\Console\Context\DoctrineEntityContextFactory" public="false">
          <argument type="service">
            <service class="MsgPhp\Domain\Infra\Console\Context\ClassContextFactory" public="false" autowire="true">
              <argument>App\Entity\User\AppUser</argument>
              <argument>__construct</argument>
              <argument>%msgphp.domain.class_mapping%</argument>
              <argument>0</argument>
              <argument type="service" id="app.console.class_context_element_factory"/>
            </service>
          </argument>
          <argument type="service" id="doctrine.orm.default_entity_manager"/>
          <argument>App\Entity\User\AppUser</argument>
        </service>
      </argument>
      <call method="setName">
        <argument>user:create</argument>
      </call>
    </service>
    <service id="MsgPhp\User\Infra\Console\Command\DeleteUserCommand" class="MsgPhp\User\Infra\Console\Command\DeleteUserCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="msgphp.domain.message_aware"/>
      <tag name="console.command"/>
      <argument type="service" id="MsgPhp\Domain\Infra\Doctrine\EntityAwareFactory"/>
      <argument type="service" id="MsgPhp\Domain\Message\DomainMessageBus"/>
      <argument type="service" id="MsgPhp\User\Infra\Doctrine\Repository\UserRepository"/>
      <call method="setName">
        <argument>user:delete</argument>
      </call>
    </service>
    <service id="MsgPhp\User\Infra\Console\Command\DeleteUserRoleCommand" class="MsgPhp\User\Infra\Console\Command\DeleteUserRoleCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="msgphp.domain.message_aware"/>
      <tag name="console.command"/>
      <argument type="service" id="MsgPhp\Domain\Infra\Doctrine\EntityAwareFactory"/>
      <argument type="service" id="MsgPhp\Domain\Message\DomainMessageBus"/>
      <argument type="service" id="MsgPhp\User\Infra\Doctrine\Repository\UserRepository"/>
      <argument type="service" id="MsgPhp\User\Infra\Doctrine\Repository\RoleRepository"/>
      <call method="setName">
        <argument>user:role:delete</argument>
      </call>
    </service>
    <service id="MsgPhp\Domain\Infra\Console\Context\ClassContextFactory.uuMey0g" class="MsgPhp\Domain\Infra\Console\Context\ClassContextFactory" public="false" autowire="true">
      <argument>App\Entity\User\AppUser</argument>
      <argument>__construct</argument>
      <argument>%msgphp.domain.class_mapping%</argument>
      <argument>0</argument>
      <argument type="service" id="app.console.class_context_element_factory"/>
    </service>
    <service id="MsgPhp\Domain\Infra\Console\Context\DoctrineEntityContextFactory.2mkbcKm" class="MsgPhp\Domain\Infra\Console\Context\DoctrineEntityContextFactory" public="false">
      <argument type="service">
        <service class="MsgPhp\Domain\Infra\Console\Context\ClassContextFactory" public="false" autowire="true">
          <argument>App\Entity\User\AppUser</argument>
          <argument>__construct</argument>
          <argument>%msgphp.domain.class_mapping%</argument>
          <argument>0</argument>
          <argument type="service" id="app.console.class_context_element_factory"/>
        </service>
      </argument>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>App\Entity\User\AppUser</argument>
    </service>
    <service id="MsgPhp\Domain\Infra\Console\Context\ClassContextFactory.u7xEKoE" class="MsgPhp\Domain\Infra\Console\Context\ClassContextFactory" public="false" autowire="true">
      <argument>App\Entity\User\UserRole</argument>
      <argument>__construct</argument>
      <argument>%msgphp.domain.class_mapping%</argument>
      <argument>4</argument>
      <argument type="service" id="app.console.class_context_element_factory"/>
    </service>
    <service id="MsgPhp\Domain\Infra\Console\Context\DoctrineEntityContextFactory.V9nX3fY" class="MsgPhp\Domain\Infra\Console\Context\DoctrineEntityContextFactory" public="false">
      <argument type="service">
        <service class="MsgPhp\Domain\Infra\Console\Context\ClassContextFactory" public="false" autowire="true">
          <argument>App\Entity\User\UserRole</argument>
          <argument>__construct</argument>
          <argument>%msgphp.domain.class_mapping%</argument>
          <argument>4</argument>
          <argument type="service" id="app.console.class_context_element_factory"/>
        </service>
      </argument>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>App\Entity\User\UserRole</argument>
    </service>
    <service id="MsgPhp\Domain\Infra\Console\Context\ClassContextFactory.kw_Febf" class="MsgPhp\Domain\Infra\Console\Context\ClassContextFactory" public="false" autowire="true">
      <argument>MsgPhp\User\Entity\Credential\EmailPassword</argument>
      <argument>__construct</argument>
      <argument>%msgphp.domain.class_mapping%</argument>
      <argument>3</argument>
      <argument type="service" id="app.console.class_context_element_factory"/>
    </service>
    <service id="MsgPhp\Domain\Infra\Console\Context\DoctrineEntityContextFactory.ZMk.2J1" class="MsgPhp\Domain\Infra\Console\Context\DoctrineEntityContextFactory" public="false">
      <argument type="service">
        <service class="MsgPhp\Domain\Infra\Console\Context\ClassContextFactory" public="false" autowire="true">
          <argument>MsgPhp\User\Entity\Credential\EmailPassword</argument>
          <argument>__construct</argument>
          <argument>%msgphp.domain.class_mapping%</argument>
          <argument>3</argument>
          <argument type="service" id="app.console.class_context_element_factory"/>
        </service>
      </argument>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>MsgPhp\User\Entity\Credential\EmailPassword</argument>
    </service>
    <service id="MsgPhp\User\Infra\Form\Type\HashedPasswordType" class="MsgPhp\User\Infra\Form\Type\HashedPasswordType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="MsgPhp\User\Infra\Security\PasswordHashing"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="MsgPhp\User\Infra\Validator\ExistingUsernameValidator" class="MsgPhp\User\Infra\Validator\ExistingUsernameValidator" public="false" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="MsgPhp\User\Infra\Doctrine\Repository\UserRepository"/>
    </service>
    <service id="MsgPhp\User\Infra\Validator\UniqueUsernameValidator" class="MsgPhp\User\Infra\Validator\UniqueUsernameValidator" public="false" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="MsgPhp\User\Infra\Doctrine\Repository\UserRepository"/>
    </service>
    <service id="MsgPhp\User\Infra\Security\PasswordHashing" class="MsgPhp\User\Infra\Security\PasswordHashing" public="false" autowire="true">
      <argument type="service">
        <service class="Symfony\Component\Security\Core\Encoder\PasswordEncoderInterface">
          <argument>MsgPhp\User\Infra\Security\SecurityUser</argument>
          <factory service="security.encoder_factory.generic" method="getEncoder"/>
        </service>
      </argument>
    </service>
    <service id="MsgPhp\User\Infra\Security\SecurityUserProvider" class="MsgPhp\User\Infra\Security\SecurityUserProvider" public="false" autowire="true">
      <argument type="service" id="MsgPhp\User\Infra\Doctrine\Repository\UserRepository"/>
      <argument type="service" id="MsgPhp\Domain\Infra\Doctrine\EntityAwareFactory"/>
      <argument type="service" id="App\Security\UserRolesProvider"/>
    </service>
    <service id="MsgPhp\User\Infra\Security\UserArgumentValueResolver" class="MsgPhp\User\Infra\Security\UserArgumentValueResolver" public="false" autowire="true">
      <tag name="controller.argument_value_resolver"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="MsgPhp\User\Infra\Doctrine\Repository\UserRepository"/>
      <argument type="service" id="MsgPhp\Domain\Infra\Doctrine\EntityAwareFactory"/>
    </service>
    <service id="MsgPhp\User\Infra\Security\UserParamConverter" class="MsgPhp\User\Infra\Security\UserParamConverter" public="false" autowire="true">
      <tag name="request.param_converter" converter="msgphp.current_user"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="MsgPhp\User\Infra\Doctrine\Repository\UserRepository"/>
      <argument type="service" id="MsgPhp\Domain\Infra\Doctrine\EntityAwareFactory"/>
    </service>
    <service id="MsgPhp\UserBundle\Twig\GlobalVariable" class="MsgPhp\UserBundle\Twig\GlobalVariable" public="false" autowire="true" autoconfigure="true">
      <tag name="container.service_subscriber"/>
      <argument type="service" id=".service_locator.mxIQ6EJ.MsgPhp\UserBundle\Twig\GlobalVariable"/>
    </service>
    <service id=".1_ServiceLocator~LTJqqPT" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker"/>
        <argument key="security.token_storage" type="service" id="security.token_storage"/>
      </argument>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker" public="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage" public="true">
      <tag name="kernel.reset" method="setToken"/>
    </service>
    <service id="security.helper" class="Symfony\Component\Security\Core\Security" public="false">
      <argument type="service" id=".1_ServiceLocator~LTJqqPT"/>
    </service>
    <service id="security.user_value_resolver" class="Symfony\Component\Security\Http\Controller\UserValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="40"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="security.authentication.manager" class="Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager" public="false">
      <argument type="iterator">
        <argument type="service" id="security.authentication.provider.guard.main"/>
        <argument type="service" id="security.authentication.provider.dao.main"/>
        <argument type="service" id="security.authentication.provider.anonymous.main"/>
      </argument>
      <argument>true</argument>
      <call method="setEventDispatcher">
        <argument type="service" id="event_dispatcher"/>
      </call>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver" public="false">
      <argument>Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</argument>
      <argument>Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</argument>
    </service>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>migrate</argument>
    </service>
    <service id="security.authentication.session_strategy_noop" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>none</argument>
    </service>
    <service id="security.encoder_factory.generic" class="Symfony\Component\Security\Core\Encoder\EncoderFactory" public="false">
      <argument type="collection">
        <argument key="MsgPhp\User\Infra\Security\SecurityUser" type="collection">
          <argument key="class">Symfony\Component\Security\Core\Encoder\BCryptPasswordEncoder</argument>
          <argument key="arguments" type="collection">
            <argument>13</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="security.user_password_encoder.generic" class="Symfony\Component\Security\Core\Encoder\UserPasswordEncoder" public="false">
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="security.user_checker" class="Symfony\Component\Security\Core\User\UserChecker" public="false"/>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" public="true">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy" public="false">
      <argument>%security.role_hierarchy.roles%</argument>
    </service>
    <service id="security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter" public="false">
      <tag name="security.voter" priority="250"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.access.role_hierarchy_voter" class="Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter" public="false">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.role_hierarchy"/>
    </service>
    <service id="security.firewall.map" class="Symfony\Bundle\SecurityBundle\Security\FirewallMap" public="false">
      <argument type="service" id=".service_locator.ko2dQVn"/>
      <argument type="iterator">
        <argument key="security.firewall.map.context.dev" type="service" id=".security.request_matcher.zfHj2lW"/>
        <argument key="security.firewall.map.context.main" type="service" id=".security.request_matcher.00qF1Z7"/>
      </argument>
    </service>
    <service id="security.firewall.context" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.firewall.config" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument></argument>
    </service>
    <service id="security.logout_url_generator" class="Symfony\Component\Security\Http\Logout\LogoutUrlGenerator" public="false">
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <call method="registerListener">
        <argument>main</argument>
        <argument>/logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.user.provider.missing" class="Symfony\Component\Security\Core\User\MissingUserProvider" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="security.user.provider.in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider" public="false" abstract="true"/>
    <service id="security.user.provider.in_memory.user" class="Symfony\Component\Security\Core\User\User" public="false" abstract="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.1.</deprecated>
    </service>
    <service id="security.user.provider.ldap" class="Symfony\Component\Security\Core\User\LdapUserProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.user.provider.chain" class="Symfony\Component\Security\Core\User\ChainUserProvider" public="false" abstract="true"/>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils" public="false">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument>{^https?://%s$}i</argument>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" public="false">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="cache.security_expression_language" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <tag name="cache.pool"/>
      <argument>f61FyUpIVM</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/data/personal/docker-app/var/cache/prod/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="security.authentication.listener.anonymous" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument></argument>
    </service>
    <service id="security.authentication.retry_entry_point" class="Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint" public="false">
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="security.authentication.basic_entry_point" class="Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint" public="false"/>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.retry_entry_point"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap" public="false">
      <call method="add">
        <argument type="service" id=".security.request_matcher.soUQmfL"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.dCMKnLr"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.movRkKF"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.WF6qaOe"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.W0aXY15"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.mHknGKx"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher._vpejKo"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher..IaojWe"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.Uc9hGJZ"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.Yk6K2AJ"/>
        <argument type="collection">
          <argument>ROLE_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.N_xzDpN"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_FULLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.YoLsVaf"/>
        <argument type="collection">
          <argument>ROLE_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.ZIFgHm1"/>
        <argument type="collection">
          <argument>ROLE_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.Pdb8h66"/>
        <argument type="collection">
          <argument>ROLE_HADOOP</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.7ol4PKy"/>
        <argument type="collection">
          <argument>ROLE_DATABASE</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.t.9JAs6"/>
        <argument type="collection">
          <argument>ROLE_TEMPLATE</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.o8NlZeM"/>
        <argument type="collection">
          <argument>ROLE_FILE_WATCHER</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.53mkRCL"/>
        <argument type="collection">
          <argument>ROLE_FILE_UPLOAD</argument>
          <argument>ROLE_NEXUS_FILE_UPLOAD</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.J2mTIlH"/>
        <argument type="collection">
          <argument>ROLE_MODEL</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.GEyw7Da"/>
        <argument type="collection">
          <argument>ROLE_QUERIES</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.hZKQPu."/>
        <argument type="collection">
          <argument>ROLE_TABLES</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.RR5TxKt"/>
        <argument type="collection">
          <argument>ROLE_TASK_CATEGORY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.6.gBaDX"/>
        <argument type="collection">
          <argument>ROLE_TASK_QUEUE</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.481QJ7i"/>
        <argument type="collection">
          <argument>ROLE_TASK</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.VfU3S4s"/>
        <argument type="collection">
          <argument>ROLE_TIMESHEET_SUBMISSION</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.Pq7f5dr"/>
        <argument type="collection">
          <argument>ROLE_PROJECT_RATES</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.zsiltZG"/>
        <argument type="collection">
          <argument>ROLE_TIMESHEET_SUBMISSION</argument>
          <argument>ROLE_TIMESHEET_ASSIGNMENT</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.jXBfHjM"/>
        <argument type="collection">
          <argument>ROLE_PROJECT</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.hxrGZLU"/>
        <argument type="collection">
          <argument>ROLE_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.Yvrq2OU"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_FULLY</argument>
        </argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.context_listener" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="iterator">
        <argument type="service" id="App\Security\CognitoUserProvider"/>
      </argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.logout_listener" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout.success_handler"/>
      <argument></argument>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.csrf_token_clearing"/>
      </call>
    </service>
    <service id="security.logout.handler.session" class="Symfony\Component\Security\Http\Logout\SessionLogoutHandler" public="false"/>
    <service id="security.logout.handler.cookie_clearing" class="Symfony\Component\Security\Http\Logout\CookieClearingLogoutHandler" public="false" abstract="true"/>
    <service id="security.logout.success_handler" class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument>/</argument>
    </service>
    <service id="security.authentication.form_entry_point" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false" abstract="true">
      <argument type="service" id="http_kernel"/>
    </service>
    <service id="security.authentication.listener.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_success_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
      <argument></argument>
    </service>
    <service id="security.authentication.success_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.custom_failure_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.failure_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.form" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.simple_form" class="Symfony\Component\Security\Http\Firewall\SimpleFormAuthenticationListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.simple_success_failure_handler" class="Symfony\Component\Security\Http\Authentication\SimpleAuthenticationHandler" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.simple_preauth" class="Symfony\Component\Security\Http\Firewall\SimplePreAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.x509" class="Symfony\Component\Security\Http\Firewall\X509AuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.json" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordJsonAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
      <argument type="service" id="property_accessor" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.remote_user" class="Symfony\Component\Security\Http\Firewall\RemoteUserAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.basic" class="Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.provider.dao" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.provider.ldap_bind" class="Symfony\Component\Security\Core\Authentication\Provider\LdapBindAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>true</argument>
    </service>
    <service id="security.authentication.provider.simple" class="Symfony\Component\Security\Core\Authentication\Provider\SimpleAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>null</argument>
    </service>
    <service id="security.authentication.provider.pre_authenticated" class="Symfony\Component\Security\Core\Authentication\Provider\PreAuthenticatedAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.exception_listener" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.entry_point" on-invalid="null"/>
      <argument>null</argument>
      <argument type="service" id="security.access.denied_handler" on-invalid="null"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.authentication.switchuser_listener" class="Symfony\Component\Security\Http\Firewall\SwitchUserListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>_switch_user</argument>
      <argument>ROLE_ALLOWED_TO_SWITCH</argument>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.listener.rememberme" class="Symfony\Component\Security\Http\Firewall\RememberMeListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.rememberme"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
      <argument></argument>
      <argument type="service" id="security.authentication.session_strategy"/>
    </service>
    <service id="security.authentication.provider.rememberme" class="Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="security.rememberme.token.provider.in_memory" class="Symfony\Component\Security\Core\Authentication\RememberMe\InMemoryTokenProvider" public="false"/>
    <service id="security.authentication.rememberme.services.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.persistent" class="Symfony\Component\Security\Http\RememberMe\PersistentTokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.simplehash" class="Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="templating.helper.logout_url" class="Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper" public="false">
      <tag name="templating.helper" alias="logout_url"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="templating.helper.security" class="Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper" public="false">
      <tag name="templating.helper" alias="security"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="twig.extension.logout_url" class="Symfony\Bridge\Twig\Extension\LogoutUrlExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="twig.extension.security" class="Symfony\Bridge\Twig\Extension\SecurityExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="data_collector.security" class="MsgPhp\User\Infra\Security\DataCollector" public="false">
      <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security" priority="270"/>
      <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      <argument type="service" id="security.role_hierarchy"/>
      <argument type="service" id="security.logout_url_generator"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.security.firewall" on-invalid="null"/>
      <argument type="service" id="MsgPhp\User\Infra\Doctrine\Repository\UserRepository" on-invalid="null"/>
      <argument type="service" id="MsgPhp\Domain\Infra\Doctrine\EntityAwareFactory"/>
    </service>
    <service id="security.authentication.guard_handler" class="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
      <argument type="collection"/>
      <call method="setSessionAuthenticationStrategy">
        <argument type="service" id="security.authentication.session_strategy"/>
      </call>
    </service>
    <service id="security.authentication.provider.guard" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.authentication.listener.guard" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="debug.security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager" public="false">
      <argument type="service" id="debug.security.access.decision_manager.inner"/>
    </service>
    <service id="debug.security.firewall" class="Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="event_dispatcher"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="security.firewall.map.config.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>dev</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.zfHj2lW</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument></argument>
    </service>
    <service id=".security.request_matcher.zfHj2lW" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/(_(profiler|wdt)|css|images|js)/</argument>
    </service>
    <service id="security.firewall.map.context.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.dev"/>
    </service>
    <service id="security.firewall.map.config.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>main</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.00qF1Z7</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>App\Security\CognitoUserProvider</argument>
      <argument>main</argument>
      <argument>security.authentication.form_entry_point.main</argument>
      <argument>null</argument>
      <argument>/dashboard</argument>
      <argument type="collection">
        <argument>guard</argument>
        <argument>form_login</argument>
        <argument>anonymous</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.00qF1Z7" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/</argument>
    </service>
    <service id="security.context_listener.0" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="iterator">
        <argument type="service" id="App\Security\CognitoUserProvider"/>
      </argument>
      <argument>main</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.logout_listener.main" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout.success_handler.main"/>
      <argument type="collection">
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">logout</argument>
        <argument key="logout_path">/logout</argument>
      </argument>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.csrf_token_clearing"/>
      </call>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.session"/>
      </call>
    </service>
    <service id="security.logout.success_handler.main" class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false">
      <argument type="service" id="security.http_utils"/>
      <argument>/</argument>
    </service>
    <service id="security.authentication.provider.guard.main" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" public="false">
      <argument type="iterator">
        <argument type="service" id="App\Security\CognitoAuthenticator"/>
      </argument>
      <argument type="service" id="App\Security\CognitoUserProvider"/>
      <argument>main</argument>
      <argument type="service" id="security.user_checker"/>
    </service>
    <service id="security.authentication.listener.guard.main" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" public="false">
      <tag name="security.remember_me_aware" id="main" provider="App\Security\CognitoUserProvider"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument>main</argument>
      <argument type="iterator">
        <argument type="service" id="App\Security\CognitoAuthenticator"/>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.provider.dao.main" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
      <argument type="service" id="App\Security\CognitoUserProvider"/>
      <argument type="service" id="security.user_checker"/>
      <argument>main</argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.success_handler.main.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">/login</argument>
          <argument key="default_target_path">/dashboard</argument>
          <argument key="use_referer">true</argument>
          <argument key="always_use_default_target_path">false</argument>
          <argument key="target_path_parameter">_target_path</argument>
        </argument>
      </call>
      <call method="setProviderKey">
        <argument>main</argument>
      </call>
    </service>
    <service id="security.authentication.failure_handler.main.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">/login</argument>
          <argument key="failure_path">null</argument>
          <argument key="failure_forward">false</argument>
          <argument key="failure_path_parameter">_failure_path</argument>
        </argument>
      </call>
    </service>
    <service id="security.authentication.listener.form.main" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false">
      <tag name="security.remember_me_aware" id="main" provider="App\Security\CognitoUserProvider"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument>main</argument>
      <argument type="service" id="security.authentication.success_handler.main.form_login"/>
      <argument type="service" id="security.authentication.failure_handler.main.form_login"/>
      <argument type="collection">
        <argument key="check_path">/login</argument>
        <argument key="username_parameter">email</argument>
        <argument key="password_parameter">password</argument>
        <argument key="use_forward">false</argument>
        <argument key="require_previous_session">false</argument>
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">authenticate</argument>
        <argument key="post_only">true</argument>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
      <argument>null</argument>
    </service>
    <service id="security.authentication.form_entry_point.main" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument>/login</argument>
      <argument>false</argument>
    </service>
    <service id="security.authentication.listener.anonymous.main" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument>%container.build_hash%</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous.main" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument>%container.build_hash%</argument>
    </service>
    <service id="security.exception_listener.main" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>main</argument>
      <argument type="service" id="security.authentication.form_entry_point.main"/>
      <argument>/dashboard</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service" id="security.authentication.listener.guard.main"/>
        <argument type="service" id="security.authentication.listener.form.main"/>
        <argument type="service" id="security.authentication.listener.anonymous.main"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.main"/>
      <argument type="service" id="security.logout_listener.main"/>
      <argument type="service" id="security.firewall.map.config.main"/>
    </service>
    <service id=".service_locator.ko2dQVn" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.firewall.map.context.dev" type="service" id="security.firewall.map.context.dev"/>
        <argument key="security.firewall.map.context.main" type="service" id="security.firewall.map.context.main"/>
      </argument>
    </service>
    <service id=".security.request_matcher.soUQmfL" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>/monitor/health</argument>
    </service>
    <service id=".security.request_matcher.dCMKnLr" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>/install</argument>
    </service>
    <service id=".security.request_matcher.movRkKF" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>/installsuccess</argument>
    </service>
    <service id=".security.request_matcher.WF6qaOe" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>/updateconfig</argument>
    </service>
    <service id=".security.request_matcher.W0aXY15" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>/setupconfiguration</argument>
    </service>
    <service id=".security.request_matcher.mHknGKx" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>/login</argument>
    </service>
    <service id=".security.request_matcher._vpejKo" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>/forgot-password</argument>
    </service>
    <service id=".security.request_matcher..IaojWe" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>/forgot_password</argument>
    </service>
    <service id=".security.request_matcher.Uc9hGJZ" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>/reset-password</argument>
    </service>
    <service id=".security.request_matcher.Yk6K2AJ" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/admin</argument>
    </service>
    <service id=".security.request_matcher.N_xzDpN" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/profile</argument>
    </service>
    <service id=".security.request_matcher.YoLsVaf" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/accounts</argument>
    </service>
    <service id=".security.request_matcher.ZIFgHm1" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/users</argument>
    </service>
    <service id=".security.request_matcher.Pdb8h66" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/hadoop</argument>
    </service>
    <service id=".security.request_matcher.7ol4PKy" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/mpp</argument>
    </service>
    <service id=".security.request_matcher.t.9JAs6" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/templates</argument>
    </service>
    <service id=".security.request_matcher.o8NlZeM" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/watcher</argument>
    </service>
    <service id=".security.request_matcher.53mkRCL" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/upload</argument>
    </service>
    <service id=".security.request_matcher.J2mTIlH" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/simulator</argument>
    </service>
    <service id=".security.request_matcher.GEyw7Da" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/queries</argument>
    </service>
    <service id=".security.request_matcher.hZKQPu." class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/tables</argument>
    </service>
    <service id=".security.request_matcher.RR5TxKt" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/taskcategory</argument>
    </service>
    <service id=".security.request_matcher.6.gBaDX" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/taskqueue</argument>
    </service>
    <service id=".security.request_matcher.481QJ7i" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/task</argument>
    </service>
    <service id=".security.request_matcher.VfU3S4s" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/timesheet</argument>
    </service>
    <service id=".security.request_matcher.Pq7f5dr" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/projectrates</argument>
    </service>
    <service id=".security.request_matcher.zsiltZG" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/projectassignment</argument>
    </service>
    <service id=".security.request_matcher.jXBfHjM" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/project</argument>
    </service>
    <service id=".security.request_matcher.hxrGZLU" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>/phpinfo</argument>
    </service>
    <service id=".security.request_matcher.Yvrq2OU" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/*</argument>
    </service>
    <service id="security.command.user_password_encoder" class="Symfony\Bundle\SecurityBundle\Command\UserPasswordEncoderCommand" public="false">
      <tag name="console.command" command="security:encode-password"/>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument type="collection">
        <argument>MsgPhp\User\Infra\Security\SecurityUser</argument>
      </argument>
      <call method="setName">
        <argument>security:encode-password</argument>
      </call>
    </service>
    <service id="aws_sdk" class="Aws\Sdk">
      <argument type="collection">
        <argument key="version">latest</argument>
        <argument key="region">us-east-1</argument>
        <argument key="credentials" type="collection">
          <argument key="key">AKIAIZ6ENRM52CQMFSTA</argument>
          <argument key="secret">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</argument>
        </argument>
        <argument key="S3" type="collection">
          <argument key="version">latest</argument>
          <argument key="bucket">yuva-bucket</argument>
          <argument key="region">us-east-1</argument>
        </argument>
        <argument key="Sqs" type="collection">
          <argument key="queue_url">https://sqs.us-east-1.amazonaws.com/590297375119/test-yuva</argument>
        </argument>
        <argument key="ua_append" type="collection">
          <argument>Symfony/4.1.13</argument>
          <argument>SYMOD/2.0.0</argument>
        </argument>
      </argument>
    </service>
    <service id="aws.acmpca" class="Aws\ACMPCA\ACMPCAClient">
      <factory service="aws_sdk" method="createACMPCA"/>
    </service>
    <service id="aws.acm" class="Aws\Acm\AcmClient">
      <factory service="aws_sdk" method="createAcm"/>
    </service>
    <service id="aws.alexaforbusiness" class="Aws\AlexaForBusiness\AlexaForBusinessClient">
      <factory service="aws_sdk" method="createAlexaForBusiness"/>
    </service>
    <service id="aws.apigateway" class="Aws\ApiGateway\ApiGatewayClient">
      <factory service="aws_sdk" method="createApiGateway"/>
    </service>
    <service id="aws.applicationautoscaling" class="Aws\ApplicationAutoScaling\ApplicationAutoScalingClient">
      <factory service="aws_sdk" method="createApplicationAutoScaling"/>
    </service>
    <service id="aws.appstream" class="Aws\Appstream\AppstreamClient">
      <factory service="aws_sdk" method="createAppstream"/>
    </service>
    <service id="aws.appsync" class="Aws\AppSync\AppSyncClient">
      <factory service="aws_sdk" method="createAppSync"/>
    </service>
    <service id="aws.athena" class="Aws\Athena\AthenaClient">
      <factory service="aws_sdk" method="createAthena"/>
    </service>
    <service id="aws.autoscalingplans" class="Aws\AutoScalingPlans\AutoScalingPlansClient">
      <factory service="aws_sdk" method="createAutoScalingPlans"/>
    </service>
    <service id="aws.autoscaling" class="Aws\AutoScaling\AutoScalingClient">
      <factory service="aws_sdk" method="createAutoScaling"/>
    </service>
    <service id="aws.batch" class="Aws\Batch\BatchClient">
      <factory service="aws_sdk" method="createBatch"/>
    </service>
    <service id="aws.budgets" class="Aws\Budgets\BudgetsClient">
      <factory service="aws_sdk" method="createBudgets"/>
    </service>
    <service id="aws.costexplorer" class="Aws\CostExplorer\CostExplorerClient">
      <factory service="aws_sdk" method="createCostExplorer"/>
    </service>
    <service id="aws.cloud9" class="Aws\Cloud9\Cloud9Client">
      <factory service="aws_sdk" method="createCloud9"/>
    </service>
    <service id="aws.clouddirectory" class="Aws\CloudDirectory\CloudDirectoryClient">
      <factory service="aws_sdk" method="createCloudDirectory"/>
    </service>
    <service id="aws.cloudformation" class="Aws\CloudFormation\CloudFormationClient">
      <factory service="aws_sdk" method="createCloudFormation"/>
    </service>
    <service id="aws.cloudfront" class="Aws\CloudFront\CloudFrontClient">
      <factory service="aws_sdk" method="createCloudFront"/>
    </service>
    <service id="aws.cloudhsm" class="Aws\CloudHsm\CloudHsmClient">
      <factory service="aws_sdk" method="createCloudHsm"/>
    </service>
    <service id="aws.cloudhsmv2" class="Aws\CloudHSMV2\CloudHSMV2Client">
      <factory service="aws_sdk" method="createCloudHSMV2"/>
    </service>
    <service id="aws.cloudsearch" class="Aws\CloudSearch\CloudSearchClient">
      <factory service="aws_sdk" method="createCloudSearch"/>
    </service>
    <service id="aws.cloudsearchdomain" class="Aws\CloudSearchDomain\CloudSearchDomainClient">
      <factory service="aws_sdk" method="createCloudSearchDomain"/>
    </service>
    <service id="aws.cloudtrail" class="Aws\CloudTrail\CloudTrailClient">
      <factory service="aws_sdk" method="createCloudTrail"/>
    </service>
    <service id="aws.codebuild" class="Aws\CodeBuild\CodeBuildClient">
      <factory service="aws_sdk" method="createCodeBuild"/>
    </service>
    <service id="aws.codecommit" class="Aws\CodeCommit\CodeCommitClient">
      <factory service="aws_sdk" method="createCodeCommit"/>
    </service>
    <service id="aws.codedeploy" class="Aws\CodeDeploy\CodeDeployClient">
      <factory service="aws_sdk" method="createCodeDeploy"/>
    </service>
    <service id="aws.codepipeline" class="Aws\CodePipeline\CodePipelineClient">
      <factory service="aws_sdk" method="createCodePipeline"/>
    </service>
    <service id="aws.codestar" class="Aws\CodeStar\CodeStarClient">
      <factory service="aws_sdk" method="createCodeStar"/>
    </service>
    <service id="aws.cognitoidentity" class="Aws\CognitoIdentity\CognitoIdentityClient">
      <factory service="aws_sdk" method="createCognitoIdentity"/>
    </service>
    <service id="aws.cognitoidentityprovider" class="Aws\CognitoIdentityProvider\CognitoIdentityProviderClient">
      <factory service="aws_sdk" method="createCognitoIdentityProvider"/>
    </service>
    <service id="aws.cognitosync" class="Aws\CognitoSync\CognitoSyncClient">
      <factory service="aws_sdk" method="createCognitoSync"/>
    </service>
    <service id="aws.comprehend" class="Aws\Comprehend\ComprehendClient">
      <factory service="aws_sdk" method="createComprehend"/>
    </service>
    <service id="aws.configservice" class="Aws\ConfigService\ConfigServiceClient">
      <factory service="aws_sdk" method="createConfigService"/>
    </service>
    <service id="aws.connect" class="Aws\Connect\ConnectClient">
      <factory service="aws_sdk" method="createConnect"/>
    </service>
    <service id="aws.costandusagereportservice" class="Aws\CostandUsageReportService\CostandUsageReportServiceClient">
      <factory service="aws_sdk" method="createCostandUsageReportService"/>
    </service>
    <service id="aws.iotdataplane" class="Aws\IotDataPlane\IotDataPlaneClient">
      <factory service="aws_sdk" method="createIotDataPlane"/>
    </service>
    <service id="aws.datapipeline" class="Aws\DataPipeline\DataPipelineClient">
      <factory service="aws_sdk" method="createDataPipeline"/>
    </service>
    <service id="aws.dax" class="Aws\DAX\DAXClient">
      <factory service="aws_sdk" method="createDAX"/>
    </service>
    <service id="aws.devicefarm" class="Aws\DeviceFarm\DeviceFarmClient">
      <factory service="aws_sdk" method="createDeviceFarm"/>
    </service>
    <service id="aws.directconnect" class="Aws\DirectConnect\DirectConnectClient">
      <factory service="aws_sdk" method="createDirectConnect"/>
    </service>
    <service id="aws.applicationdiscoveryservice" class="Aws\ApplicationDiscoveryService\ApplicationDiscoveryServiceClient">
      <factory service="aws_sdk" method="createApplicationDiscoveryService"/>
    </service>
    <service id="aws.databasemigrationservice" class="Aws\DatabaseMigrationService\DatabaseMigrationServiceClient">
      <factory service="aws_sdk" method="createDatabaseMigrationService"/>
    </service>
    <service id="aws.directoryservice" class="Aws\DirectoryService\DirectoryServiceClient">
      <factory service="aws_sdk" method="createDirectoryService"/>
    </service>
    <service id="aws.dynamodb" class="Aws\DynamoDb\DynamoDbClient">
      <factory service="aws_sdk" method="createDynamoDb"/>
    </service>
    <service id="aws.ec2" class="Aws\Ec2\Ec2Client">
      <factory service="aws_sdk" method="createEc2"/>
    </service>
    <service id="aws.ecr" class="Aws\Ecr\EcrClient">
      <factory service="aws_sdk" method="createEcr"/>
    </service>
    <service id="aws.ecs" class="Aws\Ecs\EcsClient">
      <factory service="aws_sdk" method="createEcs"/>
    </service>
    <service id="aws.elasticache" class="Aws\ElastiCache\ElastiCacheClient">
      <factory service="aws_sdk" method="createElastiCache"/>
    </service>
    <service id="aws.elasticbeanstalk" class="Aws\ElasticBeanstalk\ElasticBeanstalkClient">
      <factory service="aws_sdk" method="createElasticBeanstalk"/>
    </service>
    <service id="aws.efs" class="Aws\Efs\EfsClient">
      <factory service="aws_sdk" method="createEfs"/>
    </service>
    <service id="aws.elasticloadbalancing" class="Aws\ElasticLoadBalancing\ElasticLoadBalancingClient">
      <factory service="aws_sdk" method="createElasticLoadBalancing"/>
    </service>
    <service id="aws.elasticloadbalancingv2" class="Aws\ElasticLoadBalancingV2\ElasticLoadBalancingV2Client">
      <factory service="aws_sdk" method="createElasticLoadBalancingV2"/>
    </service>
    <service id="aws.emr" class="Aws\Emr\EmrClient">
      <factory service="aws_sdk" method="createEmr"/>
    </service>
    <service id="aws.elastictranscoder" class="Aws\ElasticTranscoder\ElasticTranscoderClient">
      <factory service="aws_sdk" method="createElasticTranscoder"/>
    </service>
    <service id="aws.ses" class="Aws\Ses\SesClient">
      <factory service="aws_sdk" method="createSes"/>
    </service>
    <service id="aws.marketplaceentitlementservice" class="Aws\MarketplaceEntitlementService\MarketplaceEntitlementServiceClient">
      <factory service="aws_sdk" method="createMarketplaceEntitlementService"/>
    </service>
    <service id="aws.elasticsearchservice" class="Aws\ElasticsearchService\ElasticsearchServiceClient">
      <factory service="aws_sdk" method="createElasticsearchService"/>
    </service>
    <service id="aws.cloudwatchevents" class="Aws\CloudWatchEvents\CloudWatchEventsClient">
      <factory service="aws_sdk" method="createCloudWatchEvents"/>
    </service>
    <service id="aws.firehose" class="Aws\Firehose\FirehoseClient">
      <factory service="aws_sdk" method="createFirehose"/>
    </service>
    <service id="aws.fms" class="Aws\FMS\FMSClient">
      <factory service="aws_sdk" method="createFMS"/>
    </service>
    <service id="aws.gamelift" class="Aws\GameLift\GameLiftClient">
      <factory service="aws_sdk" method="createGameLift"/>
    </service>
    <service id="aws.glacier" class="Aws\Glacier\GlacierClient">
      <factory service="aws_sdk" method="createGlacier"/>
    </service>
    <service id="aws.glue" class="Aws\Glue\GlueClient">
      <factory service="aws_sdk" method="createGlue"/>
    </service>
    <service id="aws.greengrass" class="Aws\Greengrass\GreengrassClient">
      <factory service="aws_sdk" method="createGreengrass"/>
    </service>
    <service id="aws.guardduty" class="Aws\GuardDuty\GuardDutyClient">
      <factory service="aws_sdk" method="createGuardDuty"/>
    </service>
    <service id="aws.health" class="Aws\Health\HealthClient">
      <factory service="aws_sdk" method="createHealth"/>
    </service>
    <service id="aws.iam" class="Aws\Iam\IamClient">
      <factory service="aws_sdk" method="createIam"/>
    </service>
    <service id="aws.importexport" class="Aws\ImportExport\ImportExportClient">
      <factory service="aws_sdk" method="createImportExport"/>
    </service>
    <service id="aws.inspector" class="Aws\Inspector\InspectorClient">
      <factory service="aws_sdk" method="createInspector"/>
    </service>
    <service id="aws.iotjobsdataplane" class="Aws\IoTJobsDataPlane\IoTJobsDataPlaneClient">
      <factory service="aws_sdk" method="createIoTJobsDataPlane"/>
    </service>
    <service id="aws.iot" class="Aws\Iot\IotClient">
      <factory service="aws_sdk" method="createIot"/>
    </service>
    <service id="aws.iotanalytics" class="Aws\IoTAnalytics\IoTAnalyticsClient">
      <factory service="aws_sdk" method="createIoTAnalytics"/>
    </service>
    <service id="aws.kinesisvideoarchivedmedia" class="Aws\KinesisVideoArchivedMedia\KinesisVideoArchivedMediaClient">
      <factory service="aws_sdk" method="createKinesisVideoArchivedMedia"/>
    </service>
    <service id="aws.kinesisvideomedia" class="Aws\KinesisVideoMedia\KinesisVideoMediaClient">
      <factory service="aws_sdk" method="createKinesisVideoMedia"/>
    </service>
    <service id="aws.kinesis" class="Aws\Kinesis\KinesisClient">
      <factory service="aws_sdk" method="createKinesis"/>
    </service>
    <service id="aws.kinesisanalytics" class="Aws\KinesisAnalytics\KinesisAnalyticsClient">
      <factory service="aws_sdk" method="createKinesisAnalytics"/>
    </service>
    <service id="aws.kinesisvideo" class="Aws\KinesisVideo\KinesisVideoClient">
      <factory service="aws_sdk" method="createKinesisVideo"/>
    </service>
    <service id="aws.kms" class="Aws\Kms\KmsClient">
      <factory service="aws_sdk" method="createKms"/>
    </service>
    <service id="aws.lambda" class="Aws\Lambda\LambdaClient">
      <factory service="aws_sdk" method="createLambda"/>
    </service>
    <service id="aws.lexmodelbuildingservice" class="Aws\LexModelBuildingService\LexModelBuildingServiceClient">
      <factory service="aws_sdk" method="createLexModelBuildingService"/>
    </service>
    <service id="aws.lightsail" class="Aws\Lightsail\LightsailClient">
      <factory service="aws_sdk" method="createLightsail"/>
    </service>
    <service id="aws.cloudwatchlogs" class="Aws\CloudWatchLogs\CloudWatchLogsClient">
      <factory service="aws_sdk" method="createCloudWatchLogs"/>
    </service>
    <service id="aws.machinelearning" class="Aws\MachineLearning\MachineLearningClient">
      <factory service="aws_sdk" method="createMachineLearning"/>
    </service>
    <service id="aws.marketplacecommerceanalytics" class="Aws\MarketplaceCommerceAnalytics\MarketplaceCommerceAnalyticsClient">
      <factory service="aws_sdk" method="createMarketplaceCommerceAnalytics"/>
    </service>
    <service id="aws.mediaconvert" class="Aws\MediaConvert\MediaConvertClient">
      <factory service="aws_sdk" method="createMediaConvert"/>
    </service>
    <service id="aws.medialive" class="Aws\MediaLive\MediaLiveClient">
      <factory service="aws_sdk" method="createMediaLive"/>
    </service>
    <service id="aws.mediapackage" class="Aws\MediaPackage\MediaPackageClient">
      <factory service="aws_sdk" method="createMediaPackage"/>
    </service>
    <service id="aws.mediastoredata" class="Aws\MediaStoreData\MediaStoreDataClient">
      <factory service="aws_sdk" method="createMediaStoreData"/>
    </service>
    <service id="aws.mediastore" class="Aws\MediaStore\MediaStoreClient">
      <factory service="aws_sdk" method="createMediaStore"/>
    </service>
    <service id="aws.marketplacemetering" class="Aws\MarketplaceMetering\MarketplaceMeteringClient">
      <factory service="aws_sdk" method="createMarketplaceMetering"/>
    </service>
    <service id="aws.migrationhub" class="Aws\MigrationHub\MigrationHubClient">
      <factory service="aws_sdk" method="createMigrationHub"/>
    </service>
    <service id="aws.mobile" class="Aws\Mobile\MobileClient">
      <factory service="aws_sdk" method="createMobile"/>
    </service>
    <service id="aws.cloudwatch" class="Aws\CloudWatch\CloudWatchClient">
      <factory service="aws_sdk" method="createCloudWatch"/>
    </service>
    <service id="aws.mq" class="Aws\MQ\MQClient">
      <factory service="aws_sdk" method="createMQ"/>
    </service>
    <service id="aws.mturk" class="Aws\MTurk\MTurkClient">
      <factory service="aws_sdk" method="createMTurk"/>
    </service>
    <service id="aws.opsworks" class="Aws\OpsWorks\OpsWorksClient">
      <factory service="aws_sdk" method="createOpsWorks"/>
    </service>
    <service id="aws.opsworkscm" class="Aws\OpsWorksCM\OpsWorksCMClient">
      <factory service="aws_sdk" method="createOpsWorksCM"/>
    </service>
    <service id="aws.organizations" class="Aws\Organizations\OrganizationsClient">
      <factory service="aws_sdk" method="createOrganizations"/>
    </service>
    <service id="aws.pinpoint" class="Aws\Pinpoint\PinpointClient">
      <factory service="aws_sdk" method="createPinpoint"/>
    </service>
    <service id="aws.polly" class="Aws\Polly\PollyClient">
      <factory service="aws_sdk" method="createPolly"/>
    </service>
    <service id="aws.pricing" class="Aws\Pricing\PricingClient">
      <factory service="aws_sdk" method="createPricing"/>
    </service>
    <service id="aws.rds" class="Aws\Rds\RdsClient">
      <factory service="aws_sdk" method="createRds"/>
    </service>
    <service id="aws.redshift" class="Aws\Redshift\RedshiftClient">
      <factory service="aws_sdk" method="createRedshift"/>
    </service>
    <service id="aws.rekognition" class="Aws\Rekognition\RekognitionClient">
      <factory service="aws_sdk" method="createRekognition"/>
    </service>
    <service id="aws.resourcegroups" class="Aws\ResourceGroups\ResourceGroupsClient">
      <factory service="aws_sdk" method="createResourceGroups"/>
    </service>
    <service id="aws.resourcegroupstaggingapi" class="Aws\ResourceGroupsTaggingAPI\ResourceGroupsTaggingAPIClient">
      <factory service="aws_sdk" method="createResourceGroupsTaggingAPI"/>
    </service>
    <service id="aws.route53" class="Aws\Route53\Route53Client">
      <factory service="aws_sdk" method="createRoute53"/>
    </service>
    <service id="aws.route53domains" class="Aws\Route53Domains\Route53DomainsClient">
      <factory service="aws_sdk" method="createRoute53Domains"/>
    </service>
    <service id="aws.lexruntimeservice" class="Aws\LexRuntimeService\LexRuntimeServiceClient">
      <factory service="aws_sdk" method="createLexRuntimeService"/>
    </service>
    <service id="aws.sagemakerruntime" class="Aws\SageMakerRuntime\SageMakerRuntimeClient">
      <factory service="aws_sdk" method="createSageMakerRuntime"/>
    </service>
    <service id="aws.s3" class="Aws\S3\S3Client">
      <factory service="aws_sdk" method="createS3"/>
    </service>
    <service id="aws.sagemaker" class="Aws\SageMaker\SageMakerClient">
      <factory service="aws_sdk" method="createSageMaker"/>
    </service>
    <service id="aws.secretsmanager" class="Aws\SecretsManager\SecretsManagerClient">
      <factory service="aws_sdk" method="createSecretsManager"/>
    </service>
    <service id="aws.serverlessapplicationrepository" class="Aws\ServerlessApplicationRepository\ServerlessApplicationRepositoryClient">
      <factory service="aws_sdk" method="createServerlessApplicationRepository"/>
    </service>
    <service id="aws.servicecatalog" class="Aws\ServiceCatalog\ServiceCatalogClient">
      <factory service="aws_sdk" method="createServiceCatalog"/>
    </service>
    <service id="aws.servicediscovery" class="Aws\ServiceDiscovery\ServiceDiscoveryClient">
      <factory service="aws_sdk" method="createServiceDiscovery"/>
    </service>
    <service id="aws.shield" class="Aws\Shield\ShieldClient">
      <factory service="aws_sdk" method="createShield"/>
    </service>
    <service id="aws.sms" class="Aws\Sms\SmsClient">
      <factory service="aws_sdk" method="createSms"/>
    </service>
    <service id="aws.snowball" class="Aws\SnowBall\SnowBallClient">
      <factory service="aws_sdk" method="createSnowBall"/>
    </service>
    <service id="aws.sns" class="Aws\Sns\SnsClient">
      <factory service="aws_sdk" method="createSns"/>
    </service>
    <service id="aws.sqs" class="Aws\Sqs\SqsClient">
      <factory service="aws_sdk" method="createSqs"/>
    </service>
    <service id="aws.ssm" class="Aws\Ssm\SsmClient">
      <factory service="aws_sdk" method="createSsm"/>
    </service>
    <service id="aws.sfn" class="Aws\Sfn\SfnClient">
      <factory service="aws_sdk" method="createSfn"/>
    </service>
    <service id="aws.storagegateway" class="Aws\StorageGateway\StorageGatewayClient">
      <factory service="aws_sdk" method="createStorageGateway"/>
    </service>
    <service id="aws.dynamodbstreams" class="Aws\DynamoDbStreams\DynamoDbStreamsClient">
      <factory service="aws_sdk" method="createDynamoDbStreams"/>
    </service>
    <service id="aws.sts" class="Aws\Sts\StsClient">
      <factory service="aws_sdk" method="createSts"/>
    </service>
    <service id="aws.support" class="Aws\Support\SupportClient">
      <factory service="aws_sdk" method="createSupport"/>
    </service>
    <service id="aws.swf" class="Aws\Swf\SwfClient">
      <factory service="aws_sdk" method="createSwf"/>
    </service>
    <service id="aws.transcribeservice" class="Aws\TranscribeService\TranscribeServiceClient">
      <factory service="aws_sdk" method="createTranscribeService"/>
    </service>
    <service id="aws.translate" class="Aws\Translate\TranslateClient">
      <factory service="aws_sdk" method="createTranslate"/>
    </service>
    <service id="aws.wafregional" class="Aws\WafRegional\WafRegionalClient">
      <factory service="aws_sdk" method="createWafRegional"/>
    </service>
    <service id="aws.waf" class="Aws\Waf\WafClient">
      <factory service="aws_sdk" method="createWaf"/>
    </service>
    <service id="aws.workdocs" class="Aws\WorkDocs\WorkDocsClient">
      <factory service="aws_sdk" method="createWorkDocs"/>
    </service>
    <service id="aws.workmail" class="Aws\WorkMail\WorkMailClient">
      <factory service="aws_sdk" method="createWorkMail"/>
    </service>
    <service id="aws.workspaces" class="Aws\WorkSpaces\WorkSpacesClient">
      <factory service="aws_sdk" method="createWorkSpaces"/>
    </service>
    <service id="aws.xray" class="Aws\XRay\XRayClient">
      <factory service="aws_sdk" method="createXRay"/>
    </service>
    <service id="monolog.logger" class="Symfony\Bridge\Monolog\Logger" public="false">
      <argument>app</argument>
      <call method="useMicrosecondTimestamps">
        <argument>true</argument>
      </call>
      <call method="pushHandler">
        <argument type="service" id="cloudwatch_handler"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.container_logs"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.app"/>
      </call>
    </service>
    <service id="monolog.logger_prototype" class="Symfony\Bridge\Monolog\Logger" abstract="true">
      <argument></argument>
    </service>
    <service id="monolog.activation_strategy.not_found" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy" abstract="true"/>
    <service id="monolog.handler.fingers_crossed.error_level_activation_strategy" class="Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy" abstract="true"/>
    <service id="monolog.formatter.chrome_php" class="Monolog\Formatter\ChromePHPFormatter" public="false"/>
    <service id="monolog.formatter.gelf_message" class="Monolog\Formatter\GelfMessageFormatter" public="false"/>
    <service id="monolog.formatter.html" class="Monolog\Formatter\HtmlFormatter" public="false"/>
    <service id="monolog.formatter.json" class="Monolog\Formatter\JsonFormatter" public="false"/>
    <service id="monolog.formatter.line" class="Monolog\Formatter\LineFormatter" public="false"/>
    <service id="monolog.formatter.loggly" class="Monolog\Formatter\LogglyFormatter" public="false"/>
    <service id="monolog.formatter.normalizer" class="Monolog\Formatter\NormalizerFormatter" public="false"/>
    <service id="monolog.formatter.scalar" class="Monolog\Formatter\ScalarFormatter" public="false"/>
    <service id="monolog.formatter.wildfire" class="Monolog\Formatter\WildfireFormatter" public="false"/>
    <service id="monolog.formatter.logstash" class="Monolog\Formatter\LogstashFormatter" public="false">
      <argument>app</argument>
    </service>
    <service id="monolog.processor.psr_log_message" class="Monolog\Processor\PsrLogMessageProcessor" public="false"/>
    <service id="monolog.handler.app" class="Monolog\Handler\StreamHandler">
      <argument>/data/personal/docker-app/var/log/oncloudtime-prod.log</argument>
      <argument>200</argument>
      <argument>true</argument>
      <argument>null</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.main.not_found_strategy" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy">
      <argument type="service" id="request_stack"/>
      <argument type="collection">
        <argument>^/</argument>
      </argument>
      <argument>200</argument>
    </service>
    <service id="monolog.handler.main" class="Monolog\Handler\FingersCrossedHandler">
      <argument type="service" id="monolog.handler.nested"/>
      <argument type="service" id="monolog.handler.main.not_found_strategy"/>
      <argument>0</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>null</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.nested" class="Monolog\Handler\StreamHandler">
      <argument>/data/personal/docker-app/var/log/prod.log</argument>
      <argument>200</argument>
      <argument>true</argument>
      <argument>null</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.container_logs" class="Monolog\Handler\StreamHandler">
      <argument>php://stderr</argument>
      <argument>200</argument>
      <argument>true</argument>
      <argument>null</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.console" class="Symfony\Bridge\Monolog\Handler\ConsoleHandler">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument>true</argument>
      <argument type="collection"/>
    </service>
    <service id="liip_monitor.helper.raw_console_reporter" class="Liip\MonitorBundle\Helper\RawConsoleReporter" public="true"/>
    <service id="liip_monitor.helper.console_reporter" class="Liip\MonitorBundle\Helper\ConsoleReporter" public="true"/>
    <service id="liip_monitor.helper.runner_manager" class="Liip\MonitorBundle\Helper\RunnerManager" public="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="liip_monitor.health_check.command" class="Liip\MonitorBundle\Command\HealthCheckCommand" public="true">
      <tag name="console.command" command="monitor:health"/>
      <argument type="service" id="liip_monitor.helper.console_reporter"/>
      <argument type="service" id="liip_monitor.helper.raw_console_reporter"/>
      <argument type="service" id="liip_monitor.helper.runner_manager"/>
      <call method="setName">
        <argument>monitor:health</argument>
      </call>
    </service>
    <service id="liip_monitor.list_checks.command" class="Liip\MonitorBundle\Command\ListChecksCommand" public="true">
      <tag name="console.command" command="monitor:list"/>
      <argument type="service" id="liip_monitor.helper.runner_manager"/>
      <argument type="service" id="liip_monitor.runner_default"/>
      <call method="setName">
        <argument>monitor:list</argument>
      </call>
    </service>
    <service id="liip_monitor.helper" class="Liip\MonitorBundle\Helper\PathHelper" public="true">
      <argument type="service" id="assets.packages"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="liip_monitor.health_controller" class="Liip\MonitorBundle\Controller\HealthCheckController" public="true">
      <argument type="service" id="liip_monitor.helper.runner_manager"/>
      <argument type="service" id="liip_monitor.helper"/>
      <argument>/data/personal/docker-app/vendor/liip/monitor-bundle/DependencyInjection/../Resources/views/health/index.html.php</argument>
    </service>
    <service id=".instanceof.Twig_ExtensionInterface.0.Twig\Extensions\TextExtension" class="Twig\Extensions\TextExtension" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Twig\Extensions\TextExtension" class="Twig\Extensions\TextExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Twig\Extensions\TextExtension" class="Twig\Extensions\TextExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\AccountController" class="App\Controller\AccountController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\AccountController" class="App\Controller\AccountController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\AppConfigurationController" class="App\Controller\AppConfigurationController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\AppConfigurationController" class="App\Controller\AppConfigurationController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\BaseController" class="App\Controller\BaseController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\BaseController" class="App\Controller\BaseController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\ConversionController" class="App\Controller\ConversionController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\ConversionController" class="App\Controller\ConversionController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\DefaultController" class="App\Controller\DefaultController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\DefaultController" class="App\Controller\DefaultController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\FileUploadController" class="App\Controller\FileUploadController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\FileUploadController" class="App\Controller\FileUploadController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\FileWatcherController" class="App\Controller\FileWatcherController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\FileWatcherController" class="App\Controller\FileWatcherController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\HadoopStatusController" class="App\Controller\HadoopStatusController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\HadoopStatusController" class="App\Controller\HadoopStatusController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\MPPStatusController" class="App\Controller\MPPStatusController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\MPPStatusController" class="App\Controller\MPPStatusController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\NexusController" class="App\Controller\NexusController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\NexusController" class="App\Controller\NexusController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\NotificationController" class="App\Controller\NotificationController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\NotificationController" class="App\Controller\NotificationController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\ProjectAssignmentController" class="App\Controller\ProjectAssignmentController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\ProjectAssignmentController" class="App\Controller\ProjectAssignmentController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\ProjectController" class="App\Controller\ProjectController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\ProjectController" class="App\Controller\ProjectController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\ProjectRateController" class="App\Controller\ProjectRateController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\ProjectRateController" class="App\Controller\ProjectRateController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\QueryController" class="App\Controller\QueryController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\QueryController" class="App\Controller\QueryController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\SimulationController" class="App\Controller\SimulationController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\SimulationController" class="App\Controller\SimulationController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\SqsController" class="App\Controller\SqsController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\SqsController" class="App\Controller\SqsController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\TableController" class="App\Controller\TableController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\TableController" class="App\Controller\TableController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\TaskCategoryController" class="App\Controller\TaskCategoryController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\TaskCategoryController" class="App\Controller\TaskCategoryController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\TaskController" class="App\Controller\TaskController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\TaskController" class="App\Controller\TaskController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\TaskQueueController" class="App\Controller\TaskQueueController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\TaskQueueController" class="App\Controller\TaskQueueController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\TaskTemplateController" class="App\Controller\TaskTemplateController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\TaskTemplateController" class="App\Controller\TaskTemplateController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\TemplateController" class="App\Controller\TemplateController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\TemplateController" class="App\Controller\TemplateController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\TimesheetController" class="App\Controller\TimesheetController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\TimesheetController" class="App\Controller\TimesheetController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\User\AppUserController" class="App\Controller\User\AppUserController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\User\AppUserController" class="App\Controller\User\AppUserController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.App\Controller\User\ProfileController" class="App\Controller\User\ProfileController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\User\ProfileController" class="App\Controller\User\ProfileController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\FileWatcherType" class="App\Form\FileWatcherType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\FileWatcherType" class="App\Form\FileWatcherType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\LookupValuesType" class="App\Form\LookupValuesType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\LookupValuesType" class="App\Form\LookupValuesType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\NexusAnalysisType" class="App\Form\NexusAnalysisType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\NexusAnalysisType" class="App\Form\NexusAnalysisType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ProjectAssignmentType" class="App\Form\ProjectAssignmentType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ProjectAssignmentType" class="App\Form\ProjectAssignmentType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ProjectRateType" class="App\Form\ProjectRateType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ProjectRateType" class="App\Form\ProjectRateType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ProjectType" class="App\Form\ProjectType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ProjectType" class="App\Form\ProjectType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\QueryType" class="App\Form\QueryType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\QueryType" class="App\Form\QueryType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\TaskCategoryType" class="App\Form\TaskCategoryType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\TaskCategoryType" class="App\Form\TaskCategoryType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\TaskQueueType" class="App\Form\TaskQueueType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\TaskQueueType" class="App\Form\TaskQueueType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\TaskTemplateDetailType" class="App\Form\TaskTemplateDetailType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\TaskTemplateDetailType" class="App\Form\TaskTemplateDetailType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\TaskType" class="App\Form\TaskType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\TaskType" class="App\Form\TaskType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\TemplateType" class="App\Form\TemplateType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\TemplateType" class="App\Form\TemplateType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\User\ForgotPasswordType" class="App\Form\User\ForgotPasswordType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\User\ForgotPasswordType" class="App\Form\User\ForgotPasswordType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\User\LoginType" class="App\Form\User\LoginType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\User\LoginType" class="App\Form\User\LoginType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\User\ResetPasswordType" class="App\Form\User\ResetPasswordType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\User\ResetPasswordType" class="App\Form\User\ResetPasswordType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\AccountRepository" class="App\Repository\AccountRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\AccountRepository" class="App\Repository\AccountRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\AppUserRepository" class="App\Repository\AppUserRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\AppUserRepository" class="App\Repository\AppUserRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ConversionRepository" class="App\Repository\ConversionRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ConversionRepository" class="App\Repository\ConversionRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\CustomReportRepository" class="App\Repository\CustomReportRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\CustomReportRepository" class="App\Repository\CustomReportRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\EmployeeRelationshipRepository" class="App\Repository\EmployeeRelationshipRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\EmployeeRelationshipRepository" class="App\Repository\EmployeeRelationshipRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\EmployeeRepository" class="App\Repository\EmployeeRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\EmployeeRepository" class="App\Repository\EmployeeRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\FileUploadRepository" class="App\Repository\FileUploadRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\FileUploadRepository" class="App\Repository\FileUploadRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\FileWatcherRepository" class="App\Repository\FileWatcherRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\FileWatcherRepository" class="App\Repository\FileWatcherRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\HadoopStatusRepository" class="App\Repository\HadoopStatusRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\HadoopStatusRepository" class="App\Repository\HadoopStatusRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\MPPStatusRepository" class="App\Repository\MPPStatusRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\MPPStatusRepository" class="App\Repository\MPPStatusRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\NotificationRepository" class="App\Repository\NotificationRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\NotificationRepository" class="App\Repository\NotificationRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ProjectAssignmentRepository" class="App\Repository\ProjectAssignmentRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ProjectAssignmentRepository" class="App\Repository\ProjectAssignmentRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ProjectRateRepository" class="App\Repository\ProjectRateRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ProjectRateRepository" class="App\Repository\ProjectRateRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ProjectRepository" class="App\Repository\ProjectRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ProjectRepository" class="App\Repository\ProjectRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\SimulationRepository" class="App\Repository\SimulationRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\SimulationRepository" class="App\Repository\SimulationRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\StateGuideRepository" class="App\Repository\StateGuideRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\StateGuideRepository" class="App\Repository\StateGuideRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\TaskCategoryRepository" class="App\Repository\TaskCategoryRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\TaskCategoryRepository" class="App\Repository\TaskCategoryRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\TaskQueueRepository" class="App\Repository\TaskQueueRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\TaskQueueRepository" class="App\Repository\TaskQueueRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\TaskRepository" class="App\Repository\TaskRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\TaskRepository" class="App\Repository\TaskRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\TaskTemplateRepository" class="App\Repository\TaskTemplateRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\TaskTemplateRepository" class="App\Repository\TaskTemplateRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\TemplateRepository" class="App\Repository\TemplateRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\TemplateRepository" class="App\Repository\TemplateRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\TimesheetDetailRepository" class="App\Repository\TimesheetDetailRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\TimesheetDetailRepository" class="App\Repository\TimesheetDetailRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\TimesheetRepository" class="App\Repository\TimesheetRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\TimesheetRepository" class="App\Repository\TimesheetRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig_ExtensionInterface.0.App\Twig\OncloudTimeTwigExtension" class="App\Twig\OncloudTimeTwigExtension" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.App\Twig\OncloudTimeTwigExtension" class="App\Twig\OncloudTimeTwigExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Twig\OncloudTimeTwigExtension" class="App\Twig\OncloudTimeTwigExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.MsgPhp\User\Infra\Console\Command\AddUserRoleCommand" class="MsgPhp\User\Infra\Console\Command\AddUserRoleCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.MsgPhp\User\Infra\Console\Command\AddUserRoleCommand" class="MsgPhp\User\Infra\Console\Command\AddUserRoleCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.MsgPhp\User\Infra\Console\Command\ChangeUserCredentialCommand" class="MsgPhp\User\Infra\Console\Command\ChangeUserCredentialCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.MsgPhp\User\Infra\Console\Command\ChangeUserCredentialCommand" class="MsgPhp\User\Infra\Console\Command\ChangeUserCredentialCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.MsgPhp\User\Infra\Console\Command\CreateUserCommand" class="MsgPhp\User\Infra\Console\Command\CreateUserCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.MsgPhp\User\Infra\Console\Command\CreateUserCommand" class="MsgPhp\User\Infra\Console\Command\CreateUserCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.MsgPhp\User\Infra\Console\Command\DeleteUserCommand" class="MsgPhp\User\Infra\Console\Command\DeleteUserCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.MsgPhp\User\Infra\Console\Command\DeleteUserCommand" class="MsgPhp\User\Infra\Console\Command\DeleteUserCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.MsgPhp\User\Infra\Console\Command\DeleteUserRoleCommand" class="MsgPhp\User\Infra\Console\Command\DeleteUserRoleCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.MsgPhp\User\Infra\Console\Command\DeleteUserRoleCommand" class="MsgPhp\User\Infra\Console\Command\DeleteUserRoleCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.MsgPhp\User\Infra\Form\Type\HashedPasswordType" class="MsgPhp\User\Infra\Form\Type\HashedPasswordType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.MsgPhp\User\Infra\Form\Type\HashedPasswordType" class="MsgPhp\User\Infra\Form\Type\HashedPasswordType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.MsgPhp\User\Infra\Validator\ExistingUsernameValidator" class="MsgPhp\User\Infra\Validator\ExistingUsernameValidator" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.MsgPhp\User\Infra\Validator\ExistingUsernameValidator" class="MsgPhp\User\Infra\Validator\ExistingUsernameValidator" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.MsgPhp\User\Infra\Validator\UniqueUsernameValidator" class="MsgPhp\User\Infra\Validator\UniqueUsernameValidator" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.MsgPhp\User\Infra\Validator\UniqueUsernameValidator" class="MsgPhp\User\Infra\Validator\UniqueUsernameValidator" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\DependencyInjection\ServiceSubscriberInterface.0.MsgPhp\UserBundle\Twig\GlobalVariable" class="MsgPhp\UserBundle\Twig\GlobalVariable" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.MsgPhp\UserBundle\Twig\GlobalVariable" class="MsgPhp\UserBundle\Twig\GlobalVariable" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".service_locator.gd3_ogo" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="accountRepository" type="service" id="App\Repository\AccountRepository"/>
        <argument key="queue" type="service" id="aws.sqs"/>
      </argument>
    </service>
    <service id=".service_locator.vC9OS3x" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="accountRepository" type="service" id="App\Repository\AccountRepository"/>
      </argument>
    </service>
    <service id=".service_locator.CThpHJr" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="athena" type="service" id="aws.athena"/>
      </argument>
    </service>
    <service id=".service_locator.5WkfBZ0" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id=".service_locator.6PfOHK8" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="conversionRepository" type="service" id="App\Repository\ConversionRepository"/>
      </argument>
    </service>
    <service id=".service_locator.pZ3G49N" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="conversionRepository" type="service" id="App\Repository\ConversionRepository"/>
        <argument key="queue" type="service" id="aws.sqs"/>
      </argument>
    </service>
    <service id=".service_locator.Bp1iBfv" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="templateRepository" type="service" id="App\Repository\TemplateRepository"/>
      </argument>
    </service>
    <service id=".service_locator.89z_4OU" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="fileUploadRepository" type="service" id="App\Repository\FileUploadRepository"/>
        <argument key="templateRepository" type="service" id="App\Repository\TemplateRepository"/>
      </argument>
    </service>
    <service id=".service_locator.84oRSq2" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cache" type="service" id="cache.app"/>
        <argument key="fileUploadRepository" type="service" id="App\Repository\FileUploadRepository"/>
        <argument key="sqsClient" type="service" id="aws.sqs"/>
        <argument key="templateRepository" type="service" id="App\Repository\TemplateRepository"/>
        <argument key="userRepository" type="service" id="App\Repository\AppUserRepository"/>
      </argument>
    </service>
    <service id=".service_locator.FFDan3b" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="fileUploadRepository" type="service" id="App\Repository\FileUploadRepository"/>
        <argument key="sqsClient" type="service" id="aws.sqs"/>
        <argument key="templateRepository" type="service" id="App\Repository\TemplateRepository"/>
      </argument>
    </service>
    <service id=".service_locator.ri73nW3" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="filewatcherRepository" type="service" id="App\Repository\FileWatcherRepository"/>
      </argument>
    </service>
    <service id=".service_locator.GK6npg9" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="filewatcherRepository" type="service" id="App\Repository\FileWatcherRepository"/>
        <argument key="queue" type="service" id="aws.sqs"/>
      </argument>
    </service>
    <service id=".service_locator.JskFAf1" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="fileWatcherRepository" type="service" id="App\Repository\FileWatcherRepository"/>
        <argument key="logger" type="service" id="monolog.logger"/>
        <argument key="queue" type="service" id="aws.sqs"/>
      </argument>
    </service>
    <service id=".service_locator.w3hd3Bt" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="hadoopStatusRepository" type="service" id="App\Repository\HadoopStatusRepository"/>
        <argument key="queue" type="service" id="aws.sqs"/>
      </argument>
    </service>
    <service id=".service_locator.LAGdPau" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="hadoopStatusRepository" type="service" id="App\Repository\HadoopStatusRepository"/>
      </argument>
    </service>
    <service id=".service_locator._YeZNPD" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="hadoopStatusRepository" type="service" id="App\Repository\HadoopStatusRepository"/>
        <argument key="logger" type="service" id="monolog.logger"/>
        <argument key="queue" type="service" id="aws.sqs"/>
      </argument>
    </service>
    <service id=".service_locator.6Y4E3LA" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="mppStatusRepository" type="service" id="App\Repository\MPPStatusRepository"/>
        <argument key="queue" type="service" id="aws.sqs"/>
      </argument>
    </service>
    <service id=".service_locator.IYdRsdu" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="mppStatusRepository" type="service" id="App\Repository\MPPStatusRepository"/>
      </argument>
    </service>
    <service id=".service_locator.N_Kn.CN" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="logger" type="service" id="monolog.logger"/>
        <argument key="mppStatusRepository" type="service" id="App\Repository\MPPStatusRepository"/>
        <argument key="queue" type="service" id="aws.sqs"/>
      </argument>
    </service>
    <service id=".service_locator.l6BODW6" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cache" type="service" id="cache.app"/>
        <argument key="templateRepository" type="service" id="App\Repository\TemplateRepository"/>
      </argument>
    </service>
    <service id=".service_locator.wuQfapA" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="queue" type="service" id="aws.sqs"/>
        <argument key="stateGuideRepository" type="service" id="App\Repository\StateGuideRepository"/>
      </argument>
    </service>
    <service id=".service_locator.Mg3IsZj" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="stateGuideRepository" type="service" id="App\Repository\StateGuideRepository"/>
      </argument>
    </service>
    <service id=".service_locator.6f1a_D2" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="queue" type="service" id="aws.sqs"/>
        <argument key="templateRepository" type="service" id="App\Repository\TemplateRepository"/>
      </argument>
    </service>
    <service id=".service_locator.r66G1pO" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="notificationRepository" type="service" id="App\Repository\NotificationRepository"/>
      </argument>
    </service>
    <service id=".service_locator.rwqCNMm" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="projectAssignmentRepository" type="service" id="App\Repository\ProjectAssignmentRepository"/>
      </argument>
    </service>
    <service id=".service_locator.s1Db8OC" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="appUserRepository" type="service" id="App\Repository\AppUserRepository"/>
        <argument key="projectAssignmentRepository" type="service" id="App\Repository\ProjectAssignmentRepository"/>
        <argument key="projectRepository" type="service" id="App\Repository\ProjectRepository"/>
      </argument>
    </service>
    <service id=".service_locator.zwru4VC" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="projectAssignmentRepository" type="service" id="App\Repository\ProjectAssignmentRepository"/>
        <argument key="queue" type="service" id="aws.sqs"/>
      </argument>
    </service>
    <service id=".service_locator.L25Z_H9" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="projectRepository" type="service" id="App\Repository\ProjectRepository"/>
      </argument>
    </service>
    <service id=".service_locator.fz.EosS" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="projectRepository" type="service" id="App\Repository\ProjectRepository"/>
        <argument key="queue" type="service" id="aws.sqs"/>
      </argument>
    </service>
    <service id=".service_locator.dobcXP3" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="projectrateRepository" type="service" id="App\Repository\ProjectRateRepository"/>
      </argument>
    </service>
    <service id=".service_locator.OqRGJ15" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="projectAssignmentRepository" type="service" id="App\Repository\ProjectAssignmentRepository"/>
        <argument key="projectrateRepository" type="service" id="App\Repository\ProjectRateRepository"/>
      </argument>
    </service>
    <service id=".service_locator.XbrQYuN" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="projectrateRepository" type="service" id="App\Repository\ProjectRateRepository"/>
        <argument key="queue" type="service" id="aws.sqs"/>
      </argument>
    </service>
    <service id=".service_locator.lQH_o_L" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="customReportRepository" type="service" id="App\Repository\CustomReportRepository"/>
      </argument>
    </service>
    <service id=".service_locator.Yl3nNM2" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="customReportRepository" type="service" id="App\Repository\CustomReportRepository"/>
        <argument key="queue" type="service" id="aws.sqs"/>
      </argument>
    </service>
    <service id=".service_locator.ldAMdQU" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="customReportRepository" type="service" id="App\Repository\CustomReportRepository"/>
        <argument key="logger" type="service" id="monolog.logger"/>
        <argument key="queue" type="service" id="aws.sqs"/>
      </argument>
    </service>
    <service id=".service_locator.pbTBJz7" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="simulationRepository" type="service" id="App\Repository\SimulationRepository"/>
      </argument>
    </service>
    <service id=".service_locator.R9YCdUY" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="queue" type="service" id="aws.sqs"/>
        <argument key="simulationRepository" type="service" id="App\Repository\SimulationRepository"/>
      </argument>
    </service>
    <service id=".service_locator.8KsR2PR" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="logger" type="service" id="monolog.logger"/>
        <argument key="queue" type="service" id="aws.sqs"/>
        <argument key="simulationRepository" type="service" id="App\Repository\SimulationRepository"/>
      </argument>
    </service>
    <service id=".service_locator.Drz357h" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="queue" type="service" id="aws.sqs"/>
      </argument>
    </service>
    <service id=".service_locator.a5iTCPh" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="s3Client" type="service" id="aws.s3"/>
        <argument key="templateRepository" type="service" id="App\Repository\TemplateRepository"/>
      </argument>
    </service>
    <service id=".service_locator.saCr6.k" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="taskcategoryRepository" type="service" id="App\Repository\TaskCategoryRepository"/>
      </argument>
    </service>
    <service id=".service_locator.eKnBq_t" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="projectAssignmentRepository" type="service" id="App\Repository\ProjectAssignmentRepository"/>
        <argument key="taskcategoryRepository" type="service" id="App\Repository\TaskCategoryRepository"/>
      </argument>
    </service>
    <service id=".service_locator.1z.nMr2" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="queue" type="service" id="aws.sqs"/>
        <argument key="taskcategoryRepository" type="service" id="App\Repository\TaskCategoryRepository"/>
      </argument>
    </service>
    <service id=".service_locator.a3Zzgn6" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="taskRepository" type="service" id="App\Repository\TaskRepository"/>
      </argument>
    </service>
    <service id=".service_locator.AAu6m1b" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="projectAssignmentRepository" type="service" id="App\Repository\ProjectAssignmentRepository"/>
        <argument key="taskRepository" type="service" id="App\Repository\TaskRepository"/>
      </argument>
    </service>
    <service id=".service_locator.GT6TtVA" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="queue" type="service" id="aws.sqs"/>
        <argument key="taskRepository" type="service" id="App\Repository\TaskRepository"/>
      </argument>
    </service>
    <service id=".service_locator.ic.uFpj" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="taskAssignmentRepository" type="service" id="App\Repository\ProjectAssignmentRepository"/>
        <argument key="taskqueueRepository" type="service" id="App\Repository\TaskQueueRepository"/>
      </argument>
    </service>
    <service id=".service_locator.iVGcq9E" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="taskqueueRepository" type="service" id="App\Repository\TaskQueueRepository"/>
      </argument>
    </service>
    <service id=".service_locator.j0fGf3o" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="queue" type="service" id="aws.sqs"/>
        <argument key="taskqueueRepository" type="service" id="App\Repository\TaskQueueRepository"/>
      </argument>
    </service>
    <service id=".service_locator.9r3udEI" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="tasktemplateRepository" type="service" id="App\Repository\TaskTemplateRepository"/>
      </argument>
    </service>
    <service id=".service_locator.zMAyeEI" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="queue" type="service" id="aws.sqs"/>
        <argument key="tasktemplateRepository" type="service" id="App\Repository\TaskTemplateRepository"/>
      </argument>
    </service>
    <service id=".service_locator.lStLV.C" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="projectAssignmentRepository" type="service" id="App\Repository\ProjectAssignmentRepository"/>
        <argument key="timesheetRepository" type="service" id="App\Repository\TimesheetRepository"/>
      </argument>
    </service>
    <service id=".service_locator._6uWQGA" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="timesheetRepository" type="service" id="App\Repository\TimesheetRepository"/>
      </argument>
    </service>
    <service id=".service_locator.vLmJ2oo" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="timesheetDetailRepository" type="service" id="App\Repository\TimesheetDetailRepository"/>
        <argument key="timesheetRepository" type="service" id="App\Repository\TimesheetRepository"/>
      </argument>
    </service>
    <service id=".service_locator.Xr52zFV" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="queue" type="service" id="aws.sqs"/>
        <argument key="timesheetRepository" type="service" id="App\Repository\TimesheetRepository"/>
      </argument>
    </service>
    <service id=".service_locator.8996nmF" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="appUserRepository" type="service" id="App\Repository\AppUserRepository"/>
        <argument key="roleRepository" type="service" id="MsgPhp\User\Infra\Doctrine\Repository\RoleRepository"/>
      </argument>
    </service>
    <service id=".service_locator.AIxSp9h" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="appUserRepository" type="service" id="App\Repository\AppUserRepository"/>
        <argument key="queue" type="service" id="aws.sqs"/>
      </argument>
    </service>
    <service id=".service_locator.zFdZuSN" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="appUserRepository" type="service" id="App\Repository\AppUserRepository"/>
        <argument key="awsCognitoClient" type="service" id="App\Bridge\AwsCognitoClient"/>
        <argument key="queue" type="service" id="aws.sqs"/>
      </argument>
    </service>
    <service id=".service_locator.oqn.ZnP" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="formFactory" type="service" id="form.factory"/>
      </argument>
    </service>
    <service id=".service_locator.m7OzrfU" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="appUserRepository" type="service" id="App\Repository\AppUserRepository"/>
        <argument key="flashBag" type="service" id="session.flash_bag"/>
        <argument key="formFactory" type="service" id="form.factory"/>
        <argument key="queue" type="service" id="aws.sqs"/>
      </argument>
    </service>
    <service id=".service_locator.WJfzm_w" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="em" type="service" id="doctrine.orm.default_entity_manager"/>
        <argument key="formFactory" type="service" id="form.factory"/>
      </argument>
    </service>
    <service id=".service_locator.Ex.y.KO" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="em" type="service" id="doctrine.orm.default_entity_manager"/>
        <argument key="flashBag" type="service" id="session.flash_bag"/>
        <argument key="formFactory" type="service" id="form.factory"/>
      </argument>
    </service>
    <service id=".service_locator.52AVVAv" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="bus" type="service" id="debug.traced.messenger.bus.default"/>
        <argument key="flashBag" type="service" id="session.flash_bag"/>
        <argument key="formFactory" type="service" id="form.factory"/>
        <argument key="repository" type="service" id="MsgPhp\User\Infra\Doctrine\Repository\UserRepository"/>
        <argument key="twig" type="service" id="twig"/>
      </argument>
    </service>
    <service id=".service_locator.MCpfYMk" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="authenticationUtils" type="service" id="security.authentication_utils"/>
        <argument key="container" type="service" id="service_container"/>
        <argument key="formFactory" type="service" id="form.factory"/>
        <argument key="twig" type="service" id="twig"/>
      </argument>
    </service>
    <service id=".service_locator.4twBeMr" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="bus" type="service" id="debug.traced.messenger.bus.default"/>
        <argument key="em" type="service" id="doctrine.orm.default_entity_manager"/>
        <argument key="flashBag" type="service" id="session.flash_bag"/>
        <argument key="formFactory" type="service" id="form.factory"/>
        <argument key="twig" type="service" id="twig"/>
      </argument>
    </service>
    <service id=".service_locator.M57YtTF" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Controller\AccountController::create" type="service" id=".service_locator.gd3_ogo"/>
        <argument key="App\Controller\AccountController::delete" type="service" id=".service_locator.gd3_ogo"/>
        <argument key="App\Controller\AccountController::index" type="service" id=".service_locator.vC9OS3x"/>
        <argument key="App\Controller\AccountController::processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\AccountController::refresh" type="service" id=".service_locator.vC9OS3x"/>
        <argument key="App\Controller\AppConfigurationController::processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\BaseController::processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\ConversionController::activate" type="service" id=".service_locator.pZ3G49N"/>
        <argument key="App\Controller\ConversionController::conversion" type="service" id=".service_locator.6PfOHK8"/>
        <argument key="App\Controller\ConversionController::create" type="service" id=".service_locator.pZ3G49N"/>
        <argument key="App\Controller\ConversionController::delete" type="service" id=".service_locator.pZ3G49N"/>
        <argument key="App\Controller\ConversionController::processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\ConversionController::refresh" type="service" id=".service_locator.6PfOHK8"/>
        <argument key="App\Controller\DefaultController::processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\DefaultController::resetdata" type="service" id=".service_locator.Bp1iBfv"/>
        <argument key="App\Controller\FileUploadController::copyORC" type="service" id=".service_locator.FFDan3b"/>
        <argument key="App\Controller\FileUploadController::copyParquet" type="service" id=".service_locator.FFDan3b"/>
        <argument key="App\Controller\FileUploadController::copyToSharedFolder" type="service" id=".service_locator.FFDan3b"/>
        <argument key="App\Controller\FileUploadController::delete" type="service" id=".service_locator.FFDan3b"/>
        <argument key="App\Controller\FileUploadController::processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\FileUploadController::processS3Upload" type="service" id=".service_locator.84oRSq2"/>
        <argument key="App\Controller\FileUploadController::restore" type="service" id=".service_locator.FFDan3b"/>
        <argument key="App\Controller\FileUploadController::upload" type="service" id=".service_locator.Bp1iBfv"/>
        <argument key="App\Controller\FileUploadController::uploads" type="service" id=".service_locator.89z_4OU"/>
        <argument key="App\Controller\FileWatcherController::create" type="service" id=".service_locator.GK6npg9"/>
        <argument key="App\Controller\FileWatcherController::delete" type="service" id=".service_locator.GK6npg9"/>
        <argument key="App\Controller\FileWatcherController::processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\FileWatcherController::refresh" type="service" id=".service_locator.ri73nW3"/>
        <argument key="App\Controller\FileWatcherController::run" type="service" id=".service_locator.JskFAf1"/>
        <argument key="App\Controller\FileWatcherController::watcher" type="service" id=".service_locator.ri73nW3"/>
        <argument key="App\Controller\HadoopStatusController::createHadoop" type="service" id=".service_locator.w3hd3Bt"/>
        <argument key="App\Controller\HadoopStatusController::index" type="service" id=".service_locator.LAGdPau"/>
        <argument key="App\Controller\HadoopStatusController::processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\HadoopStatusController::refresh" type="service" id=".service_locator.LAGdPau"/>
        <argument key="App\Controller\HadoopStatusController::startHadoop" type="service" id=".service_locator._YeZNPD"/>
        <argument key="App\Controller\HadoopStatusController::stopHadoop" type="service" id=".service_locator._YeZNPD"/>
        <argument key="App\Controller\MPPStatusController::creatempp" type="service" id=".service_locator.6Y4E3LA"/>
        <argument key="App\Controller\MPPStatusController::index" type="service" id=".service_locator.IYdRsdu"/>
        <argument key="App\Controller\MPPStatusController::processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\MPPStatusController::refresh" type="service" id=".service_locator.IYdRsdu"/>
        <argument key="App\Controller\MPPStatusController::startmpp" type="service" id=".service_locator.N_Kn.CN"/>
        <argument key="App\Controller\MPPStatusController::stopmpp" type="service" id=".service_locator.N_Kn.CN"/>
        <argument key="App\Controller\NexusController::analysis" type="service" id=".service_locator.l6BODW6"/>
        <argument key="App\Controller\NexusController::dataprofile" type="service" id=".service_locator.l6BODW6"/>
        <argument key="App\Controller\NexusController::initialize" type="service" id=".service_locator.Bp1iBfv"/>
        <argument key="App\Controller\NexusController::metadata" type="service" id=".service_locator.Mg3IsZj"/>
        <argument key="App\Controller\NexusController::processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\NexusController::runanalysis" type="service" id=".service_locator.wuQfapA"/>
        <argument key="App\Controller\NexusController::rundataprofile" type="service" id=".service_locator.wuQfapA"/>
        <argument key="App\Controller\NexusController::setup" type="service" id=".service_locator.6f1a_D2"/>
        <argument key="App\Controller\NexusController::upload" type="service" id=".service_locator.Bp1iBfv"/>
        <argument key="App\Controller\NotificationController::markRead" type="service" id=".service_locator.r66G1pO"/>
        <argument key="App\Controller\NotificationController::notifications" type="service" id=".service_locator.r66G1pO"/>
        <argument key="App\Controller\NotificationController::processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\NotificationController::pushNotification" type="service" id=".service_locator.r66G1pO"/>
        <argument key="App\Controller\ProjectAssignmentController::create" type="service" id=".service_locator.zwru4VC"/>
        <argument key="App\Controller\ProjectAssignmentController::delete" type="service" id=".service_locator.zwru4VC"/>
        <argument key="App\Controller\ProjectAssignmentController::processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\ProjectAssignmentController::projects" type="service" id=".service_locator.rwqCNMm"/>
        <argument key="App\Controller\ProjectAssignmentController::refresh" type="service" id=".service_locator.s1Db8OC"/>
        <argument key="App\Controller\ProjectController::create" type="service" id=".service_locator.fz.EosS"/>
        <argument key="App\Controller\ProjectController::delete" type="service" id=".service_locator.fz.EosS"/>
        <argument key="App\Controller\ProjectController::processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\ProjectController::project" type="service" id=".service_locator.L25Z_H9"/>
        <argument key="App\Controller\ProjectController::refresh" type="service" id=".service_locator.L25Z_H9"/>
        <argument key="App\Controller\ProjectRateController::create" type="service" id=".service_locator.XbrQYuN"/>
        <argument key="App\Controller\ProjectRateController::delete" type="service" id=".service_locator.XbrQYuN"/>
        <argument key="App\Controller\ProjectRateController::new" type="service" id=".service_locator.OqRGJ15"/>
        <argument key="App\Controller\ProjectRateController::processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\ProjectRateController::projectrate" type="service" id=".service_locator.dobcXP3"/>
        <argument key="App\Controller\ProjectRateController::refresh" type="service" id=".service_locator.dobcXP3"/>
        <argument key="App\Controller\ProjectRateController::view" type="service" id=".service_locator.dobcXP3"/>
        <argument key="App\Controller\QueryController::createQuery" type="service" id=".service_locator.Yl3nNM2"/>
        <argument key="App\Controller\QueryController::delete" type="service" id=".service_locator.Yl3nNM2"/>
        <argument key="App\Controller\QueryController::processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\QueryController::queries" type="service" id=".service_locator.lQH_o_L"/>
        <argument key="App\Controller\QueryController::refresh" type="service" id=".service_locator.lQH_o_L"/>
        <argument key="App\Controller\QueryController::run" type="service" id=".service_locator.ldAMdQU"/>
        <argument key="App\Controller\SimulationController::create" type="service" id=".service_locator.R9YCdUY"/>
        <argument key="App\Controller\SimulationController::delete" type="service" id=".service_locator.R9YCdUY"/>
        <argument key="App\Controller\SimulationController::processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\SimulationController::refresh" type="service" id=".service_locator.pbTBJz7"/>
        <argument key="App\Controller\SimulationController::run" type="service" id=".service_locator.8KsR2PR"/>
        <argument key="App\Controller\SimulationController::simulator" type="service" id=".service_locator.pbTBJz7"/>
        <argument key="App\Controller\SqsController::processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\SqsController::viewSQS" type="service" id=".service_locator.Drz357h"/>
        <argument key="App\Controller\TableController::processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\TableController::refresh" type="service" id=".service_locator.Bp1iBfv"/>
        <argument key="App\Controller\TableController::search" type="service" id=".service_locator.Bp1iBfv"/>
        <argument key="App\Controller\TableController::tables" type="service" id=".service_locator.a5iTCPh"/>
        <argument key="App\Controller\TaskCategoryController::create" type="service" id=".service_locator.1z.nMr2"/>
        <argument key="App\Controller\TaskCategoryController::delete" type="service" id=".service_locator.1z.nMr2"/>
        <argument key="App\Controller\TaskCategoryController::new" type="service" id=".service_locator.eKnBq_t"/>
        <argument key="App\Controller\TaskCategoryController::processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\TaskCategoryController::refresh" type="service" id=".service_locator.saCr6.k"/>
        <argument key="App\Controller\TaskCategoryController::taskcategory" type="service" id=".service_locator.saCr6.k"/>
        <argument key="App\Controller\TaskCategoryController::view" type="service" id=".service_locator.saCr6.k"/>
        <argument key="App\Controller\TaskController::create" type="service" id=".service_locator.GT6TtVA"/>
        <argument key="App\Controller\TaskController::delete" type="service" id=".service_locator.GT6TtVA"/>
        <argument key="App\Controller\TaskController::new" type="service" id=".service_locator.AAu6m1b"/>
        <argument key="App\Controller\TaskController::processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\TaskController::refresh" type="service" id=".service_locator.a3Zzgn6"/>
        <argument key="App\Controller\TaskController::task" type="service" id=".service_locator.a3Zzgn6"/>
        <argument key="App\Controller\TaskController::view" type="service" id=".service_locator.a3Zzgn6"/>
        <argument key="App\Controller\TaskQueueController::create" type="service" id=".service_locator.j0fGf3o"/>
        <argument key="App\Controller\TaskQueueController::delete" type="service" id=".service_locator.j0fGf3o"/>
        <argument key="App\Controller\TaskQueueController::new" type="service" id=".service_locator.ic.uFpj"/>
        <argument key="App\Controller\TaskQueueController::processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\TaskQueueController::refresh" type="service" id=".service_locator.iVGcq9E"/>
        <argument key="App\Controller\TaskQueueController::taskqueue" type="service" id=".service_locator.ic.uFpj"/>
        <argument key="App\Controller\TaskQueueController::view" type="service" id=".service_locator.iVGcq9E"/>
        <argument key="App\Controller\TaskTemplateController::create" type="service" id=".service_locator.zMAyeEI"/>
        <argument key="App\Controller\TaskTemplateController::delete" type="service" id=".service_locator.zMAyeEI"/>
        <argument key="App\Controller\TaskTemplateController::new" type="service" id=".service_locator.9r3udEI"/>
        <argument key="App\Controller\TaskTemplateController::processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\TaskTemplateController::refresh" type="service" id=".service_locator.9r3udEI"/>
        <argument key="App\Controller\TaskTemplateController::tasktemplate" type="service" id=".service_locator.9r3udEI"/>
        <argument key="App\Controller\TaskTemplateController::view" type="service" id=".service_locator.9r3udEI"/>
        <argument key="App\Controller\TemplateController::activate" type="service" id=".service_locator.6f1a_D2"/>
        <argument key="App\Controller\TemplateController::createTemplate" type="service" id=".service_locator.6f1a_D2"/>
        <argument key="App\Controller\TemplateController::deactivate" type="service" id=".service_locator.6f1a_D2"/>
        <argument key="App\Controller\TemplateController::delete" type="service" id=".service_locator.6f1a_D2"/>
        <argument key="App\Controller\TemplateController::index" type="service" id=".service_locator.Bp1iBfv"/>
        <argument key="App\Controller\TemplateController::processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\TemplateController::refresh" type="service" id=".service_locator.Bp1iBfv"/>
        <argument key="App\Controller\TemplateController::sync" type="service" id=".service_locator.6f1a_D2"/>
        <argument key="App\Controller\TemplateController::wizard" type="service" id=".service_locator.Bp1iBfv"/>
        <argument key="App\Controller\TimesheetController::create" type="service" id=".service_locator.Xr52zFV"/>
        <argument key="App\Controller\TimesheetController::delete" type="service" id=".service_locator.Xr52zFV"/>
        <argument key="App\Controller\TimesheetController::new" type="service" id=".service_locator.lStLV.C"/>
        <argument key="App\Controller\TimesheetController::processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\TimesheetController::refresh" type="service" id=".service_locator._6uWQGA"/>
        <argument key="App\Controller\TimesheetController::timesheet" type="service" id=".service_locator.lStLV.C"/>
        <argument key="App\Controller\TimesheetController::view" type="service" id=".service_locator.vLmJ2oo"/>
        <argument key="App\Controller\User\AppUserController::blankuser" type="service" id=".service_locator.8996nmF"/>
        <argument key="App\Controller\User\AppUserController::changePassword" type="service" id=".service_locator.zFdZuSN"/>
        <argument key="App\Controller\User\AppUserController::create" type="service" id=".service_locator.AIxSp9h"/>
        <argument key="App\Controller\User\AppUserController::delete" type="service" id=".service_locator.AIxSp9h"/>
        <argument key="App\Controller\User\AppUserController::edit" type="service" id=".service_locator.8996nmF"/>
        <argument key="App\Controller\User\AppUserController::forgotpassword" type="service" id=".service_locator.oqn.ZnP"/>
        <argument key="App\Controller\User\AppUserController::processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\User\AppUserController::processForgotPassword" type="service" id=".service_locator.m7OzrfU"/>
        <argument key="App\Controller\User\AppUserController::processResetPassword" type="service" id=".service_locator.Ex.y.KO"/>
        <argument key="App\Controller\User\AppUserController::showResetPassword" type="service" id=".service_locator.WJfzm_w"/>
        <argument key="App\Controller\User\AppUserController::users" type="service" id=".service_locator.8996nmF"/>
        <argument key="App\Controller\User\ForgotPasswordController::__invoke" type="service" id=".service_locator.52AVVAv"/>
        <argument key="App\Controller\User\LoginController::__invoke" type="service" id=".service_locator.MCpfYMk"/>
        <argument key="App\Controller\User\ProfileController::processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\User\ProfileController::profile" type="service" id=".service_locator.8996nmF"/>
        <argument key="App\Controller\User\ResetPasswordController::__invoke" type="service" id=".service_locator.4twBeMr"/>
        <argument key="App\Controller\AccountController:create" type="service" id=".service_locator.gd3_ogo"/>
        <argument key="App\Controller\AccountController:delete" type="service" id=".service_locator.gd3_ogo"/>
        <argument key="App\Controller\AccountController:index" type="service" id=".service_locator.vC9OS3x"/>
        <argument key="App\Controller\AccountController:processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\AccountController:refresh" type="service" id=".service_locator.vC9OS3x"/>
        <argument key="App\Controller\AppConfigurationController:processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\BaseController:processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\ConversionController:activate" type="service" id=".service_locator.pZ3G49N"/>
        <argument key="App\Controller\ConversionController:conversion" type="service" id=".service_locator.6PfOHK8"/>
        <argument key="App\Controller\ConversionController:create" type="service" id=".service_locator.pZ3G49N"/>
        <argument key="App\Controller\ConversionController:delete" type="service" id=".service_locator.pZ3G49N"/>
        <argument key="App\Controller\ConversionController:processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\ConversionController:refresh" type="service" id=".service_locator.6PfOHK8"/>
        <argument key="App\Controller\DefaultController:processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\DefaultController:resetdata" type="service" id=".service_locator.Bp1iBfv"/>
        <argument key="App\Controller\FileUploadController:copyORC" type="service" id=".service_locator.FFDan3b"/>
        <argument key="App\Controller\FileUploadController:copyParquet" type="service" id=".service_locator.FFDan3b"/>
        <argument key="App\Controller\FileUploadController:copyToSharedFolder" type="service" id=".service_locator.FFDan3b"/>
        <argument key="App\Controller\FileUploadController:delete" type="service" id=".service_locator.FFDan3b"/>
        <argument key="App\Controller\FileUploadController:processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\FileUploadController:processS3Upload" type="service" id=".service_locator.84oRSq2"/>
        <argument key="App\Controller\FileUploadController:restore" type="service" id=".service_locator.FFDan3b"/>
        <argument key="App\Controller\FileUploadController:upload" type="service" id=".service_locator.Bp1iBfv"/>
        <argument key="App\Controller\FileUploadController:uploads" type="service" id=".service_locator.89z_4OU"/>
        <argument key="App\Controller\FileWatcherController:create" type="service" id=".service_locator.GK6npg9"/>
        <argument key="App\Controller\FileWatcherController:delete" type="service" id=".service_locator.GK6npg9"/>
        <argument key="App\Controller\FileWatcherController:processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\FileWatcherController:refresh" type="service" id=".service_locator.ri73nW3"/>
        <argument key="App\Controller\FileWatcherController:run" type="service" id=".service_locator.JskFAf1"/>
        <argument key="App\Controller\FileWatcherController:watcher" type="service" id=".service_locator.ri73nW3"/>
        <argument key="App\Controller\HadoopStatusController:createHadoop" type="service" id=".service_locator.w3hd3Bt"/>
        <argument key="App\Controller\HadoopStatusController:index" type="service" id=".service_locator.LAGdPau"/>
        <argument key="App\Controller\HadoopStatusController:processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\HadoopStatusController:refresh" type="service" id=".service_locator.LAGdPau"/>
        <argument key="App\Controller\HadoopStatusController:startHadoop" type="service" id=".service_locator._YeZNPD"/>
        <argument key="App\Controller\HadoopStatusController:stopHadoop" type="service" id=".service_locator._YeZNPD"/>
        <argument key="App\Controller\MPPStatusController:creatempp" type="service" id=".service_locator.6Y4E3LA"/>
        <argument key="App\Controller\MPPStatusController:index" type="service" id=".service_locator.IYdRsdu"/>
        <argument key="App\Controller\MPPStatusController:processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\MPPStatusController:refresh" type="service" id=".service_locator.IYdRsdu"/>
        <argument key="App\Controller\MPPStatusController:startmpp" type="service" id=".service_locator.N_Kn.CN"/>
        <argument key="App\Controller\MPPStatusController:stopmpp" type="service" id=".service_locator.N_Kn.CN"/>
        <argument key="App\Controller\NexusController:analysis" type="service" id=".service_locator.l6BODW6"/>
        <argument key="App\Controller\NexusController:dataprofile" type="service" id=".service_locator.l6BODW6"/>
        <argument key="App\Controller\NexusController:initialize" type="service" id=".service_locator.Bp1iBfv"/>
        <argument key="App\Controller\NexusController:metadata" type="service" id=".service_locator.Mg3IsZj"/>
        <argument key="App\Controller\NexusController:processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\NexusController:runanalysis" type="service" id=".service_locator.wuQfapA"/>
        <argument key="App\Controller\NexusController:rundataprofile" type="service" id=".service_locator.wuQfapA"/>
        <argument key="App\Controller\NexusController:setup" type="service" id=".service_locator.6f1a_D2"/>
        <argument key="App\Controller\NexusController:upload" type="service" id=".service_locator.Bp1iBfv"/>
        <argument key="App\Controller\NotificationController:markRead" type="service" id=".service_locator.r66G1pO"/>
        <argument key="App\Controller\NotificationController:notifications" type="service" id=".service_locator.r66G1pO"/>
        <argument key="App\Controller\NotificationController:processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\NotificationController:pushNotification" type="service" id=".service_locator.r66G1pO"/>
        <argument key="App\Controller\ProjectAssignmentController:create" type="service" id=".service_locator.zwru4VC"/>
        <argument key="App\Controller\ProjectAssignmentController:delete" type="service" id=".service_locator.zwru4VC"/>
        <argument key="App\Controller\ProjectAssignmentController:processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\ProjectAssignmentController:projects" type="service" id=".service_locator.rwqCNMm"/>
        <argument key="App\Controller\ProjectAssignmentController:refresh" type="service" id=".service_locator.s1Db8OC"/>
        <argument key="App\Controller\ProjectController:create" type="service" id=".service_locator.fz.EosS"/>
        <argument key="App\Controller\ProjectController:delete" type="service" id=".service_locator.fz.EosS"/>
        <argument key="App\Controller\ProjectController:processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\ProjectController:project" type="service" id=".service_locator.L25Z_H9"/>
        <argument key="App\Controller\ProjectController:refresh" type="service" id=".service_locator.L25Z_H9"/>
        <argument key="App\Controller\ProjectRateController:create" type="service" id=".service_locator.XbrQYuN"/>
        <argument key="App\Controller\ProjectRateController:delete" type="service" id=".service_locator.XbrQYuN"/>
        <argument key="App\Controller\ProjectRateController:new" type="service" id=".service_locator.OqRGJ15"/>
        <argument key="App\Controller\ProjectRateController:processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\ProjectRateController:projectrate" type="service" id=".service_locator.dobcXP3"/>
        <argument key="App\Controller\ProjectRateController:refresh" type="service" id=".service_locator.dobcXP3"/>
        <argument key="App\Controller\ProjectRateController:view" type="service" id=".service_locator.dobcXP3"/>
        <argument key="App\Controller\QueryController:createQuery" type="service" id=".service_locator.Yl3nNM2"/>
        <argument key="App\Controller\QueryController:delete" type="service" id=".service_locator.Yl3nNM2"/>
        <argument key="App\Controller\QueryController:processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\QueryController:queries" type="service" id=".service_locator.lQH_o_L"/>
        <argument key="App\Controller\QueryController:refresh" type="service" id=".service_locator.lQH_o_L"/>
        <argument key="App\Controller\QueryController:run" type="service" id=".service_locator.ldAMdQU"/>
        <argument key="App\Controller\SimulationController:create" type="service" id=".service_locator.R9YCdUY"/>
        <argument key="App\Controller\SimulationController:delete" type="service" id=".service_locator.R9YCdUY"/>
        <argument key="App\Controller\SimulationController:processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\SimulationController:refresh" type="service" id=".service_locator.pbTBJz7"/>
        <argument key="App\Controller\SimulationController:run" type="service" id=".service_locator.8KsR2PR"/>
        <argument key="App\Controller\SimulationController:simulator" type="service" id=".service_locator.pbTBJz7"/>
        <argument key="App\Controller\SqsController:processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\SqsController:viewSQS" type="service" id=".service_locator.Drz357h"/>
        <argument key="App\Controller\TableController:processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\TableController:refresh" type="service" id=".service_locator.Bp1iBfv"/>
        <argument key="App\Controller\TableController:search" type="service" id=".service_locator.Bp1iBfv"/>
        <argument key="App\Controller\TableController:tables" type="service" id=".service_locator.a5iTCPh"/>
        <argument key="App\Controller\TaskCategoryController:create" type="service" id=".service_locator.1z.nMr2"/>
        <argument key="App\Controller\TaskCategoryController:delete" type="service" id=".service_locator.1z.nMr2"/>
        <argument key="App\Controller\TaskCategoryController:new" type="service" id=".service_locator.eKnBq_t"/>
        <argument key="App\Controller\TaskCategoryController:processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\TaskCategoryController:refresh" type="service" id=".service_locator.saCr6.k"/>
        <argument key="App\Controller\TaskCategoryController:taskcategory" type="service" id=".service_locator.saCr6.k"/>
        <argument key="App\Controller\TaskCategoryController:view" type="service" id=".service_locator.saCr6.k"/>
        <argument key="App\Controller\TaskController:create" type="service" id=".service_locator.GT6TtVA"/>
        <argument key="App\Controller\TaskController:delete" type="service" id=".service_locator.GT6TtVA"/>
        <argument key="App\Controller\TaskController:new" type="service" id=".service_locator.AAu6m1b"/>
        <argument key="App\Controller\TaskController:processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\TaskController:refresh" type="service" id=".service_locator.a3Zzgn6"/>
        <argument key="App\Controller\TaskController:task" type="service" id=".service_locator.a3Zzgn6"/>
        <argument key="App\Controller\TaskController:view" type="service" id=".service_locator.a3Zzgn6"/>
        <argument key="App\Controller\TaskQueueController:create" type="service" id=".service_locator.j0fGf3o"/>
        <argument key="App\Controller\TaskQueueController:delete" type="service" id=".service_locator.j0fGf3o"/>
        <argument key="App\Controller\TaskQueueController:new" type="service" id=".service_locator.ic.uFpj"/>
        <argument key="App\Controller\TaskQueueController:processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\TaskQueueController:refresh" type="service" id=".service_locator.iVGcq9E"/>
        <argument key="App\Controller\TaskQueueController:taskqueue" type="service" id=".service_locator.ic.uFpj"/>
        <argument key="App\Controller\TaskQueueController:view" type="service" id=".service_locator.iVGcq9E"/>
        <argument key="App\Controller\TaskTemplateController:create" type="service" id=".service_locator.zMAyeEI"/>
        <argument key="App\Controller\TaskTemplateController:delete" type="service" id=".service_locator.zMAyeEI"/>
        <argument key="App\Controller\TaskTemplateController:new" type="service" id=".service_locator.9r3udEI"/>
        <argument key="App\Controller\TaskTemplateController:processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\TaskTemplateController:refresh" type="service" id=".service_locator.9r3udEI"/>
        <argument key="App\Controller\TaskTemplateController:tasktemplate" type="service" id=".service_locator.9r3udEI"/>
        <argument key="App\Controller\TaskTemplateController:view" type="service" id=".service_locator.9r3udEI"/>
        <argument key="App\Controller\TemplateController:activate" type="service" id=".service_locator.6f1a_D2"/>
        <argument key="App\Controller\TemplateController:createTemplate" type="service" id=".service_locator.6f1a_D2"/>
        <argument key="App\Controller\TemplateController:deactivate" type="service" id=".service_locator.6f1a_D2"/>
        <argument key="App\Controller\TemplateController:delete" type="service" id=".service_locator.6f1a_D2"/>
        <argument key="App\Controller\TemplateController:index" type="service" id=".service_locator.Bp1iBfv"/>
        <argument key="App\Controller\TemplateController:processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\TemplateController:refresh" type="service" id=".service_locator.Bp1iBfv"/>
        <argument key="App\Controller\TemplateController:sync" type="service" id=".service_locator.6f1a_D2"/>
        <argument key="App\Controller\TemplateController:wizard" type="service" id=".service_locator.Bp1iBfv"/>
        <argument key="App\Controller\TimesheetController:create" type="service" id=".service_locator.Xr52zFV"/>
        <argument key="App\Controller\TimesheetController:delete" type="service" id=".service_locator.Xr52zFV"/>
        <argument key="App\Controller\TimesheetController:new" type="service" id=".service_locator.lStLV.C"/>
        <argument key="App\Controller\TimesheetController:processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\TimesheetController:refresh" type="service" id=".service_locator._6uWQGA"/>
        <argument key="App\Controller\TimesheetController:timesheet" type="service" id=".service_locator.lStLV.C"/>
        <argument key="App\Controller\TimesheetController:view" type="service" id=".service_locator.vLmJ2oo"/>
        <argument key="App\Controller\User\AppUserController:blankuser" type="service" id=".service_locator.8996nmF"/>
        <argument key="App\Controller\User\AppUserController:changePassword" type="service" id=".service_locator.zFdZuSN"/>
        <argument key="App\Controller\User\AppUserController:create" type="service" id=".service_locator.AIxSp9h"/>
        <argument key="App\Controller\User\AppUserController:delete" type="service" id=".service_locator.AIxSp9h"/>
        <argument key="App\Controller\User\AppUserController:edit" type="service" id=".service_locator.8996nmF"/>
        <argument key="App\Controller\User\AppUserController:forgotpassword" type="service" id=".service_locator.oqn.ZnP"/>
        <argument key="App\Controller\User\AppUserController:processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\User\AppUserController:processForgotPassword" type="service" id=".service_locator.m7OzrfU"/>
        <argument key="App\Controller\User\AppUserController:processResetPassword" type="service" id=".service_locator.Ex.y.KO"/>
        <argument key="App\Controller\User\AppUserController:showResetPassword" type="service" id=".service_locator.WJfzm_w"/>
        <argument key="App\Controller\User\AppUserController:users" type="service" id=".service_locator.8996nmF"/>
        <argument key="App\Controller\User\ForgotPasswordController:__invoke" type="service" id=".service_locator.52AVVAv"/>
        <argument key="App\Controller\User\ForgotPasswordController" type="service" id=".service_locator.52AVVAv"/>
        <argument key="App\Controller\User\LoginController:__invoke" type="service" id=".service_locator.MCpfYMk"/>
        <argument key="App\Controller\User\LoginController" type="service" id=".service_locator.MCpfYMk"/>
        <argument key="App\Controller\User\ProfileController:processAthenaQuery" type="service" id=".service_locator.CThpHJr"/>
        <argument key="App\Controller\User\ProfileController:profile" type="service" id=".service_locator.8996nmF"/>
        <argument key="App\Controller\User\ResetPasswordController:__invoke" type="service" id=".service_locator.4twBeMr"/>
        <argument key="App\Controller\User\ResetPasswordController" type="service" id=".service_locator.4twBeMr"/>
      </argument>
    </service>
    <service id=".service_locator.yQVjGlt" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translation.loader.csv" type="service" id="translation.loader.csv"/>
        <argument key="translation.loader.dat" type="service" id="translation.loader.dat"/>
        <argument key="translation.loader.ini" type="service" id="translation.loader.ini"/>
        <argument key="translation.loader.json" type="service" id="translation.loader.json"/>
        <argument key="translation.loader.mo" type="service" id="translation.loader.mo"/>
        <argument key="translation.loader.php" type="service" id="translation.loader.php"/>
        <argument key="translation.loader.po" type="service" id="translation.loader.po"/>
        <argument key="translation.loader.qt" type="service" id="translation.loader.qt"/>
        <argument key="translation.loader.res" type="service" id="translation.loader.res"/>
        <argument key="translation.loader.xliff" type="service" id="translation.loader.xliff"/>
        <argument key="translation.loader.yml" type="service" id="translation.loader.yml"/>
      </argument>
    </service>
    <service id=".service_locator.gmwRZ3h" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="inline" type="service" id="fragment.renderer.inline"/>
      </argument>
    </service>
    <service id=".service_locator..tgOPQs" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Form\FileWatcherType" type="service" id="App\Form\FileWatcherType"/>
        <argument key="App\Form\LookupValuesType" type="service" id="App\Form\LookupValuesType"/>
        <argument key="App\Form\NexusAnalysisType" type="service" id="App\Form\NexusAnalysisType"/>
        <argument key="App\Form\ProjectAssignmentType" type="service" id="App\Form\ProjectAssignmentType"/>
        <argument key="App\Form\ProjectRateType" type="service" id="App\Form\ProjectRateType"/>
        <argument key="App\Form\ProjectType" type="service" id="App\Form\ProjectType"/>
        <argument key="App\Form\QueryType" type="service" id="App\Form\QueryType"/>
        <argument key="App\Form\TaskCategoryType" type="service" id="App\Form\TaskCategoryType"/>
        <argument key="App\Form\TaskQueueType" type="service" id="App\Form\TaskQueueType"/>
        <argument key="App\Form\TaskTemplateDetailType" type="service" id="App\Form\TaskTemplateDetailType"/>
        <argument key="App\Form\TaskType" type="service" id="App\Form\TaskType"/>
        <argument key="App\Form\TemplateType" type="service" id="App\Form\TemplateType"/>
        <argument key="App\Form\User\ForgotPasswordType" type="service" id="App\Form\User\ForgotPasswordType"/>
        <argument key="App\Form\User\LoginType" type="service" id="App\Form\User\LoginType"/>
        <argument key="App\Form\User\ResetPasswordType" type="service" id="App\Form\User\ResetPasswordType"/>
        <argument key="MsgPhp\User\Infra\Form\Type\HashedPasswordType" type="service" id="MsgPhp\User\Infra\Form\Type\HashedPasswordType"/>
        <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType" type="service" id="form.type.entity"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="service" id="form.type.choice"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="service" id="form.type.form"/>
      </argument>
    </service>
    <service id="messenger.bus.default.middleware.logging" class="Symfony\Component\Messenger\Middleware\LoggingMiddleware" public="false">
      <argument type="service" id="monolog.logger.messenger"/>
    </service>
    <service id="messenger.bus.default.middleware.call_message_handler" class="Symfony\Component\Messenger\Middleware\HandleMessageMiddleware" public="false">
      <argument type="service" id="messenger.bus.default.messenger.handler_resolver"/>
    </service>
    <service id="debug.traced.messenger.bus.default" class="Symfony\Component\Messenger\TraceableMessageBus">
      <tag name="messenger.bus"/>
      <argument type="service" id="debug.traced.messenger.bus.default.inner"/>
    </service>
    <service id="messenger.bus.default.messenger.handler_resolver" class="Symfony\Component\Messenger\Handler\Locator\ContainerHandlerLocator">
      <argument type="service" id=".service_locator.xkN8fXR"/>
    </service>
    <service id=".service_locator.xkN8fXR" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="handler.MsgPhp\User\Command\AddUserRoleCommand" type="service" id="MsgPhp\User\Command\Handler\AddUserRoleHandler"/>
        <argument key="handler.MsgPhp\User\Command\ChangeUserCredentialCommand" type="service" id="MsgPhp\User\Command\Handler\ChangeUserCredentialHandler"/>
        <argument key="handler.MsgPhp\User\Command\CreateUserCommand" type="service" id="MsgPhp\User\Command\Handler\CreateUserHandler"/>
        <argument key="handler.MsgPhp\User\Command\DeleteUserCommand" type="service" id="MsgPhp\User\Command\Handler\DeleteUserHandler"/>
        <argument key="handler.MsgPhp\User\Command\DeleteUserRoleCommand" type="service" id="MsgPhp\User\Command\Handler\DeleteUserRoleHandler"/>
        <argument key="handler.MsgPhp\User\Command\RequestUserPasswordCommand" type="service" id="MsgPhp\User\Command\Handler\RequestUserPasswordHandler"/>
      </argument>
    </service>
    <service id=".service_locator.COXxLDU" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Repository\AccountRepository" type="service" id="App\Repository\AccountRepository"/>
        <argument key="App\Repository\AppUserRepository" type="service" id="App\Repository\AppUserRepository"/>
        <argument key="App\Repository\ConversionRepository" type="service" id="App\Repository\ConversionRepository"/>
        <argument key="App\Repository\CustomReportRepository" type="service" id="App\Repository\CustomReportRepository"/>
        <argument key="App\Repository\EmployeeRelationshipRepository" type="service" id="App\Repository\EmployeeRelationshipRepository"/>
        <argument key="App\Repository\EmployeeRepository" type="service" id="App\Repository\EmployeeRepository"/>
        <argument key="App\Repository\FileUploadRepository" type="service" id="App\Repository\FileUploadRepository"/>
        <argument key="App\Repository\FileWatcherRepository" type="service" id="App\Repository\FileWatcherRepository"/>
        <argument key="App\Repository\HadoopStatusRepository" type="service" id="App\Repository\HadoopStatusRepository"/>
        <argument key="App\Repository\MPPStatusRepository" type="service" id="App\Repository\MPPStatusRepository"/>
        <argument key="App\Repository\NotificationRepository" type="service" id="App\Repository\NotificationRepository"/>
        <argument key="App\Repository\ProjectAssignmentRepository" type="service" id="App\Repository\ProjectAssignmentRepository"/>
        <argument key="App\Repository\ProjectRateRepository" type="service" id="App\Repository\ProjectRateRepository"/>
        <argument key="App\Repository\ProjectRepository" type="service" id="App\Repository\ProjectRepository"/>
        <argument key="App\Repository\SimulationRepository" type="service" id="App\Repository\SimulationRepository"/>
        <argument key="App\Repository\StateGuideRepository" type="service" id="App\Repository\StateGuideRepository"/>
        <argument key="App\Repository\TaskCategoryRepository" type="service" id="App\Repository\TaskCategoryRepository"/>
        <argument key="App\Repository\TaskQueueRepository" type="service" id="App\Repository\TaskQueueRepository"/>
        <argument key="App\Repository\TaskRepository" type="service" id="App\Repository\TaskRepository"/>
        <argument key="App\Repository\TaskTemplateRepository" type="service" id="App\Repository\TaskTemplateRepository"/>
        <argument key="App\Repository\TemplateRepository" type="service" id="App\Repository\TemplateRepository"/>
        <argument key="App\Repository\TimesheetDetailRepository" type="service" id="App\Repository\TimesheetDetailRepository"/>
        <argument key="App\Repository\TimesheetRepository" type="service" id="App\Repository\TimesheetRepository"/>
      </argument>
    </service>
    <service id="security.logout.handler.csrf_token_clearing" class="Symfony\Component\Security\Http\Logout\CsrfTokenClearingLogoutHandler" public="false">
      <argument type="service" id="security.csrf.token_storage"/>
    </service>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushHandler">
        <argument type="service" id="cloudwatch_handler"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.container_logs"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.console" class="Symfony\Bridge\Monolog\Logger">
      <argument>console</argument>
      <call method="pushHandler">
        <argument type="service" id="cloudwatch_handler"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.container_logs"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.cache" class="Symfony\Bridge\Monolog\Logger">
      <argument>cache</argument>
      <call method="pushHandler">
        <argument type="service" id="cloudwatch_handler"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.container_logs"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.translation" class="Symfony\Bridge\Monolog\Logger">
      <argument>translation</argument>
      <call method="pushHandler">
        <argument type="service" id="cloudwatch_handler"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.container_logs"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.php" class="Symfony\Bridge\Monolog\Logger">
      <argument>php</argument>
      <call method="pushHandler">
        <argument type="service" id="cloudwatch_handler"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.container_logs"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.router" class="Symfony\Bridge\Monolog\Logger">
      <argument>router</argument>
      <call method="pushHandler">
        <argument type="service" id="cloudwatch_handler"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.container_logs"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.messenger" class="Symfony\Bridge\Monolog\Logger">
      <argument>messenger</argument>
      <call method="pushHandler">
        <argument type="service" id="cloudwatch_handler"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.container_logs"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.doctrine" class="Symfony\Bridge\Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushHandler">
        <argument type="service" id="cloudwatch_handler"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.container_logs"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.security" class="Symfony\Bridge\Monolog\Logger">
      <argument>security</argument>
      <call method="pushHandler">
        <argument type="service" id="cloudwatch_handler"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.container_logs"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.handler.null_internal" class="Monolog\Handler\NullHandler"/>
    <service id="liip_monitor.check.php_extensions.default" class="ZendDiagnostics\Check\ExtensionLoaded" public="true">
      <tag name="liip_monitor.check" group="default" alias="php_extensions"/>
      <argument type="collection">
        <argument>mysqlnd</argument>
      </argument>
    </service>
    <service id="liip_monitor.runner_default" class="Liip\MonitorBundle\Runner" public="true">
      <call method="addCheck">
        <argument type="service" id="liip_monitor.check.php_extensions.default"/>
        <argument>php_extensions</argument>
      </call>
    </service>
    <service id=".service_locator.3nNxzEJ" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service" id="translator.default"/>
      </argument>
    </service>
    <service id=".service_locator.3nNxzEJ.translation.warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument>translation.warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.3nNxzEJ" method="withContext"/>
    </service>
    <service id=".service_locator.oNnsU_h" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="routing.loader" type="service" id="routing.loader"/>
      </argument>
    </service>
    <service id=".service_locator.oNnsU_h.router.default" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument>router.default</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.oNnsU_h" method="withContext"/>
    </service>
    <service id=".service_locator.tdKlFgs" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service" id="router.default"/>
      </argument>
    </service>
    <service id=".service_locator.tdKlFgs.router.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument>router.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.tdKlFgs" method="withContext"/>
    </service>
    <service id=".service_locator.UEpceA5" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service" id="twig"/>
      </argument>
    </service>
    <service id=".service_locator.UEpceA5.twig.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument>twig.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.UEpceA5" method="withContext"/>
    </service>
    <service id=".service_locator.UEpceA5.twig.template_cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument>twig.template_cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.UEpceA5" method="withContext"/>
    </service>
    <service id=".service_locator.mxIQ6EJ" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="MsgPhp\Domain\Factory\EntityAwareFactoryInterface" type="service" id="MsgPhp\Domain\Infra\Doctrine\EntityAwareFactory"/>
        <argument key="MsgPhp\User\Repository\UserRepositoryInterface" type="service" id="MsgPhp\User\Infra\Doctrine\Repository\UserRepository" on-invalid="ignore"/>
        <argument key="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" type="service" id="security.token_storage" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.mxIQ6EJ.MsgPhp\UserBundle\Twig\GlobalVariable" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument>MsgPhp\UserBundle\Twig\GlobalVariable</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.mxIQ6EJ" method="withContext"/>
    </service>
    <service id="MsgPhp\Domain\Factory\ClassMappingObjectFactory.inner" class="MsgPhp\Domain\Factory\DomainObjectFactory" public="false">
      <call method="setNestedFactory">
        <argument type="service" id="MsgPhp\Domain\Factory\ClassMappingObjectFactory"/>
      </call>
    </service>
    <service id="MsgPhp\Domain\Infra\Doctrine\EntityAwareFactory.inner" class="MsgPhp\Domain\Factory\EntityAwareFactory" public="false" autowire="true">
      <argument type="service" id="MsgPhp\Domain\Factory\ClassMappingObjectFactory"/>
      <argument type="service" id="MsgPhp\Domain\Infra\Doctrine\DomainIdentityMapping"/>
      <argument>%msgphp.domain.id_class_mapping%</argument>
    </service>
    <service id="debug.security.access.decision_manager.inner" class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager" public="false">
      <argument type="iterator">
        <argument type="service" id="security.access.authenticated_voter"/>
        <argument type="service" id="security.access.role_hierarchy_voter"/>
      </argument>
      <argument>affirmative</argument>
      <argument>false</argument>
      <argument>true</argument>
    </service>
    <service id="debug.traced.messenger.bus.default.inner" class="Symfony\Component\Messenger\MessageBus" public="false">
      <argument type="collection">
        <argument type="service" id="messenger.bus.default.middleware.logging"/>
        <argument type="service" id="messenger.middleware.route_messages"/>
        <argument type="service" id="messenger.bus.default.middleware.call_message_handler"/>
      </argument>
    </service>
    <service id=".service_locator.bvXv01Y" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="MsgPhp\User\Infra\Validator\ExistingUsernameValidator" type="service" id="MsgPhp\User\Infra\Validator\ExistingUsernameValidator"/>
        <argument key="MsgPhp\User\Infra\Validator\UniqueUsernameValidator" type="service" id="MsgPhp\User\Infra\Validator\UniqueUsernameValidator"/>
        <argument key="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" type="service" id="security.validator.user_password"/>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator" type="service" id="validator.email"/>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator" type="service" id="validator.expression"/>
        <argument key="doctrine.orm.validator.unique" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="security.validator.user_password" type="service" id="security.validator.user_password"/>
        <argument key="validator.expression" type="service" id="validator.expression"/>
      </argument>
    </service>
    <service id="console.command_loader" class="Symfony\Component\Console\CommandLoader\ContainerCommandLoader" public="true">
      <argument type="service" id=".service_locator.PIpase1"/>
      <argument type="collection">
        <argument key="about">console.command.about</argument>
        <argument key="assets:install">console.command.assets_install</argument>
        <argument key="cache:clear">console.command.cache_clear</argument>
        <argument key="cache:pool:clear">console.command.cache_pool_clear</argument>
        <argument key="cache:pool:prune">console.command.cache_pool_prune</argument>
        <argument key="cache:pool:delete">console.command.cache_pool_delete</argument>
        <argument key="cache:warmup">console.command.cache_warmup</argument>
        <argument key="debug:config">console.command.config_debug</argument>
        <argument key="config:dump-reference">console.command.config_dump_reference</argument>
        <argument key="debug:container">console.command.container_debug</argument>
        <argument key="debug:autowiring">console.command.debug_autowiring</argument>
        <argument key="debug:event-dispatcher">console.command.event_dispatcher_debug</argument>
        <argument key="messenger:consume-messages">console.command.messenger_consume_messages</argument>
        <argument key="debug:messenger">console.command.messenger_debug</argument>
        <argument key="debug:router">console.command.router_debug</argument>
        <argument key="router:match">console.command.router_match</argument>
        <argument key="debug:translation">console.command.translation_debug</argument>
        <argument key="translation:update">console.command.translation_update</argument>
        <argument key="lint:xliff">console.command.xliff_lint</argument>
        <argument key="lint:yaml">console.command.yaml_lint</argument>
        <argument key="debug:form">console.command.form_debug</argument>
        <argument key="debug:twig">twig.command.debug</argument>
        <argument key="lint:twig">twig.command.lint</argument>
        <argument key="doctrine:database:create">doctrine.database_create_command</argument>
        <argument key="doctrine:database:drop">doctrine.database_drop_command</argument>
        <argument key="doctrine:generate:entities">doctrine.generate_entities_command</argument>
        <argument key="doctrine:query:sql">doctrine.query_sql_command</argument>
        <argument key="doctrine:cache:clear-metadata">doctrine.cache_clear_metadata_command</argument>
        <argument key="doctrine:cache:clear-query">doctrine.cache_clear_query_cache_command</argument>
        <argument key="doctrine:cache:clear-result">doctrine.cache_clear_result_command</argument>
        <argument key="doctrine:cache:clear-collection-region">doctrine.cache_collection_region_command</argument>
        <argument key="doctrine:mapping:convert">doctrine.mapping_convert_command</argument>
        <argument key="doctrine:schema:create">doctrine.schema_create_command</argument>
        <argument key="doctrine:schema:drop">doctrine.schema_drop_command</argument>
        <argument key="doctrine:ensure-production-settings">doctrine.ensure_production_settings_command</argument>
        <argument key="doctrine:cache:clear-entity-region">doctrine.clear_entity_region_command</argument>
        <argument key="doctrine:database:import">doctrine.database_import_command</argument>
        <argument key="doctrine:mapping:info">doctrine.mapping_info_command</argument>
        <argument key="doctrine:cache:clear-query-region">doctrine.clear_query_region_command</argument>
        <argument key="doctrine:query:dql">doctrine.query_dql_command</argument>
        <argument key="doctrine:schema:update">doctrine.schema_update_command</argument>
        <argument key="doctrine:schema:validate">doctrine.schema_validate_command</argument>
        <argument key="doctrine:mapping:import">doctrine.mapping_import_command</argument>
        <argument key="user:role:add">MsgPhp\User\Infra\Console\Command\AddUserRoleCommand</argument>
        <argument key="user:change-credential">MsgPhp\User\Infra\Console\Command\ChangeUserCredentialCommand</argument>
        <argument key="user:create">MsgPhp\User\Infra\Console\Command\CreateUserCommand</argument>
        <argument key="user:delete">MsgPhp\User\Infra\Console\Command\DeleteUserCommand</argument>
        <argument key="user:role:delete">MsgPhp\User\Infra\Console\Command\DeleteUserRoleCommand</argument>
        <argument key="security:encode-password">security.command.user_password_encoder</argument>
        <argument key="monitor:health">liip_monitor.health_check.command</argument>
        <argument key="monitor:list">liip_monitor.list_checks.command</argument>
      </argument>
    </service>
    <service id=".service_locator.PIpase1" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="MsgPhp\User\Infra\Console\Command\AddUserRoleCommand" type="service" id="MsgPhp\User\Infra\Console\Command\AddUserRoleCommand"/>
        <argument key="MsgPhp\User\Infra\Console\Command\ChangeUserCredentialCommand" type="service" id="MsgPhp\User\Infra\Console\Command\ChangeUserCredentialCommand"/>
        <argument key="MsgPhp\User\Infra\Console\Command\CreateUserCommand" type="service" id="MsgPhp\User\Infra\Console\Command\CreateUserCommand"/>
        <argument key="MsgPhp\User\Infra\Console\Command\DeleteUserCommand" type="service" id="MsgPhp\User\Infra\Console\Command\DeleteUserCommand"/>
        <argument key="MsgPhp\User\Infra\Console\Command\DeleteUserRoleCommand" type="service" id="MsgPhp\User\Infra\Console\Command\DeleteUserRoleCommand"/>
        <argument key="console.command.about" type="service" id="console.command.about"/>
        <argument key="console.command.assets_install" type="service" id="console.command.assets_install"/>
        <argument key="console.command.cache_clear" type="service" id="console.command.cache_clear"/>
        <argument key="console.command.cache_pool_clear" type="service" id="console.command.cache_pool_clear"/>
        <argument key="console.command.cache_pool_delete" type="service" id="console.command.cache_pool_delete"/>
        <argument key="console.command.cache_pool_prune" type="service" id="console.command.cache_pool_prune"/>
        <argument key="console.command.cache_warmup" type="service" id="console.command.cache_warmup"/>
        <argument key="console.command.config_debug" type="service" id="console.command.config_debug"/>
        <argument key="console.command.config_dump_reference" type="service" id="console.command.config_dump_reference"/>
        <argument key="console.command.container_debug" type="service" id="console.command.container_debug"/>
        <argument key="console.command.debug_autowiring" type="service" id="console.command.debug_autowiring"/>
        <argument key="console.command.event_dispatcher_debug" type="service" id="console.command.event_dispatcher_debug"/>
        <argument key="console.command.form_debug" type="service" id="console.command.form_debug"/>
        <argument key="console.command.messenger_consume_messages" type="service" id="console.command.messenger_consume_messages"/>
        <argument key="console.command.messenger_debug" type="service" id="console.command.messenger_debug"/>
        <argument key="console.command.router_debug" type="service" id="console.command.router_debug"/>
        <argument key="console.command.router_match" type="service" id="console.command.router_match"/>
        <argument key="console.command.translation_debug" type="service" id="console.command.translation_debug"/>
        <argument key="console.command.translation_update" type="service" id="console.command.translation_update"/>
        <argument key="console.command.xliff_lint" type="service" id="console.command.xliff_lint"/>
        <argument key="console.command.yaml_lint" type="service" id="console.command.yaml_lint"/>
        <argument key="doctrine.cache_clear_metadata_command" type="service" id="doctrine.cache_clear_metadata_command"/>
        <argument key="doctrine.cache_clear_query_cache_command" type="service" id="doctrine.cache_clear_query_cache_command"/>
        <argument key="doctrine.cache_clear_result_command" type="service" id="doctrine.cache_clear_result_command"/>
        <argument key="doctrine.cache_collection_region_command" type="service" id="doctrine.cache_collection_region_command"/>
        <argument key="doctrine.clear_entity_region_command" type="service" id="doctrine.clear_entity_region_command"/>
        <argument key="doctrine.clear_query_region_command" type="service" id="doctrine.clear_query_region_command"/>
        <argument key="doctrine.database_create_command" type="service" id="doctrine.database_create_command"/>
        <argument key="doctrine.database_drop_command" type="service" id="doctrine.database_drop_command"/>
        <argument key="doctrine.database_import_command" type="service" id="doctrine.database_import_command"/>
        <argument key="doctrine.ensure_production_settings_command" type="service" id="doctrine.ensure_production_settings_command"/>
        <argument key="doctrine.generate_entities_command" type="service" id="doctrine.generate_entities_command"/>
        <argument key="doctrine.mapping_convert_command" type="service" id="doctrine.mapping_convert_command"/>
        <argument key="doctrine.mapping_import_command" type="service" id="doctrine.mapping_import_command"/>
        <argument key="doctrine.mapping_info_command" type="service" id="doctrine.mapping_info_command"/>
        <argument key="doctrine.query_dql_command" type="service" id="doctrine.query_dql_command"/>
        <argument key="doctrine.query_sql_command" type="service" id="doctrine.query_sql_command"/>
        <argument key="doctrine.schema_create_command" type="service" id="doctrine.schema_create_command"/>
        <argument key="doctrine.schema_drop_command" type="service" id="doctrine.schema_drop_command"/>
        <argument key="doctrine.schema_update_command" type="service" id="doctrine.schema_update_command"/>
        <argument key="doctrine.schema_validate_command" type="service" id="doctrine.schema_validate_command"/>
        <argument key="liip_monitor.health_check.command" type="service" id="liip_monitor.health_check.command"/>
        <argument key="liip_monitor.list_checks.command" type="service" id="liip_monitor.list_checks.command"/>
        <argument key="security.command.user_password_encoder" type="service" id="security.command.user_password_encoder"/>
        <argument key="twig.command.debug" type="service" id="twig.command.debug"/>
        <argument key="twig.command.lint" type="service" id="twig.command.lint"/>
      </argument>
    </service>
    <service id=".service_locator.uxa.tru" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Twig\Extension\CsrfRuntime" type="service" id="twig.runtime.security_csrf"/>
        <argument key="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" type="service" id="twig.runtime.httpkernel"/>
        <argument key="Symfony\Component\Form\FormRenderer" type="service" id="twig.form.renderer"/>
      </argument>
    </service>
    <service id="Psr\Container\ContainerInterface" alias="service_container" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ContainerInterface" alias="service_container" public="false"/>
    <service id="MsgPhp\Domain\DomainIdentityMappingInterface" alias="MsgPhp\Domain\Infra\Doctrine\DomainIdentityMapping" public="false"/>
    <service id="MsgPhp\Domain\Factory\DomainObjectFactoryInterface" alias="MsgPhp\Domain\Factory\ClassMappingObjectFactory" public="false"/>
    <service id="MsgPhp\Domain\Factory\EntityAwareFactoryInterface" alias="MsgPhp\Domain\Infra\Doctrine\EntityAwareFactory" public="false"/>
    <service id="msgphp.messenger.command_bus" alias="debug.traced.messenger.bus.default" public="false"/>
    <service id="msgphp.messenger.event_bus" alias="debug.traced.messenger.bus.default" public="false"/>
    <service id="MsgPhp\Domain\Message\DomainMessageBusInterface" alias="MsgPhp\Domain\Message\DomainMessageBus" public="false"/>
    <service id="msgphp.doctrine.entity_manager" alias="doctrine.orm.default_entity_manager" public="false"/>
    <service id="MsgPhp\Domain\Infra\Console\Context\ClassContextElementFactoryInterface" alias="app.console.class_context_element_factory" public="false"/>
    <service id="MsgPhp\User\Infra\Security\UserRolesProviderInterface" alias="App\Security\UserRolesProvider" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" alias="parameter_bag" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" alias="parameter_bag" public="false"/>
    <service id="Symfony\Component\EventDispatcher\EventDispatcherInterface" alias="event_dispatcher" public="false"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelInterface" alias="http_kernel" public="false"/>
    <service id="Symfony\Component\HttpFoundation\RequestStack" alias="request_stack" public="false"/>
    <service id="Symfony\Component\HttpKernel\KernelInterface" alias="kernel" public="false"/>
    <service id="Symfony\Component\Filesystem\Filesystem" alias="filesystem" public="false"/>
    <service id="Symfony\Component\HttpKernel\Config\FileLocator" alias="file_locator" public="false"/>
    <service id="cache.app_clearer" alias="cache.default_clearer" public="true"/>
    <service id="Psr\Cache\CacheItemPoolInterface" alias="cache.app" public="false"/>
    <service id="Psr\SimpleCache\CacheInterface" alias="cache.app.simple" public="false"/>
    <service id="Symfony\Component\Cache\Adapter\AdapterInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Component\Translation\TranslatorInterface" alias="translator.default" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\SessionInterface" alias="session" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface" alias="session.storage.native" public="false"/>
    <service id="SessionHandlerInterface" alias="session.handler.native_file" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface" alias="session.flash_bag" public="false"/>
    <service id="session.storage.filesystem" alias="session.storage.mock_file" public="false"/>
    <service id="session.storage" alias="session.storage.native"/>
    <service id="session.handler" alias="session.handler.native_file"/>
    <service id="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" alias="security.csrf.token_generator" public="false"/>
    <service id="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" alias="security.csrf.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" alias="security.csrf.token_manager" public="false"/>
    <service id="Symfony\Component\Form\ResolvedFormTypeFactoryInterface" alias="form.resolved_type_factory" public="false"/>
    <service id="Symfony\Component\Form\FormRegistryInterface" alias="form.registry" public="false"/>
    <service id="Symfony\Component\Form\FormFactoryInterface" alias="form.factory" public="false"/>
    <service id="form.property_accessor" alias="property_accessor" public="false"/>
    <service id="form.choice_list_factory" alias="form.choice_list_factory.cached" public="false"/>
    <service id="Symfony\Component\Asset\Packages" alias="assets.packages" public="false"/>
    <service id="Symfony\Component\Validator\Validator\ValidatorInterface" alias="validator" public="false"/>
    <service id="validator.mapping.class_metadata_factory" alias="validator" public="false"/>
    <service id="Symfony\Component\Translation\Reader\TranslationReaderInterface" alias="translation.reader" public="false"/>
    <service id="Symfony\Component\Translation\Extractor\ExtractorInterface" alias="translation.extractor" public="false"/>
    <service id="Symfony\Component\Translation\Writer\TranslationWriterInterface" alias="translation.writer" public="false"/>
    <service id="translator" alias="translator.default" public="true"/>
    <service id="translator.formatter" alias="translator.formatter.default" public="false"/>
    <service id="cache.default_redis_provider" alias=".cache_connection.GD_MSZC" public="false"/>
    <service id="cache.default_memcached_provider" alias=".cache_connection.JKE6keX" public="false"/>
    <service id="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" alias="debug.file_link_formatter" public="false"/>
    <service id="router" alias="router.default" public="true"/>
    <service id="Symfony\Component\Routing\RouterInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Generator\UrlGeneratorInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Matcher\UrlMatcherInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContextAwareInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContext" alias="router.request_context" public="false"/>
    <service id="annotation_reader" alias="annotations.cached_reader"/>
    <service id="Doctrine\Common\Annotations\Reader" alias="annotations.cached_reader" public="false"/>
    <service id="Symfony\Component\PropertyAccess\PropertyAccessorInterface" alias="property_accessor" public="false"/>
    <service id="messenger.transport.encoder" alias="messenger.transport.serializer"/>
    <service id="messenger.transport.decoder" alias="messenger.transport.serializer"/>
    <service id="message_bus" alias="debug.traced.messenger.bus.default" public="true"/>
    <service id="Symfony\Component\Messenger\MessageBusInterface" alias="debug.traced.messenger.bus.default"/>
    <service id="Twig_Environment" alias="twig" public="false"/>
    <service id="Twig\Environment" alias="twig" public="false"/>
    <service id="Doctrine\DBAL\Driver\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\DBAL\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\Common\Persistence\ManagerRegistry" alias="doctrine" public="false"/>
    <service id="Symfony\Bridge\Doctrine\RegistryInterface" alias="doctrine" public="false"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection" public="true"/>
    <service id="doctrine.dbal.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="Doctrine\Common\Persistence\ObjectManager" alias="doctrine.orm.default_entity_manager" public="false"/>
    <service id="Doctrine\ORM\EntityManagerInterface" alias="doctrine.orm.default_entity_manager" public="false"/>
    <service id="doctrine.orm.metadata.annotation_reader" alias="annotations.cached_reader" public="false"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="doctrine.orm.default_metadata_cache" alias="doctrine.system_cache_provider" public="false"/>
    <service id="doctrine.orm.default_result_cache" alias="doctrine.result_cache_provider" public="false"/>
    <service id="doctrine.orm.default_query_cache" alias="doctrine.system_cache_provider" public="false"/>
    <service id="doctrine.orm.default_entity_manager.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="MsgPhp\User\Password\PasswordHashingInterface" alias="MsgPhp\User\Infra\Security\PasswordHashing" public="false"/>
    <service id="MsgPhp\User\Repository\RoleRepositoryInterface" alias="MsgPhp\User\Infra\Doctrine\Repository\RoleRepository" public="false"/>
    <service id="MsgPhp\User\Repository\UserRepositoryInterface" alias="MsgPhp\User\Infra\Doctrine\Repository\UserRepository" public="false"/>
    <service id="MsgPhp\User\Repository\UserRoleRepositoryInterface" alias="MsgPhp\User\Infra\Doctrine\Repository\UserRoleRepository" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface" alias="security.authorization_checker" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" alias="security.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Core\Security" alias="security.helper" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\AuthenticationManagerInterface" alias="security.authentication.manager" public="false"/>
    <service id="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategyInterface" alias="security.authentication.session_strategy" public="false"/>
    <service id="security.encoder_factory" alias="security.encoder_factory.generic" public="false"/>
    <service id="Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" alias="security.encoder_factory.generic" public="false"/>
    <service id="security.password_encoder" alias="security.user_password_encoder.generic" public="true"/>
    <service id="Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" alias="security.user_password_encoder.generic" public="false"/>
    <service id="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" alias="security.authentication_utils" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface" alias="debug.security.access.decision_manager" public="false"/>
    <service id="Symfony\Component\Security\Core\Role\RoleHierarchyInterface" alias="security.role_hierarchy" public="false"/>
    <service id="Symfony\Component\Security\Http\Firewall" alias="debug.security.firewall" public="false"/>
    <service id="Symfony\Component\Security\Http\HttpUtils" alias="security.http_utils" public="false"/>
    <service id="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" alias="security.authentication.guard_handler" public="false"/>
    <service id="security.firewall" alias="debug.security.firewall" public="false"/>
    <service id="security.user.provider.concrete.cognito" alias="App\Security\CognitoUserProvider" public="false"/>
    <service id="Symfony\Component\Security\Core\User\UserProviderInterface" alias="App\Security\CognitoUserProvider"/>
    <service id="security.authentication.session_strategy.main" alias="security.authentication.session_strategy"/>
    <service id="security.user_checker.main" alias="security.user_checker" public="false"/>
    <service id="Symfony\Component\Security\Core\User\UserCheckerInterface" alias="security.user_checker" public="false"/>
    <service id="Aws\ACMPCA\ACMPCAClient" alias="aws.acmpca"/>
    <service id="Aws\Acm\AcmClient" alias="aws.acm"/>
    <service id="Aws\AlexaForBusiness\AlexaForBusinessClient" alias="aws.alexaforbusiness"/>
    <service id="Aws\ApiGateway\ApiGatewayClient" alias="aws.apigateway"/>
    <service id="Aws\ApplicationAutoScaling\ApplicationAutoScalingClient" alias="aws.applicationautoscaling"/>
    <service id="Aws\Appstream\AppstreamClient" alias="aws.appstream"/>
    <service id="Aws\AppSync\AppSyncClient" alias="aws.appsync"/>
    <service id="Aws\Athena\AthenaClient" alias="aws.athena"/>
    <service id="Aws\AutoScalingPlans\AutoScalingPlansClient" alias="aws.autoscalingplans"/>
    <service id="Aws\AutoScaling\AutoScalingClient" alias="aws.autoscaling"/>
    <service id="Aws\Batch\BatchClient" alias="aws.batch"/>
    <service id="Aws\Budgets\BudgetsClient" alias="aws.budgets"/>
    <service id="Aws\CostExplorer\CostExplorerClient" alias="aws.costexplorer"/>
    <service id="Aws\Cloud9\Cloud9Client" alias="aws.cloud9"/>
    <service id="Aws\CloudDirectory\CloudDirectoryClient" alias="aws.clouddirectory"/>
    <service id="Aws\CloudFormation\CloudFormationClient" alias="aws.cloudformation"/>
    <service id="Aws\CloudFront\CloudFrontClient" alias="aws.cloudfront"/>
    <service id="Aws\CloudHsm\CloudHsmClient" alias="aws.cloudhsm"/>
    <service id="Aws\CloudHSMV2\CloudHSMV2Client" alias="aws.cloudhsmv2"/>
    <service id="Aws\CloudSearch\CloudSearchClient" alias="aws.cloudsearch"/>
    <service id="Aws\CloudSearchDomain\CloudSearchDomainClient" alias="aws.cloudsearchdomain"/>
    <service id="Aws\CloudTrail\CloudTrailClient" alias="aws.cloudtrail"/>
    <service id="Aws\CodeBuild\CodeBuildClient" alias="aws.codebuild"/>
    <service id="Aws\CodeCommit\CodeCommitClient" alias="aws.codecommit"/>
    <service id="Aws\CodeDeploy\CodeDeployClient" alias="aws.codedeploy"/>
    <service id="Aws\CodePipeline\CodePipelineClient" alias="aws.codepipeline"/>
    <service id="Aws\CodeStar\CodeStarClient" alias="aws.codestar"/>
    <service id="Aws\CognitoIdentity\CognitoIdentityClient" alias="aws.cognitoidentity"/>
    <service id="Aws\CognitoIdentityProvider\CognitoIdentityProviderClient" alias="aws.cognitoidentityprovider"/>
    <service id="Aws\CognitoSync\CognitoSyncClient" alias="aws.cognitosync"/>
    <service id="Aws\Comprehend\ComprehendClient" alias="aws.comprehend"/>
    <service id="Aws\ConfigService\ConfigServiceClient" alias="aws.configservice"/>
    <service id="Aws\Connect\ConnectClient" alias="aws.connect"/>
    <service id="Aws\CostandUsageReportService\CostandUsageReportServiceClient" alias="aws.costandusagereportservice"/>
    <service id="Aws\IotDataPlane\IotDataPlaneClient" alias="aws.iotdataplane"/>
    <service id="Aws\DataPipeline\DataPipelineClient" alias="aws.datapipeline"/>
    <service id="Aws\DAX\DAXClient" alias="aws.dax"/>
    <service id="Aws\DeviceFarm\DeviceFarmClient" alias="aws.devicefarm"/>
    <service id="Aws\DirectConnect\DirectConnectClient" alias="aws.directconnect"/>
    <service id="Aws\ApplicationDiscoveryService\ApplicationDiscoveryServiceClient" alias="aws.applicationdiscoveryservice"/>
    <service id="Aws\DatabaseMigrationService\DatabaseMigrationServiceClient" alias="aws.databasemigrationservice"/>
    <service id="Aws\DirectoryService\DirectoryServiceClient" alias="aws.directoryservice"/>
    <service id="Aws\DynamoDb\DynamoDbClient" alias="aws.dynamodb"/>
    <service id="Aws\Ec2\Ec2Client" alias="aws.ec2"/>
    <service id="Aws\Ecr\EcrClient" alias="aws.ecr"/>
    <service id="Aws\Ecs\EcsClient" alias="aws.ecs"/>
    <service id="Aws\ElastiCache\ElastiCacheClient" alias="aws.elasticache"/>
    <service id="Aws\ElasticBeanstalk\ElasticBeanstalkClient" alias="aws.elasticbeanstalk"/>
    <service id="Aws\Efs\EfsClient" alias="aws.efs"/>
    <service id="Aws\ElasticLoadBalancing\ElasticLoadBalancingClient" alias="aws.elasticloadbalancing"/>
    <service id="Aws\ElasticLoadBalancingV2\ElasticLoadBalancingV2Client" alias="aws.elasticloadbalancingv2"/>
    <service id="Aws\Emr\EmrClient" alias="aws.emr"/>
    <service id="Aws\ElasticTranscoder\ElasticTranscoderClient" alias="aws.elastictranscoder"/>
    <service id="Aws\Ses\SesClient" alias="aws.ses"/>
    <service id="Aws\MarketplaceEntitlementService\MarketplaceEntitlementServiceClient" alias="aws.marketplaceentitlementservice"/>
    <service id="Aws\ElasticsearchService\ElasticsearchServiceClient" alias="aws.elasticsearchservice"/>
    <service id="Aws\CloudWatchEvents\CloudWatchEventsClient" alias="aws.cloudwatchevents"/>
    <service id="Aws\Firehose\FirehoseClient" alias="aws.firehose"/>
    <service id="Aws\FMS\FMSClient" alias="aws.fms"/>
    <service id="Aws\GameLift\GameLiftClient" alias="aws.gamelift"/>
    <service id="Aws\Glacier\GlacierClient" alias="aws.glacier"/>
    <service id="Aws\Glue\GlueClient" alias="aws.glue"/>
    <service id="Aws\Greengrass\GreengrassClient" alias="aws.greengrass"/>
    <service id="Aws\GuardDuty\GuardDutyClient" alias="aws.guardduty"/>
    <service id="Aws\Health\HealthClient" alias="aws.health"/>
    <service id="Aws\Iam\IamClient" alias="aws.iam"/>
    <service id="Aws\ImportExport\ImportExportClient" alias="aws.importexport"/>
    <service id="Aws\Inspector\InspectorClient" alias="aws.inspector"/>
    <service id="Aws\IoTJobsDataPlane\IoTJobsDataPlaneClient" alias="aws.iotjobsdataplane"/>
    <service id="Aws\Iot\IotClient" alias="aws.iot"/>
    <service id="Aws\IoTAnalytics\IoTAnalyticsClient" alias="aws.iotanalytics"/>
    <service id="Aws\KinesisVideoArchivedMedia\KinesisVideoArchivedMediaClient" alias="aws.kinesisvideoarchivedmedia"/>
    <service id="Aws\KinesisVideoMedia\KinesisVideoMediaClient" alias="aws.kinesisvideomedia"/>
    <service id="Aws\Kinesis\KinesisClient" alias="aws.kinesis"/>
    <service id="Aws\KinesisAnalytics\KinesisAnalyticsClient" alias="aws.kinesisanalytics"/>
    <service id="Aws\KinesisVideo\KinesisVideoClient" alias="aws.kinesisvideo"/>
    <service id="Aws\Kms\KmsClient" alias="aws.kms"/>
    <service id="Aws\Lambda\LambdaClient" alias="aws.lambda"/>
    <service id="Aws\LexModelBuildingService\LexModelBuildingServiceClient" alias="aws.lexmodelbuildingservice"/>
    <service id="Aws\Lightsail\LightsailClient" alias="aws.lightsail"/>
    <service id="Aws\CloudWatchLogs\CloudWatchLogsClient" alias="aws.cloudwatchlogs"/>
    <service id="Aws\MachineLearning\MachineLearningClient" alias="aws.machinelearning"/>
    <service id="Aws\MarketplaceCommerceAnalytics\MarketplaceCommerceAnalyticsClient" alias="aws.marketplacecommerceanalytics"/>
    <service id="Aws\MediaConvert\MediaConvertClient" alias="aws.mediaconvert"/>
    <service id="Aws\MediaLive\MediaLiveClient" alias="aws.medialive"/>
    <service id="Aws\MediaPackage\MediaPackageClient" alias="aws.mediapackage"/>
    <service id="Aws\MediaStoreData\MediaStoreDataClient" alias="aws.mediastoredata"/>
    <service id="Aws\MediaStore\MediaStoreClient" alias="aws.mediastore"/>
    <service id="Aws\MarketplaceMetering\MarketplaceMeteringClient" alias="aws.marketplacemetering"/>
    <service id="Aws\MigrationHub\MigrationHubClient" alias="aws.migrationhub"/>
    <service id="Aws\Mobile\MobileClient" alias="aws.mobile"/>
    <service id="Aws\CloudWatch\CloudWatchClient" alias="aws.cloudwatch"/>
    <service id="Aws\MQ\MQClient" alias="aws.mq"/>
    <service id="Aws\MTurk\MTurkClient" alias="aws.mturk"/>
    <service id="Aws\OpsWorks\OpsWorksClient" alias="aws.opsworks"/>
    <service id="Aws\OpsWorksCM\OpsWorksCMClient" alias="aws.opsworkscm"/>
    <service id="Aws\Organizations\OrganizationsClient" alias="aws.organizations"/>
    <service id="Aws\Pinpoint\PinpointClient" alias="aws.pinpoint"/>
    <service id="Aws\Polly\PollyClient" alias="aws.polly"/>
    <service id="Aws\Pricing\PricingClient" alias="aws.pricing"/>
    <service id="Aws\Rds\RdsClient" alias="aws.rds"/>
    <service id="Aws\Redshift\RedshiftClient" alias="aws.redshift"/>
    <service id="Aws\Rekognition\RekognitionClient" alias="aws.rekognition"/>
    <service id="Aws\ResourceGroups\ResourceGroupsClient" alias="aws.resourcegroups"/>
    <service id="Aws\ResourceGroupsTaggingAPI\ResourceGroupsTaggingAPIClient" alias="aws.resourcegroupstaggingapi"/>
    <service id="Aws\Route53\Route53Client" alias="aws.route53"/>
    <service id="Aws\Route53Domains\Route53DomainsClient" alias="aws.route53domains"/>
    <service id="Aws\LexRuntimeService\LexRuntimeServiceClient" alias="aws.lexruntimeservice"/>
    <service id="Aws\SageMakerRuntime\SageMakerRuntimeClient" alias="aws.sagemakerruntime"/>
    <service id="Aws\S3\S3Client" alias="aws.s3"/>
    <service id="Aws\SageMaker\SageMakerClient" alias="aws.sagemaker"/>
    <service id="Aws\SecretsManager\SecretsManagerClient" alias="aws.secretsmanager"/>
    <service id="Aws\ServerlessApplicationRepository\ServerlessApplicationRepositoryClient" alias="aws.serverlessapplicationrepository"/>
    <service id="Aws\ServiceCatalog\ServiceCatalogClient" alias="aws.servicecatalog"/>
    <service id="Aws\ServiceDiscovery\ServiceDiscoveryClient" alias="aws.servicediscovery"/>
    <service id="Aws\Shield\ShieldClient" alias="aws.shield"/>
    <service id="Aws\Sms\SmsClient" alias="aws.sms"/>
    <service id="Aws\SnowBall\SnowBallClient" alias="aws.snowball"/>
    <service id="Aws\Sns\SnsClient" alias="aws.sns"/>
    <service id="Aws\Sqs\SqsClient" alias="aws.sqs"/>
    <service id="Aws\Ssm\SsmClient" alias="aws.ssm"/>
    <service id="Aws\Sfn\SfnClient" alias="aws.sfn"/>
    <service id="Aws\StorageGateway\StorageGatewayClient" alias="aws.storagegateway"/>
    <service id="Aws\DynamoDbStreams\DynamoDbStreamsClient" alias="aws.dynamodbstreams"/>
    <service id="Aws\Sts\StsClient" alias="aws.sts"/>
    <service id="Aws\Support\SupportClient" alias="aws.support"/>
    <service id="Aws\Swf\SwfClient" alias="aws.swf"/>
    <service id="Aws\TranscribeService\TranscribeServiceClient" alias="aws.transcribeservice"/>
    <service id="Aws\Translate\TranslateClient" alias="aws.translate"/>
    <service id="Aws\WafRegional\WafRegionalClient" alias="aws.wafregional"/>
    <service id="Aws\Waf\WafClient" alias="aws.waf"/>
    <service id="Aws\WorkDocs\WorkDocsClient" alias="aws.workdocs"/>
    <service id="Aws\WorkMail\WorkMailClient" alias="aws.workmail"/>
    <service id="Aws\WorkSpaces\WorkSpacesClient" alias="aws.workspaces"/>
    <service id="Aws\XRay\XRayClient" alias="aws.xray"/>
    <service id="logger" alias="monolog.logger"/>
    <service id="Psr\Log\LoggerInterface" alias="monolog.logger" public="false"/>
    <service id="monolog.handler.cloudwatch" alias="cloudwatch_handler"/>
    <service id="Liip\MonitorBundle\Controller\HealthCheckController" alias="liip_monitor.health_controller" public="true"/>
    <service id="argument_resolver.controller_locator" alias=".service_locator.M57YtTF"/>
    <service id="twig.loader.filesystem" alias="twig.loader.native_filesystem" public="false"/>
    <service id="twig.loader" alias="twig.loader.native_filesystem"/>
    <service id="liip_monitor.runner" alias="liip_monitor.runner_default" public="true"/>
    <service id=".service_locator.AoifO_3" alias=".2_ServiceLocator~H3bU72x" public="false"/>
    <service id=".service_locator.YUq96kP" alias="messenger.sender_locator" public="false"/>
    <service id=".service_locator.jD4_ZG7" alias=".1_ServiceLocator~LTJqqPT" public="false"/>
    <service id="MsgPhp\Domain\Factory\DomainObjectFactory" alias="MsgPhp\Domain\Factory\ClassMappingObjectFactory" public="false"/>
    <service id="MsgPhp\Domain\Factory\EntityAwareFactory" alias="MsgPhp\Domain\Infra\Doctrine\EntityAwareFactory" public="false"/>
    <service id="app.console.class_context_element_factory.inner" alias="MsgPhp\Domain\Infra\Console\Context\ClassContextElementFactory" public="false"/>
    <service id="security.access.decision_manager" alias="debug.security.access.decision_manager" public="false"/>
    <service id="messenger.bus.default" alias="debug.traced.messenger.bus.default"/>
    <service id="console.command.public_alias.doctrine_cache.contains_command" alias="doctrine_cache.contains_command" public="true"/>
    <service id="console.command.public_alias.doctrine_cache.delete_command" alias="doctrine_cache.delete_command" public="true"/>
    <service id="console.command.public_alias.doctrine_cache.flush_command" alias="doctrine_cache.flush_command" public="true"/>
    <service id="console.command.public_alias.doctrine_cache.stats_command" alias="doctrine_cache.stats_command" public="true"/>
  </services>
</container>
